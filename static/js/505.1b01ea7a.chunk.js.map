{"version":3,"file":"static/js/505.1b01ea7a.chunk.js","mappings":"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","sources":["components/lps/single/documents/CompaniesTable.tsx","components/lps/single/documents/ContractsTable.tsx","components/lps/single/documents/ReportsTable.tsx","components/shared/DatePicker.tsx","components/shared/EditButton.tsx","components/shared/editPopup/lpsEditDialogContents/basic/GeneralInformationStepContent.tsx","components/shared/editPopup/lpsEditDialogContents/basic/LPFinancialsStepContent.tsx","components/shared/editPopup/lpsEditDialogContents/basic/KPIAndIRRStepContent.tsx","components/shared/editPopup/lpsEditDialogContents/basic/LPCommitmentsStepContentTable.tsx","components/shared/editPopup/lpsEditDialogContents/basic/LPFundsStepContentTable.tsx","components/shared/editPopup/lpsEditDialogContents/basic/LPPCOsStepContentTable.tsx","components/shared/editPopup/lpsEditDialogContents/basic/LPExitsStepContentTable.tsx","components/shared/addPopup/pcosAddDialogContents/AddNewPCOInvestment.tsx","components/shared/addPopup/pcosAddDialogContents/AddNewInvestmentFromLP.tsx","components/shared/addPopup/lpsAddDialoContents/AddNewLPCommitment.tsx","components/shared/addPopup/lpsAddDialoContents/AddNewLPToPCOInvestment.tsx","components/shared/addPopup/lpsAddDialoContents/AddNewLPExit.tsx","components/shared/addPopup/fundsAddDialogsContents/AddNewFundCommitment.tsx","components/shared/addPopup/fundsAddDialogsContents/AddNewFundToPCOInvetsment.tsx","components/shared/addPopup/fundsAddDialogsContents/AddNewFundExit.tsx","components/shared/addPopup/AddChildDialog.tsx","components/shared/editPopup/pcosEditDialogContents/basic/commitmnetsChildEdit/PCOInvestmentEditContent.tsx","components/shared/editPopup/pcosEditDialogContents/basic/commitmnetsChildEdit/PCOLPEditContent.tsx","components/shared/editPopup/pcosEditDialogContents/basic/commitmnetsChildEdit/PCOFundCInvestmentEditContent.tsx","components/shared/editPopup/lpsEditDialogContents/commitmentsChildEdit/LPCommitmentEditContent.tsx","components/shared/editPopup/lpsEditDialogContents/commitmentsChildEdit/LPFundsEditContent.tsx","components/shared/editPopup/lpsEditDialogContents/commitmentsChildEdit/LPPCOsEditContent.tsx","components/shared/editPopup/lpsEditDialogContents/commitmentsChildEdit/LPExitsEditContent.tsx","components/shared/editPopup/fundsEditDialogContents/commitmentsChildEdit/FundCommitmentsEditContent.tsx","components/shared/editPopup/fundsEditDialogContents/commitmentsChildEdit/FundLPsEditContent.tsx","components/shared/editPopup/fundsEditDialogContents/commitmentsChildEdit/FundPCOsEditContent.tsx","components/shared/editPopup/fundsEditDialogContents/commitmentsChildEdit/FundExitsEditContent.tsx","components/shared/editPopup/EditChildDialog.tsx","components/shared/editPopup/lpsEditDialogContents/basic/CommitmentsStepContent.tsx","components/shared/editPopup/lpsEditDialogContents/basic/LPBasicEditContent.tsx","components/shared/editPopup/fundsEditDialogContents/basic/GeneralInformationStepContent.tsx","components/shared/editPopup/fundsEditDialogContents/basic/FundCommitmentsStepContentTable.tsx","components/shared/editPopup/fundsEditDialogContents/basic/FundLPsStepContentTable.tsx","components/shared/editPopup/fundsEditDialogContents/basic/FundPCOsStepContentTable.tsx","components/shared/editPopup/fundsEditDialogContents/basic/FundExitsStepContentTable.tsx","components/shared/editPopup/fundsEditDialogContents/basic/CommitmentsStepContent.tsx","components/shared/editPopup/fundsEditDialogContents/basic/FundFinancialsStepContent.tsx","components/shared/editPopup/fundsEditDialogContents/basic/KPIAndIRRStepContent.tsx","components/shared/editPopup/fundsEditDialogContents/basic/FundBasicEditContent.tsx","components/shared/editPopup/pcosEditDialogContents/basic/GeneralInformationStepContent.tsx","components/shared/editPopup/pcosEditDialogContents/basic/PCOInvestmentsStepContentTable.tsx","components/shared/editPopup/pcosEditDialogContents/basic/PCOLPSStepContentTaple.tsx","components/shared/editPopup/pcosEditDialogContents/basic/PCOFundsStepContentTable.tsx","components/shared/editPopup/pcosEditDialogContents/basic/InvestmentsStepContent.tsx","components/shared/editPopup/pcosEditDialogContents/basic/PCOFinancialsStepContent.tsx","components/shared/editPopup/pcosEditDialogContents/basic/PCOBasicEditContent.tsx","components/shared/editPopup/EditPopupDialog.tsx","services/cashCalls/CashCallService.ts","redux/thunks/cashCallsThunk.ts","services/distributions/DistributionsService.ts","redux/thunks/distributionsThunk.ts","services/transactions/TransactionService.ts","redux/thunks/transactionsThunk.ts"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, useTheme } from '@mui/material';\r\nimport { useAppDispatch } from '../../../../redux/store';\r\nimport { RootState } from '../../../../redux/slices/rootSlice';\r\nimport { fetchCashCalls } from '../../../../redux/thunks/cashCallsThunk';\r\nimport { ContractDocument } from '../../../../models/documents/documentsModels';\r\n\r\nconst CompaniesTable = () => {\r\n    const dispatch = useAppDispatch();\r\n    const { selectedLP } = useSelector((state: RootState) => state.lps);\r\n    const theme = useTheme();\r\n    const [rowData, setRowData] = useState<ContractDocument[]>([]);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchCashCalls());\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        setRowData([]);\r\n    }, [selectedLP])\r\n\r\n    return (\r\n        <Paper sx={{ flex: 1, display: 'flex', height: '100%' }}>\r\n            <TableContainer component={Paper} sx={{ minWidth: 700, height: '100%', flex: 1, minHeight: '32em' }}>\r\n                <Table stickyHeader aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell sx={{\r\n                                backgroundColor: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[800],\r\n                                fontFamily: 'Raleway',\r\n                                color: theme.palette.text.primary,\r\n                                width: '30%'\r\n                            }} align=\"left\">Company</TableCell>\r\n                            <TableCell sx={{\r\n                                backgroundColor: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[800],\r\n                                fontFamily: 'Raleway',\r\n                                color: theme.palette.text.primary,\r\n                                width: '50%'\r\n                            }} align=\"left\">Document Name</TableCell>\r\n                            <TableCell sx={{\r\n                                backgroundColor: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[800],\r\n                                fontFamily: 'Raleway',\r\n                                color: theme.palette.text.primary,\r\n                                width: '20%'\r\n                            }} align=\"left\">Date</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rowData.map((row) => (\r\n                            <TableRow key={`${row.shortDocumentName}-${row.documentName}`}>\r\n                                <TableCell align=\"left\">\r\n                                    {row.shortDocumentName}\r\n                                </TableCell>\r\n                                <TableCell align=\"left\">{row.documentName}</TableCell>\r\n                                <TableCell align=\"left\">{row.date}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Paper>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default CompaniesTable;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, useTheme } from '@mui/material';\r\nimport { useAppDispatch } from '../../../../redux/store';\r\nimport { RootState } from '../../../../redux/slices/rootSlice';\r\nimport { fetchCashCalls } from '../../../../redux/thunks/cashCallsThunk';\r\nimport { ContractDocument } from '../../../../models/documents/documentsModels';\r\n\r\nconst ContractsTable = () => {\r\n    const dispatch = useAppDispatch();\r\n    const { selectedLP } = useSelector((state: RootState) => state.lps);\r\n    const theme = useTheme();\r\n    const [rowData, setRowData] = useState<ContractDocument[]>([]);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchCashCalls());\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        setRowData([]);\r\n    }, [selectedLP])\r\n\r\n    return (\r\n        <Paper sx={{ flex: 1, display: 'flex', height: '100%' }}>\r\n            <TableContainer component={Paper} sx={{ minWidth: 700, height: '100%', flex: 1, minHeight: '32em' }}>\r\n                <Table stickyHeader aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell sx={{\r\n                                backgroundColor: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[800],\r\n                                fontFamily: 'Raleway',\r\n                                color: theme.palette.text.primary,\r\n                                width: '30%'\r\n                            }} align=\"left\">Contracts</TableCell>\r\n                            <TableCell sx={{\r\n                                backgroundColor: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[800],\r\n                                fontFamily: 'Raleway',\r\n                                color: theme.palette.text.primary,\r\n                                width: '50%'\r\n                            }} align=\"left\">Document Name</TableCell>\r\n                            <TableCell sx={{\r\n                                backgroundColor: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[800],\r\n                                fontFamily: 'Raleway',\r\n                                color: theme.palette.text.primary,\r\n                                width: '20%'\r\n                            }} align=\"left\">Date</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rowData.map((row) => (\r\n                            <TableRow key={`${row.shortDocumentName}-${row.documentName}`}>\r\n                                <TableCell align=\"left\">\r\n                                    {row.shortDocumentName}\r\n                                </TableCell>\r\n                                <TableCell align=\"left\">{row.documentName}</TableCell>\r\n                                <TableCell align=\"left\">{row.date}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Paper>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default ContractsTable;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, useTheme } from '@mui/material';\r\nimport { useAppDispatch } from '../../../../redux/store';\r\nimport { RootState } from '../../../../redux/slices/rootSlice';\r\nimport { fetchCashCalls } from '../../../../redux/thunks/cashCallsThunk';\r\nimport { ContractDocument } from '../../../../models/documents/documentsModels';\r\n\r\nconst ReportsTable = () => {\r\n    const dispatch = useAppDispatch();\r\n    const { selectedLP } = useSelector((state: RootState) => state.lps);\r\n    const theme = useTheme();\r\n    const [rowData, setRowData] = useState<ContractDocument[]>([]);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchCashCalls());\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        setRowData([]);\r\n    }, [selectedLP])\r\n\r\n    return (\r\n        <Paper sx={{ flex: 1, display: 'flex', height: '100%' }}>\r\n            <TableContainer component={Paper} sx={{ minWidth: 700, height: '100%', flex: 1, minHeight: '32em' }}>\r\n                <Table stickyHeader aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell sx={{\r\n                                backgroundColor: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[800],\r\n                                fontFamily: 'Raleway',\r\n                                color: theme.palette.text.primary,\r\n                                width: '20%'\r\n                            }} align=\"left\">Report</TableCell>\r\n                            <TableCell sx={{\r\n                                backgroundColor: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[800],\r\n                                fontFamily: 'Raleway',\r\n                                color: theme.palette.text.primary,\r\n                                width: '40%'\r\n                            }} align=\"left\">Document Name</TableCell>\r\n                            <TableCell sx={{\r\n                                backgroundColor: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[800],\r\n                                fontFamily: 'Raleway',\r\n                                color: theme.palette.text.primary,\r\n                                width: '30%'\r\n                            }} align=\"left\">Type</TableCell>\r\n                            <TableCell sx={{\r\n                                backgroundColor: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[800],\r\n                                fontFamily: 'Raleway',\r\n                                color: theme.palette.text.primary,\r\n                                width: '10%'\r\n                            }} align=\"left\">Date</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rowData.map((row) => (\r\n                            <TableRow key={`${row.shortDocumentName}-${row.documentName}`}>\r\n                                <TableCell align=\"left\">\r\n                                    {row.shortDocumentName}\r\n                                </TableCell>\r\n                                <TableCell align=\"left\">{row.documentName}</TableCell>\r\n                                <TableCell align=\"left\">{row.date}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Paper>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default ReportsTable;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Moment } from 'moment';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport { Theme } from '@mui/material/styles';\r\nimport createStyles from '@mui/styles/createStyles';\r\nimport { TextField } from '@mui/material';\r\nimport { DatePicker } from '@mui/x-date-pickers';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        datePickers: {\r\n            width: '100%',\r\n            flex: 1,\r\n        },\r\n        textField: {\r\n            width: '222px',\r\n            backgroundColor: theme.palette.background.paper,\r\n            borderColor: theme.palette.text.primary,\r\n            color: theme.palette.text.primary,\r\n            borderRadius: 5,\r\n            '& .MuiSvgIcon-root':\r\n            {\r\n                color: theme.palette.text.primary\r\n            },\r\n\r\n            '& label': {\r\n                '&.Mui-focused': {\r\n                    color: theme.palette.text.primary\r\n                }\r\n            },\r\n        }\r\n    }),\r\n);\r\n\r\ninterface Props {\r\n    disabled?: boolean,\r\n    isStartDate?: boolean,\r\n    minDate?: Date | Moment,\r\n    maxDate?: Date | Moment | number,\r\n    onChange: (date?: Moment) => void\r\n    mask?: string\r\n    helperText?: string\r\n    error?: boolean\r\n    label?: string\r\n    defaultValue?: Date | Moment,\r\n}\r\n\r\nconst DatePickerComponent = ({\r\n    label,\r\n    error,\r\n    helperText,\r\n    mask,\r\n    disabled,\r\n    minDate,\r\n    maxDate,\r\n    isStartDate,\r\n    onChange,\r\n    defaultValue,\r\n}: Props): JSX.Element => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(null);\r\n\r\n    /**\r\n     * Sets the new selected value\r\n     * @param date\r\n     */\r\n    const onValueChange = (date: any) => {\r\n        setValue(date);\r\n    };\r\n\r\n    /**\r\n     * Calls the method in the parent component when value is changed\r\n     */\r\n    useEffect(() => {\r\n        if (value) {\r\n            onChange(value);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    /**\r\n     * Sets the styles of the date picker from mui\r\n     \r\n    const popperSx: SxProps = {\r\n        '& .MuiPaper-root': {\r\n            border: `1px solid ${theme.palette.text.primary}`,\r\n            // backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            '& .Mui-selected:hover': {\r\n                color: 'white',\r\n                backgroundColor: theme.palette.warning.main\r\n            },\r\n            '& .Mui-selected': {\r\n                color: 'white',\r\n                backgroundColor: theme.palette.warning.main\r\n            },\r\n        },\r\n        '& .MuiTypography-root': {\r\n            color: theme.palette.text.primary,\r\n        },\r\n        '& .MuiPickersDay-root': {\r\n            //backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n        },\r\n        '& .MuiButtonBase-root': {\r\n            color: theme.palette.text.primary,\r\n            '&:disabled': {\r\n                color: theme.palette.mode === 'dark' ? darken(theme.palette.text.primary, 0.5) : lighten(theme.palette.text.primary, 0.5)\r\n            },\r\n        },\r\n        '& .MuiDatePickerToolbar-root': {\r\n            color: 'white',\r\n            backgroundColor: theme.palette.primary.main,\r\n            '& .MuiTypography-root': {\r\n                color: 'white'\r\n            },\r\n            '& .MuiPickersToolbar-penIconButton': {\r\n                display: 'none'\r\n            }\r\n        }\r\n    }; */\r\n\r\n    return (\r\n        <DatePicker\r\n            className={classes.datePickers}\r\n            inputFormat={'dd/MM/yyyy'}\r\n            value={value ? value : defaultValue ?? null}\r\n            onChange={onValueChange}\r\n            disableFuture\r\n            disableHighlightToday\r\n            minDate={minDate}\r\n            disabled={disabled}\r\n            maxDate={maxDate}\r\n            renderInput={(props: any) =>\r\n                <TextField {...props}\r\n                    mask={mask}\r\n                    label={label ? label : isStartDate ? 'From' : 'To'}\r\n                    variant={'outlined'}\r\n                    size={'small'}\r\n                    error={error}\r\n                    helperText={helperText}\r\n                    className={classes.textField}\r\n                />}\r\n        />\r\n    );\r\n};\r\n\r\nexport default DatePickerComponent;\r\n\r\n","import React from 'react';\r\nimport { Fab, Tooltip } from '@mui/material';\r\nimport { Theme } from '@mui/material/styles';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { useAppDispatch } from '../../redux/store';\r\nimport { setEditDiaogOpen } from '../../redux/slices/appSlice';\r\nimport EditRoundedIcon from '@mui/icons-material/EditRounded';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n({\r\n    fabIcon: {\r\n        marginLeft: 10,\r\n        alignSelf: 'center',\r\n    },\r\n})\r\n);\r\n\r\ninterface EditButtonProps {\r\n    pageName: string,\r\n}\r\n\r\nconst EditButton = ({ pageName }: EditButtonProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n\r\n    const openEditDialog = async () => {\r\n        dispatch(setEditDiaogOpen(true));\r\n    };\r\n\r\n    return <Tooltip title={pageName}>\r\n        <span>\r\n            <Fab\r\n                color={'primary'}\r\n                size=\"small\"\r\n                sx={{ boxShadow: 'none', alignSelf: 'end' }}\r\n                aria-label=\"editBtn\"\r\n                onFocus={(e: any) => (e.target.blur())}\r\n                onClick={() => openEditDialog()}\r\n                className={classes.fabIcon}>\r\n                <EditRoundedIcon />\r\n            </Fab>\r\n        </span>\r\n    </Tooltip>\r\n};\r\n\r\nexport default EditButton;\r\n\r\n","import { Autocomplete, AutocompleteRenderInputParams, Box, Divider, Fab, Grid, IconButton, InputAdornment, TextField, Typography } from '@mui/material';\r\nimport { useCallback, useState } from 'react';\r\nimport { Theme } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport { GridApi } from 'ag-grid-community';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { CountryList } from '../../../../../models/shared/sharedModels';\r\nimport { LP, NewLP } from '../../../../../models/lps/lpModels';\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { DatePicker } from '@mui/x-date-pickers';\r\nimport moment from 'moment';\r\n\r\nconst autocompleteInputStyles = makeStyles((theme: Theme) => ({\r\n    autocomplete: {\r\n        'borderRadius': 5,\r\n        'backgroundColor': theme.palette.background.paper,\r\n        '& input::placeholder': {\r\n            color: theme.palette.text.primary\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: theme.palette.text.primary,\r\n            opacity: 0.8\r\n        }\r\n    },\r\n    textInput: {\r\n        'color': theme.palette.text.primary,\r\n        'fontWeight': 800,\r\n        'fontFamily': 'Raleway',\r\n        height: '2.2em',\r\n        /* 'height': '2.5em', */\r\n        'fontSize': 10,\r\n        '& .MuiIconButton-label': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chart: {\r\n            flex: 1,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n        },\r\n        fabIcon: {\r\n            marginLeft: 10,\r\n            alignSelf: 'center',\r\n        },\r\n        searchBox: {\r\n            width: '440px',\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        datePickers: {\r\n            width: '100%',\r\n            flex: 1,\r\n        },\r\n        textField: {\r\n            width: '440px',\r\n            backgroundColor: theme.palette.background.paper,\r\n            borderColor: theme.palette.text.primary,\r\n            color: theme.palette.text.primary,\r\n            borderRadius: 5,\r\n            '& .MuiSvgIcon-root':\r\n            {\r\n                color: theme.palette.text.primary\r\n            },\r\n\r\n            '& label': {\r\n                '&.Mui-focused': {\r\n                    color: theme.palette.text.primary\r\n                }\r\n            },\r\n        },\r\n        textFildsSmall: {\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        inputRoot: {\r\n            height: '1em',\r\n            'borderRadius': 5,\r\n            'backgroundColor': 'transparent',\r\n            /*         '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'black'\r\n                    },*/\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.primary.main\r\n            },\r\n            /*  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'black'\r\n              }, */\r\n            '& .MuiChip-root': {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: 'transparent',\r\n                borderRadius: 5\r\n            },\r\n            '& .MuiChip-deleteIconSmall': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        option: {\r\n            'background': theme.palette.background.paper,\r\n            '&:hover': {\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 400,\r\n                fontFamily: 'Raleway'\r\n            },\r\n            '&[aria-selected=\"true\"]': {\r\n                background: theme.palette.background.paper,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 700,\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        popupIndicator: {\r\n            '&.MuiIconButton-root': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        clearIndicator: {\r\n            color: theme.palette.text.primary\r\n        },\r\n    }),\r\n);\r\nconst LPTypes = [\r\n    \"Corporate\",\r\n    \"General Partner\",\r\n    \"Individual\",\r\n    \"Institutional\",\r\n];\r\n\r\ninterface GeneralInformationStepContentProps {\r\n    selectedLP: LP | null,\r\n    setSelectedLP: React.Dispatch<React.SetStateAction<LP | null>>,\r\n    disabled: boolean,\r\n    setDisabled: any\r\n}\r\n\r\nconst GeneralInformationStepContentComponent = ({ selectedLP, setSelectedLP, disabled, setDisabled }: GeneralInformationStepContentProps) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const autocompleteInputClasses = autocompleteInputStyles();\r\n    const [domicile, setDomicile] = useState<string | null>(selectedLP?.country ?? '');\r\n    const [mainContact, setmainContact] = useState<string | null>(selectedLP?.mainContact ?? '');\r\n    const [relationshipPartner, setRelationshipPartner] = useState<string>(selectedLP?.relationshipPartner ?? '');\r\n    const [relationshipSS, setRelationshipSS] = useState<string>(selectedLP?.relationshipSS ?? '');\r\n    const [address, setAddress] = useState<string>(selectedLP?.address ? selectedLP.address?.split(',')[0] : '');\r\n    const [city, setCity] = useState<string>(selectedLP?.city ? selectedLP.city : selectedLP?.address ? selectedLP.address?.split(',')[1].split(' ')[2] : '');\r\n    const [postalCode, setPostalCode] = useState<string | number>(selectedLP?.postalCode ? selectedLP.postalCode : selectedLP?.address ? selectedLP.address?.split(',')[1].split(' ')[1] : '');\r\n    const [firstInvestment, setFirstInvestment] = useState<string>(selectedLP?.firstInvestment ?? '');\r\n    const [website, setWebsite] = useState<string>(selectedLP?.website ?? '');\r\n    const [type, setType] = useState<string | null>(selectedLP?.type ?? '');\r\n\r\n    const onValueChange = (value: string, field: string) => {\r\n        if (selectedLP) {\r\n            switch (field) {\r\n                case 'domicile':\r\n                    setDomicile(value);\r\n                    setSelectedLP({\r\n                        ...selectedLP,\r\n                        country: value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'address':\r\n                    setAddress(value);\r\n                    setSelectedLP({\r\n                        ...selectedLP,\r\n                        address: value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'city':\r\n                    setCity(value);\r\n                    setSelectedLP({\r\n                        ...selectedLP,\r\n                        city: value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'postalCode':\r\n                    setPostalCode(value);\r\n                    setSelectedLP({\r\n                        ...selectedLP,\r\n                        postalCode: value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'type':\r\n                    setType(value);\r\n                    setSelectedLP({\r\n                        ...selectedLP,\r\n                        type: value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'website':\r\n                    setWebsite(value);\r\n                    setSelectedLP({\r\n                        ...selectedLP,\r\n                        website: value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'mainContact':\r\n                    setmainContact(value);\r\n                    setSelectedLP({\r\n                        ...selectedLP,\r\n                        mainContact: value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'relationshipPartner':\r\n                    setRelationshipPartner(value);\r\n                    setSelectedLP({\r\n                        ...selectedLP,\r\n                        relationshipPartner: value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'relationshipSS':\r\n                    setRelationshipSS(value);\r\n                    setSelectedLP({\r\n                        ...selectedLP,\r\n                        relationshipSS: value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    const onDateChange = (value: any, field: string) => {\r\n        if (field === 'firstInvestment') {\r\n            setFirstInvestment(value);\r\n            if (selectedLP) {\r\n                setSelectedLP({\r\n                    ...selectedLP,\r\n                    firstInvestment: value\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{ flex: 1, width: '100%', marginTop: '0.2em' }}>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label='Domicile'\r\n                        aria-label=\"name\"\r\n                        value={domicile}\r\n                        onChange={(e) => onValueChange(e.target.value, 'domicile')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label='Address'\r\n                        aria-label=\"name\"\r\n                        value={address}\r\n                        onChange={(e) => onValueChange(e.target.value, 'address')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid container item sx={{ display: 'flex', justifyContent: 'space-between', flex: 1 }} spacing={4}>\r\n                <Grid item xs={8}>\r\n                    <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '280px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                        <TextField\r\n                            className={classes.textFildsSmall}\r\n                            sx={{ width: '280px' }}\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            label='City'\r\n                            aria-label=\"city\"\r\n                            value={city}\r\n                            onChange={(e) => onValueChange(e.target.value, 'city')}\r\n                            inputProps={{\r\n                                style: { height: '1em' },\r\n                            }}\r\n                            InputLabelProps={{\r\n                                sx: {\r\n                                    fontSize: 'small'\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, minWidth: '130px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                        <TextField\r\n                            className={classes.textFildsSmall}\r\n                            variant=\"outlined\"\r\n                            sx={{ minWidth: '130px' }}\r\n                            size=\"small\"\r\n                            aria-label=\"city\"\r\n                            label='Postal Code'\r\n                            value={postalCode}\r\n                            onChange={(e) => onValueChange(e.target.value, 'postalCode')}\r\n                            inputProps={{\r\n                                style: { height: '1em' },\r\n                            }}\r\n                            InputLabelProps={{\r\n                                sx: {\r\n                                    fontSize: 'small'\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"website\"\r\n                        label='Website'\r\n                        value={website}\r\n                        onChange={(e) => onValueChange(e.target.value, 'website')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Divider sx={{ marginTop: '1.5em', marginBottom: '0.5em', marginLeft: '1em', minWidth: '440px' }} />\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '440px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <DatePicker\r\n                        className={classes.datePickers}\r\n                        inputFormat={'dd/MM/yyyy'}\r\n                        disableFuture\r\n                        value={firstInvestment ? moment(new Date(firstInvestment)).format('DD MMM YYYY') : null}\r\n                        disableHighlightToday\r\n                        onChange={(e) => onDateChange(e ?? '', 'firstInvestment')}\r\n                        renderInput={(props: any) =>\r\n                            <TextField {...props}\r\n                                label={'First Investment'}\r\n                                variant={'outlined'}\r\n                                size={'small'}\r\n                                className={classes.textField}\r\n                                InputLabelProps={{\r\n                                    sx: {\r\n                                        fontSize: 'small'\r\n                                    }\r\n                                }}\r\n                            />}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '440px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <Autocomplete\r\n                        id={'fundsAutocomplete'}\r\n                        popupIcon={<ExpandMoreIcon />}\r\n                        size={'small'}\r\n                        autoHighlight={true}\r\n                        autoSelect={true}\r\n                        autoComplete={false}\r\n                        classes={classes}\r\n                        sx={{ marginRight: '1em', width: '440px' }}\r\n                        isOptionEqualToValue={(option, value) => option === value}\r\n                        value={type ?? ''}\r\n                        onChange={(e, value: any) => onValueChange(value, 'type')}\r\n                        options={LPTypes.slice()}\r\n                        renderInput={(params: AutocompleteRenderInputParams) => {\r\n                            params.InputProps.className = autocompleteInputClasses.textInput;\r\n                            return <TextField {...params}\r\n                                className={autocompleteInputClasses.autocomplete}\r\n                                variant=\"outlined\"\r\n                                autoComplete=\"off\"\r\n                                label='Type'\r\n                                type={'text'}\r\n                                InputLabelProps={{\r\n                                    sx: {\r\n                                        fontSize: 'small'\r\n                                    }\r\n                                }}\r\n                            />;\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Divider sx={{ marginTop: '1.5em', marginBottom: '0.5em', marginLeft: '1em', minWidth: '440px' }} />\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"baseCapital\"\r\n                        label='Main Contact'\r\n                        value={mainContact}\r\n                        onChange={(e) => onValueChange(e.target.value, 'mainContact')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"website\"\r\n                        label='Relationship Partner'\r\n                        value={relationshipPartner}\r\n                        onChange={(e) => onValueChange(e.target.value, 'relationshipPartner')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"website\"\r\n                        label='Relationship SS'\r\n                        value={relationshipSS}\r\n                        onChange={(e) => onValueChange(e.target.value, 'relationshipSS')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default GeneralInformationStepContentComponent;","import { Autocomplete, AutocompleteRenderInputParams, Box, Divider, Fab, Grid, IconButton, InputAdornment, TextField, Typography } from '@mui/material';\r\nimport { useCallback, useState } from 'react';\r\nimport { Theme } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport { GridApi } from 'ag-grid-community';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { CountryList } from '../../../../../models/shared/sharedModels';\r\nimport { LP, NewLP } from '../../../../../models/lps/lpModels';\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { DatePicker } from '@mui/x-date-pickers';\r\nimport { amountValueFormatter } from '../../../../../helpers/app';\r\n\r\nconst autocompleteInputStyles = makeStyles((theme: Theme) => ({\r\n    autocomplete: {\r\n        'borderRadius': 5,\r\n        'backgroundColor': theme.palette.background.paper,\r\n        '& input::placeholder': {\r\n            color: theme.palette.text.primary\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: theme.palette.text.primary,\r\n            opacity: 0.8\r\n        }\r\n    },\r\n    textInput: {\r\n        'color': theme.palette.text.primary,\r\n        'fontWeight': 800,\r\n        'fontFamily': 'Raleway',\r\n        height: '2.2em',\r\n        /* 'height': '2.5em', */\r\n        'fontSize': 10,\r\n        '& .MuiIconButton-label': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chart: {\r\n            flex: 1,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n        },\r\n        fabIcon: {\r\n            marginLeft: 10,\r\n            alignSelf: 'center',\r\n        },\r\n        searchBox: {\r\n            width: '440px',\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        datePickers: {\r\n            width: '100%',\r\n            flex: 1,\r\n        },\r\n        textField: {\r\n            width: '435px',\r\n            backgroundColor: theme.palette.background.paper,\r\n            borderColor: theme.palette.text.primary,\r\n            color: theme.palette.text.primary,\r\n            borderRadius: 5,\r\n            '& .MuiSvgIcon-root':\r\n            {\r\n                color: theme.palette.text.primary\r\n            },\r\n\r\n            '& label': {\r\n                '&.Mui-focused': {\r\n                    color: theme.palette.text.primary\r\n                }\r\n            },\r\n        },\r\n        textFildsSmall: {\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        inputRoot: {\r\n            height: '1em',\r\n            'borderRadius': 5,\r\n            'backgroundColor': 'transparent',\r\n            /*         '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'black'\r\n                    },*/\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.primary.main\r\n            },\r\n            /*  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'black'\r\n              }, */\r\n            '& .MuiChip-root': {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: 'transparent',\r\n                borderRadius: 5\r\n            },\r\n            '& .MuiChip-deleteIconSmall': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        option: {\r\n            'background': theme.palette.background.paper,\r\n            '&:hover': {\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 400,\r\n                fontFamily: 'Raleway'\r\n            },\r\n            '&[aria-selected=\"true\"]': {\r\n                background: theme.palette.background.paper,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 700,\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        popupIndicator: {\r\n            '&.MuiIconButton-root': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        clearIndicator: {\r\n            color: theme.palette.text.primary\r\n        },\r\n    }),\r\n);\r\nconst LPTypes = [\r\n    \"Corporate\",\r\n    \"General Partner\",\r\n    \"Individual\",\r\n    \"Institutional\",\r\n];\r\n\r\ninterface LPFinancialsStepContentProps {\r\n    selectedLP: LP | null,\r\n    setSelectedLP: React.Dispatch<React.SetStateAction<LP | null>>,\r\n    disabled: boolean,\r\n    setDisabled: any\r\n}\r\n\r\nconst LPFinancialsStepContentComponent = ({ selectedLP, setSelectedLP, disabled, setDisabled }: LPFinancialsStepContentProps) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const autocompleteInputClasses = autocompleteInputStyles();\r\n    const [managementFee, setManagementFee] = useState<number | null>(selectedLP?.fees?.filter(x => x.feeType === 'Management Fee')[0] ? selectedLP?.fees?.filter(x => x.feeType === 'Management Fee')[0].amount : null);\r\n    const [capitalPaidIn, setCapitalPaidIn] = useState<number | null>(selectedLP?.capPaidIn ?? null);\r\n    const [capitalDistributed, setCapitalDistributed] = useState<number | null>(selectedLP?.totalDistributions ?? null);\r\n    const [capitalInvested, setCapitalinvested] = useState<number | null>(selectedLP?.totalInvestments ?? null);\r\n    const [recyclingReserves, setRecyclingReserves] = useState<number | null>(selectedLP?.fees?.filter(x => x.feeType === 'Recycling Reserves')[0] ? selectedLP?.fees?.filter(x => x.feeType === 'Recycling Reserves')[0].amount : null);\r\n    const [availablecapital, setAvailableCapital] = useState<number | null>(selectedLP?.capAvailable ?? null);\r\n    const [reserved, setReserved] = useState<number | null>(selectedLP?.reserved ?? null);\r\n    const [dryPowder, setDryPowder] = useState<number | null>(selectedLP?.dryPowder ?? null);\r\n    const [numAvgDeals, setNumAvgDeals] = useState<number | null>(selectedLP?.avgDealsAvailable ?? null);\r\n    const [tappedOut, setTappedOut] = useState<boolean>(selectedLP?.tappedOot ?? false);\r\n    const [estimatedUntilTappedOut, setEstimatedUntilTapedOut] = useState<string>(selectedLP?.dateTappedOut ?? '');\r\n\r\n    const onValueChange = (value: string, field: string) => {\r\n        if (selectedLP) {\r\n            switch (field) {\r\n                case 'managementFee':\r\n                    setManagementFee(+value);\r\n                    setSelectedLP({\r\n                        ...selectedLP,\r\n                        fees: selectedLP.fees.map(item => {\r\n                            if (item.feeType === 'Management Fee') {\r\n                                // update the item with id 2\r\n                                return { ...item, amount: +value };\r\n                            }\r\n                            // leave all other items unchanged\r\n                            return item;\r\n                        })\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'recyclingReserves':\r\n                    setRecyclingReserves(+value);\r\n                    setSelectedLP({\r\n                        ...selectedLP,\r\n                        fees: selectedLP.fees.map(item => {\r\n                            if (item.feeType === 'Recycling Reserves') {\r\n                                // update the item with id 2\r\n                                return { ...item, amount: +value };\r\n                            }\r\n                            // leave all other items unchanged\r\n                            return item;\r\n                        })\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'capPaidIn':\r\n                    setCapitalPaidIn(+value);\r\n                    setSelectedLP({\r\n                        ...selectedLP,\r\n                        capPaidIn: +value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'capitalDistributed':\r\n                    setCapitalDistributed(+value);\r\n                    setSelectedLP({\r\n                        ...selectedLP,\r\n                        totalDistributions: +value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'capitalInvested':\r\n                    setCapitalinvested(+value);\r\n                    setSelectedLP({\r\n                        ...selectedLP,\r\n                        totalInvestments: +value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'capAvailable':\r\n                    setAvailableCapital(+value);\r\n                    setSelectedLP({\r\n                        ...selectedLP,\r\n                        capAvailable: +value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'reserved':\r\n                    setReserved(+value);\r\n                    setSelectedLP({\r\n                        ...selectedLP,\r\n                        reserved: +value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'dryPowder':\r\n                    setDryPowder(+value);\r\n                    setSelectedLP({\r\n                        ...selectedLP,\r\n                        dryPowder: +value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'avgDealsAvailable':\r\n                    setNumAvgDeals(+value);\r\n                    setSelectedLP({\r\n                        ...selectedLP,\r\n                        avgDealsAvailable: +value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'tappedOut':\r\n                    setTappedOut(value?.toLowerCase() === 'false' ? false : value?.toLowerCase() === 'true' ? true : false);\r\n                    setSelectedLP({\r\n                        ...selectedLP,\r\n                        tappedOot: value?.toLowerCase() === 'false' ? false : value?.toLowerCase() === 'true' ? true : false\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'dateTappedOut':\r\n                    setEstimatedUntilTapedOut(value);\r\n                    setSelectedLP({\r\n                        ...selectedLP,\r\n                        dateTappedOut: value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{ flex: 1, width: '100%', marginTop: '0.2em' }}>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label='Management Fees'\r\n                        aria-label=\"name\"\r\n                        value={managementFee ? amountValueFormatter(managementFee, '') : null}\r\n                        onChange={(e) => onValueChange(e.target.value, 'managementFee')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label='Capital Paid In'\r\n                        aria-label=\"name\"\r\n                        value={capitalPaidIn ? amountValueFormatter(capitalPaidIn, '') : null}\r\n                        onChange={(e) => onValueChange(e.target.value, 'capPaidIn')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"website\"\r\n                        label='Capital Distributed'\r\n                        value={capitalDistributed ? amountValueFormatter(capitalDistributed, '') : null}\r\n                        onChange={(e) => onValueChange(e.target.value, 'capitalDistributed')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label='Capital Invested'\r\n                        aria-label=\"name\"\r\n                        value={capitalInvested ? amountValueFormatter(capitalInvested, '') : null}\r\n                        onChange={(e) => onValueChange(e.target.value, 'capitalInvested')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Divider sx={{ marginTop: '0.8em', marginBottom: 0, marginLeft: '1em', minWidth: '440px' }} />\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"website\"\r\n                        label='Recycling Reserves'\r\n                        value={recyclingReserves ? amountValueFormatter(recyclingReserves, '') : null}\r\n                        onChange={(e) => onValueChange(e.target.value, 'recyclingReserves')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"website\"\r\n                        label='Available Capital to be called'\r\n                        value={availablecapital ? amountValueFormatter(availablecapital, '') : null}\r\n                        onChange={(e) => onValueChange(e.target.value, 'capAvailable')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"website\"\r\n                        label='Reserved'\r\n                        value={reserved ? amountValueFormatter(reserved, '') : null}\r\n                        onChange={(e) => onValueChange(e.target.value, 'reserved')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"website\"\r\n                        label='Dry Powder'\r\n                        value={dryPowder ? amountValueFormatter(dryPowder, '') : null}\r\n                        onChange={(e) => onValueChange(e.target.value, 'dryPowder')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Divider sx={{ marginTop: '0.8em', marginBottom: 0, marginLeft: '1em', minWidth: '440px' }} />\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"baseCapital\"\r\n                        label='Num. of avg. deals available'\r\n                        value={numAvgDeals}\r\n                        onChange={(e) => onValueChange(e.target.value, 'avgDealsAvailable')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid container item sx={{ display: 'flex', justifyContent: 'space-between', flex: 1 }} spacing={2}>\r\n                <Grid item xs={4}>\r\n                    <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '120px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                        <TextField\r\n                            className={classes.textFildsSmall}\r\n                            sx={{ width: '120px' }}\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            label='Tapped Out'\r\n                            aria-label=\"city\"\r\n                            value={tappedOut}\r\n                            onChange={(e) => onValueChange(e.target.value, 'tappedOut')}\r\n                            inputProps={{\r\n                                style: { height: '1em' },\r\n                            }}\r\n                            InputLabelProps={{\r\n                                sx: {\r\n                                    fontSize: 'small'\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                    <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, minWidth: '290px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                        <TextField\r\n                            className={classes.textFildsSmall}\r\n                            variant=\"outlined\"\r\n                            sx={{ minWidth: '290px' }}\r\n                            size=\"small\"\r\n                            aria-label=\"city\"\r\n                            label='Estimated until tapped out'\r\n                            value={estimatedUntilTappedOut}\r\n                            onChange={(e) => onValueChange(e.target.value, 'dateTappedOut')}\r\n                            inputProps={{\r\n                                style: { height: '1em' },\r\n                            }}\r\n                            InputLabelProps={{\r\n                                sx: {\r\n                                    fontSize: 'small'\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default LPFinancialsStepContentComponent;","import { Autocomplete, AutocompleteRenderInputParams, Box, Divider, Fab, Grid, IconButton, InputAdornment, TextField, Typography } from '@mui/material';\r\nimport { useCallback, useState } from 'react';\r\nimport { Theme } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport { GridApi } from 'ag-grid-community';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { CountryList } from '../../../../../models/shared/sharedModels';\r\nimport { LP, NewLP } from '../../../../../models/lps/lpModels';\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { DatePicker } from '@mui/x-date-pickers';\r\n\r\nconst autocompleteInputStyles = makeStyles((theme: Theme) => ({\r\n    autocomplete: {\r\n        'borderRadius': 5,\r\n        'backgroundColor': theme.palette.background.paper,\r\n        '& input::placeholder': {\r\n            color: theme.palette.text.primary\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: theme.palette.text.primary,\r\n            opacity: 0.8\r\n        }\r\n    },\r\n    textInput: {\r\n        'color': theme.palette.text.primary,\r\n        'fontWeight': 800,\r\n        'fontFamily': 'Raleway',\r\n        height: '2.2em',\r\n        /* 'height': '2.5em', */\r\n        'fontSize': 10,\r\n        '& .MuiIconButton-label': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chart: {\r\n            flex: 1,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n        },\r\n        fabIcon: {\r\n            marginLeft: 10,\r\n            alignSelf: 'center',\r\n        },\r\n        searchBox: {\r\n            width: '440px',\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        datePickers: {\r\n            width: '100%',\r\n            flex: 1,\r\n        },\r\n        textField: {\r\n            width: '435px',\r\n            backgroundColor: theme.palette.background.paper,\r\n            borderColor: theme.palette.text.primary,\r\n            color: theme.palette.text.primary,\r\n            borderRadius: 5,\r\n            '& .MuiSvgIcon-root':\r\n            {\r\n                color: theme.palette.text.primary\r\n            },\r\n\r\n            '& label': {\r\n                '&.Mui-focused': {\r\n                    color: theme.palette.text.primary\r\n                }\r\n            },\r\n        },\r\n        textFildsSmall: {\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        inputRoot: {\r\n            height: '1em',\r\n            'borderRadius': 5,\r\n            'backgroundColor': 'transparent',\r\n            /*         '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'black'\r\n                    },*/\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.primary.main\r\n            },\r\n            /*  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'black'\r\n              }, */\r\n            '& .MuiChip-root': {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: 'transparent',\r\n                borderRadius: 5\r\n            },\r\n            '& .MuiChip-deleteIconSmall': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        option: {\r\n            'background': theme.palette.background.paper,\r\n            '&:hover': {\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 400,\r\n                fontFamily: 'Raleway'\r\n            },\r\n            '&[aria-selected=\"true\"]': {\r\n                background: theme.palette.background.paper,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 700,\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        popupIndicator: {\r\n            '&.MuiIconButton-root': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        clearIndicator: {\r\n            color: theme.palette.text.primary\r\n        },\r\n    }),\r\n);\r\nconst LPTypes = [\r\n    \"Corporate\",\r\n    \"General Partner\",\r\n    \"Individual\",\r\n    \"Institutional\",\r\n];\r\n\r\ninterface KPIAndIRRStepContentProps {\r\n    selectedLP: LP | null,\r\n    setSelectedLP: React.Dispatch<React.SetStateAction<LP | null>>,\r\n    disabled: boolean,\r\n    setDisabled: any\r\n}\r\n\r\nconst KPIAndIRRStepContentComponent = ({ selectedLP, setSelectedLP, disabled, setDisabled }: KPIAndIRRStepContentProps) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const autocompleteInputClasses = autocompleteInputStyles();\r\n    const [netDPI, setNetDPI] = useState<number | null>(selectedLP?.kpis?.netDPI ? selectedLP?.kpis?.netDPI : null);\r\n    const [grossDPI, setGrossDPI] = useState<number | null>(selectedLP?.kpis?.grossDPI ? selectedLP?.kpis?.grossDPI : null);\r\n    const [netTVPI, setNetTVPI] = useState<number | null>(selectedLP?.kpis?.netTVPI ? selectedLP?.kpis?.netTVPI : null);\r\n    const [grossTVPI, setGrossTVPI] = useState<number | null>(selectedLP?.kpis?.grossTVPI ? selectedLP?.kpis?.grossTVPI : null);\r\n    const [netIRR, setNetIRR] = useState<number | null>(selectedLP?.kpis?.netIRR ? selectedLP?.kpis?.netIRR : null);\r\n    const [grossIRR, setGrossIRR] = useState<number | null>(selectedLP?.kpis?.grossIRR ? selectedLP?.kpis?.grossIRR : null);\r\n\r\n    const onValueChange = (value: string, field: string) => {\r\n        if (selectedLP) {\r\n            switch (field) {\r\n                case 'netDPI':\r\n                    setNetDPI(+value);\r\n                    setSelectedLP({\r\n                        ...selectedLP,\r\n                        kpis: {\r\n                            ...selectedLP.kpis,\r\n                            netDPI: +value\r\n                        }\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'grossDPI':\r\n                    setGrossDPI(+value);\r\n                    setSelectedLP({\r\n                        ...selectedLP,\r\n                        kpis: {\r\n                            ...selectedLP.kpis,\r\n                            grossDPI: +value\r\n                        }\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'netTVPI':\r\n                    setNetTVPI(+value);\r\n                    setSelectedLP({\r\n                        ...selectedLP,\r\n                        kpis: {\r\n                            ...selectedLP.kpis,\r\n                            netTVPI: +value\r\n                        }\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'grossTVPI':\r\n                    setGrossTVPI(+value);\r\n                    setSelectedLP({\r\n                        ...selectedLP,\r\n                        kpis: {\r\n                            ...selectedLP.kpis,\r\n                            grossTVPI: +value\r\n                        }\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'netIRR':\r\n                    setNetIRR(+value);\r\n                    setSelectedLP({\r\n                        ...selectedLP,\r\n                        kpis: {\r\n                            ...selectedLP.kpis,\r\n                            netIRR: +value\r\n                        }\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'grossIRR':\r\n                    setGrossIRR(+value);\r\n                    setSelectedLP({\r\n                        ...selectedLP,\r\n                        kpis: {\r\n                            ...selectedLP.kpis,\r\n                            grossIRR: +value\r\n                        }\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{ flex: 1, width: '100%', marginTop: '0.2em' }}>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label='Net DPI'\r\n                        aria-label=\"name\"\r\n                        value={netDPI}\r\n                        onChange={(e) => onValueChange(e.target.value, 'netDPI')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label='Gross DPI'\r\n                        aria-label=\"name\"\r\n                        value={grossDPI}\r\n                        onChange={(e) => onValueChange(e.target.value, 'grossDPI')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item style={{ paddingTop: '3em' }}>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"website\"\r\n                        label='Net TVPI'\r\n                        value={netTVPI}\r\n                        onChange={(e) => onValueChange(e.target.value, 'netTVPI')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item style={{ paddingBottom: '2em' }}>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"baseCapital\"\r\n                        label='Gross TVPI'\r\n                        value={grossTVPI}\r\n                        onChange={(e) => onValueChange(e.target.value, 'grossTVPI')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"website\"\r\n                        label='Net IRR'\r\n                        value={netIRR ? (netIRR * 100).toFixed(2) : null}\r\n                        onChange={(e) => onValueChange(e.target.value, 'netIRR')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"website\"\r\n                        label='Gross IRR'\r\n                        value={grossIRR}\r\n                        onChange={(e) => onValueChange(e.target.value, 'grossIRR')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default KPIAndIRRStepContentComponent;","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useTheme } from '@mui/material';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport { GridApi, GridOptions, GridReadyEvent } from 'ag-grid-community';\r\nimport createStyles from '@mui/styles/createStyles';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport clsx from 'clsx';\r\nimport { ColDef, ColGroupDef, ValueSetterParams } from 'ag-grid-community/dist/lib/entities/colDef';\r\nimport { RootState } from '../../../../../redux/slices/rootSlice';\r\nimport { CommitmentBasic, LP } from '../../../../../models/lps/lpModels';\r\nimport { dateValueFormatter, getGridTheme, DefaultColumnDef, DefaultStatusPanelDef, quantityValueFormatter } from '../../../../../helpers/agGrid';\r\nimport AGGridLoader from '../../../../shared/AGGridLoader';\r\nimport EditRoundedIcon from '@mui/icons-material/EditRounded';\r\nimport { setSelectedCommitment } from '../../../../../redux/slices/lps/lpsSlice';\r\nimport { setEditChildDiaogOpen } from '../../../../../redux/slices/appSlice';\r\nimport { useAppDispatch } from '../../../../../redux/store';\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            flex: 1,\r\n            overflow: 'hidden',\r\n        },\r\n        fill: {\r\n            flex: 1,\r\n            width: '100%',\r\n            height: '100%',\r\n        }\r\n    })\r\n);\r\n\r\ninterface LPCommitmentsStepContentTableProps {\r\n    setEditPageName: any,\r\n}\r\n\r\nconst LPCommitmentsStepContentTable = ({ setEditPageName }: LPCommitmentsStepContentTableProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const { isDarkTheme, editChildDialogOpen } = useSelector((state: RootState) => state.app);\r\n    const { selectedLP } = useSelector((state: RootState) => state.lps);\r\n    const [, setGridApi] = useState<GridApi>();\r\n    const theme = useTheme();\r\n    const [rowData, setRowData] = useState<CommitmentBasic[]>([]);\r\n    const [editCommitmentDialogOpen, setEditCommitmentDialogOpen] = useState<boolean>(false);\r\n    const [editialogOpen, setEditDialogOpen] = useState<boolean>(false);\r\n    const [selectedCommitmentLocal, setSelectedCommitmentLocal] = useState<any>(null);\r\n\r\n    const gridOptions: GridOptions = {\r\n        defaultColDef: DefaultColumnDef,\r\n        enableCellChangeFlash: true,\r\n        enableRangeSelection: true,\r\n        animateRows: true,\r\n        pagination: true,\r\n        enableCellTextSelection: true,\r\n        groupDisplayType: 'multipleColumns',\r\n        statusBar: DefaultStatusPanelDef,\r\n    };\r\n\r\n    const ButtonCellRenderer = (props: any) => {\r\n        const handleEditClick = () => {\r\n            if (props.data) {\r\n                setSelectedCommitmentLocal(props.data);\r\n                setEditPageName('lpCommitments');\r\n                setEditDialogOpen(!editChildDialogOpen);\r\n                //handleOpenEditChildDialog('investments');\r\n            }\r\n        };\r\n\r\n        return <span key={props.data.id} style={{ display: 'flex', width: '100%', justifyContent: 'center', alignItems: 'center', cursor: 'pointer' }}>\r\n            <EditRoundedIcon style={{ color: theme.palette.primary.main, width: '100%', alignSelf: 'center' }} onClick={() => handleEditClick()} />\r\n        </span>;\r\n    };\r\n\r\n    const getColumnDefs = useMemo((): (ColDef | ColGroupDef)[] => {\r\n        return [\r\n            {\r\n                headerName: 'Date',\r\n                field: 'date',\r\n                minWidth: 100,\r\n                maxWidth: 140,\r\n                enableRowGroup: true,\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n                valueFormatter: dateValueFormatter,\r\n            },\r\n            {\r\n                headerName: 'Short Name',\r\n                field: 'shortName',\r\n                tooltipField: 'shortName',\r\n                suppressFiltersToolPanel: true,\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n            },\r\n            {\r\n                headerName: 'Committed Amount',\r\n                field: 'committedAmount',\r\n                enableRowGroup: true,\r\n                type: 'numericColumn',\r\n                tooltipField: 'committedAmount',\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n                valueFormatter: quantityValueFormatter,\r\n            },\r\n            {\r\n                headerName: 'Currency',\r\n                field: 'fundCurrency',\r\n                minWidth: 90,\r\n                maxWidth: 120,\r\n                enableRowGroup: true,\r\n                valueGetter: (params) => {\r\n                    return params.data?.fundCurrency ? params.data?.fundCurrency.toUpperCase() : '';\r\n                },\r\n                valueSetter: (params) => valueSetter(params, 'fundCurrency'),\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n            },\r\n            {\r\n                headerName: '',\r\n                maxWidth: 60,\r\n                cellRenderer: 'buttonCellRenderer',\r\n                editable: false\r\n            },\r\n        ];\r\n    }, [theme]);\r\n\r\n    const onGridReady = (params: GridReadyEvent) => {\r\n        setGridApi(params?.api);\r\n    };\r\n\r\n    const valueSetter = (params: ValueSetterParams, field: string) => {\r\n        const value = params.newValue;\r\n        const data = params.data;\r\n        if (data[field] !== value) {\r\n            data[field] = value;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const loadingOverlayRendererParams = useMemo(() => {\r\n        return {\r\n            loadingMessage: 'Loading Funds Overview...',\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setRowData(selectedLP?.commitments ?? []);\r\n    }, [selectedLP])\r\n\r\n    useEffect(() => {\r\n        if (selectedCommitmentLocal && editialogOpen) {\r\n            dispatch(setSelectedCommitment(selectedCommitmentLocal));\r\n            dispatch(setEditChildDiaogOpen(!editChildDialogOpen));\r\n        }\r\n    }, [selectedCommitmentLocal, editialogOpen, dispatch])\r\n\r\n    return (\r\n        <div className={clsx(getGridTheme(isDarkTheme), classes.fill)} style={{ flex: 1, overflowX: 'auto' }}>\r\n            <AgGridReact gridOptions={gridOptions}\r\n                columnDefs={getColumnDefs}\r\n                rowData={rowData}\r\n                domLayout={'autoHeight'}\r\n                onGridReady={onGridReady}\r\n                loadingOverlayComponentParams={loadingOverlayRendererParams}\r\n                loadingOverlayComponent={AGGridLoader}\r\n                tooltipShowDelay={0}\r\n                tooltipHideDelay={10000}\r\n                components={{\r\n                    buttonCellRenderer: ButtonCellRenderer\r\n                }}\r\n            />\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default LPCommitmentsStepContentTable;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useTheme } from '@mui/material';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport { GridApi, GridOptions, GridReadyEvent } from 'ag-grid-community';\r\nimport createStyles from '@mui/styles/createStyles';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport clsx from 'clsx';\r\nimport { ColDef, ColGroupDef, ValueSetterParams } from 'ag-grid-community/dist/lib/entities/colDef';\r\nimport { RootState } from '../../../../../redux/slices/rootSlice';\r\nimport { Fund } from '../../../../../models/lps/lpModels';\r\nimport { getGridTheme, DefaultColumnDef, DefaultStatusPanelDef, quantityValueFormatter } from '../../../../../helpers/agGrid';\r\nimport AGGridLoader from '../../../../shared/AGGridLoader';\r\nimport EditRoundedIcon from '@mui/icons-material/EditRounded';\r\nimport { useAppDispatch } from '../../../../../redux/store';\r\nimport { setSelectedCommitment } from '../../../../../redux/slices/lps/lpsSlice';\r\nimport { setEditChildDiaogOpen } from '../../../../../redux/slices/appSlice';\r\nimport { EditCommitment } from '../../../../../models/shared/sharedModels';\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            flex: 1,\r\n            overflow: 'hidden',\r\n        },\r\n        fill: {\r\n            flex: 1,\r\n            width: '100%',\r\n            height: '100%',\r\n        }\r\n    })\r\n);\r\n\r\n\r\ninterface LPFundsStepContentTableProps {\r\n    setEditPageName: any,\r\n}\r\n\r\n\r\nconst LPFundsStepContentTable = ({ setEditPageName }: LPFundsStepContentTableProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const { isDarkTheme, editChildDialogOpen } = useSelector((state: RootState) => state.app);\r\n    const { selectedLP } = useSelector((state: RootState) => state.lps);\r\n    const [, setGridApi] = useState<GridApi>();\r\n    const theme = useTheme();\r\n    const [rowData, setRowData] = useState<Fund[]>([]);\r\n    const [editCommitmentDialogOpen, setEditCommitmentDialogOpen] = useState<boolean>(false);\r\n    const [editialogOpen, setEditDialogOpen] = useState<boolean>(false);\r\n    const [selectedCommitmentLocal, setSelectedCommitmentLocal] = useState<any>(null);\r\n\r\n    const gridOptions: GridOptions = {\r\n        defaultColDef: DefaultColumnDef,\r\n        enableCellChangeFlash: true,\r\n        enableRangeSelection: true,\r\n        animateRows: true,\r\n        pagination: true,\r\n        enableCellTextSelection: true,\r\n        groupDisplayType: 'multipleColumns',\r\n        statusBar: DefaultStatusPanelDef,\r\n    };\r\n\r\n    const ButtonCellRenderer = (props: any) => {\r\n        const handleEditClick = () => {\r\n            if (props.data) {\r\n                setEditPageName('lpFunds');\r\n                setEditDialogOpen(!editChildDialogOpen);\r\n                const commitment: EditCommitment = {\r\n                    lpId: selectedLP?.id,\r\n                    lpName:selectedLP?.name,\r\n                    fundId: props.data?.id,\r\n                    committedAmount: props.data?.committedAmount\r\n                }\r\n                setSelectedCommitmentLocal(commitment);             \r\n            }\r\n        };\r\n\r\n        return <span key={props.data.id} style={{ display: 'flex', width: '100%', justifyContent: 'center', alignItems: 'center', cursor: 'pointer' }}>\r\n            <EditRoundedIcon style={{ color: theme.palette.primary.main, width: '100%', alignSelf: 'center' }} onClick={() => handleEditClick()} />\r\n        </span>;\r\n    };\r\n\r\n\r\n    const getColumnDefs = useMemo((): (ColDef | ColGroupDef)[] => {\r\n        return [\r\n            {\r\n                headerName: 'Id',\r\n                field: 'id',\r\n                enableRowGroup: true,\r\n                valueGetter: (params) => {\r\n                    return params.data?.id;\r\n                },\r\n                tooltipField: 'id',\r\n                minWidth: 90,\r\n                maxWidth: 100,\r\n                valueSetter: (params) => valueSetter(params, 'id'),\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n            },\r\n            {\r\n                headerName: 'Name',\r\n                field: 'fundName',\r\n                tooltipField: 'fundName',\r\n                suppressFiltersToolPanel: true,\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n            },\r\n            {\r\n                headerName: 'Committed Amount',\r\n                field: 'committedAmount',\r\n                enableRowGroup: true,\r\n                type: 'numericColumn',\r\n                tooltipField: 'committedAmount',\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n                valueFormatter: quantityValueFormatter,\r\n            },\r\n            {\r\n                headerName: 'Currency',\r\n                field: 'fundCurrency',\r\n                enableRowGroup: true,\r\n                minWidth: 90,\r\n                maxWidth: 120,\r\n                valueGetter: (params) => {\r\n                    return params.data?.fundCurrency ? params.data?.fundCurrency.toUpperCase() : '';\r\n                },\r\n                valueSetter: (params) => valueSetter(params, 'fundCurrency'),\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n            },\r\n            {\r\n                headerName: '',\r\n                maxWidth: 60,\r\n                cellRenderer: 'buttonCellRenderer',\r\n                editable: false\r\n            },\r\n        ];\r\n    }, [theme]);\r\n\r\n    const onGridReady = (params: GridReadyEvent) => {\r\n        setGridApi(params?.api);\r\n    };\r\n\r\n    const valueSetter = (params: ValueSetterParams, field: string) => {\r\n        const value = params.newValue;\r\n        const data = params.data;\r\n        if (data[field] !== value) {\r\n            data[field] = value;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const loadingOverlayRendererParams = useMemo(() => {\r\n        return {\r\n            loadingMessage: 'Loading Funds Overview...',\r\n        };\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        setRowData(selectedLP?.funds ?? []);\r\n    }, [selectedLP])\r\n\r\n\r\n    useEffect(() => {\r\n        if (selectedCommitmentLocal && editialogOpen) {\r\n            dispatch(setSelectedCommitment(selectedCommitmentLocal));\r\n            dispatch(setEditChildDiaogOpen(!editChildDialogOpen));\r\n        }\r\n    }, [selectedCommitmentLocal, editialogOpen, dispatch])\r\n\r\n    return (\r\n        <div className={clsx(getGridTheme(isDarkTheme), classes.fill)} style={{ flex: 1 }}>\r\n            <AgGridReact gridOptions={gridOptions}\r\n                columnDefs={getColumnDefs}\r\n                rowData={rowData}\r\n                domLayout={'autoHeight'}\r\n                onGridReady={onGridReady}\r\n                loadingOverlayComponentParams={loadingOverlayRendererParams}\r\n                loadingOverlayComponent={AGGridLoader}\r\n                tooltipShowDelay={0}\r\n                tooltipHideDelay={10000}\r\n                components={{\r\n                    buttonCellRenderer: ButtonCellRenderer\r\n                }}\r\n            />\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default LPFundsStepContentTable;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useTheme } from '@mui/material';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport { GridApi, GridOptions, GridReadyEvent } from 'ag-grid-community';\r\nimport createStyles from '@mui/styles/createStyles';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport clsx from 'clsx';\r\nimport { ColDef, ColGroupDef } from 'ag-grid-community/dist/lib/entities/colDef';\r\nimport { RootState } from '../../../../../redux/slices/rootSlice';\r\nimport { PCO } from '../../../../../models/lps/lpModels';\r\nimport { getGridTheme, DefaultColumnDef, DefaultStatusPanelDef, percentageyValueFormatter } from '../../../../../helpers/agGrid';\r\nimport AGGridLoader from '../../../../shared/AGGridLoader';\r\nimport EditRoundedIcon from '@mui/icons-material/EditRounded';\r\nimport { useAppDispatch } from '../../../../../redux/store';\r\nimport { EditInvestment } from '../../../../../models/pcos/pcoModels';\r\nimport { setSelectedInvestment } from '../../../../../redux/slices/pcos/pcosSlice';\r\nimport { setEditChildDiaogOpen } from '../../../../../redux/slices/appSlice';\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            flex: 1,\r\n            overflow: 'hidden',\r\n        },\r\n        fill: {\r\n            flex: 1,\r\n            width: '100%',\r\n            height: '100%',\r\n        }\r\n    })\r\n);\r\n\r\n\r\ninterface LPPCOsStepContentTableProps {\r\n    setEditPageName: any,\r\n}\r\n\r\nconst LPPCOsStepContentTable = ({setEditPageName}:LPPCOsStepContentTableProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const { isDarkTheme, editChildDialogOpen } = useSelector((state: RootState) => state.app);    \r\n    const { selectedLP } = useSelector((state: RootState) => state.lps);\r\n    const [, setGridApi] = useState<GridApi>();\r\n    const theme = useTheme();\r\n    const [rowData, setRowData] = useState<PCO[]>([]);\r\n    const [editCommitmentDialogOpen, setEditCommitmentDialogOpen] = useState<boolean>(false);\r\n    const [editialogOpen, setEditDialogOpen] = useState<boolean>(false);\r\n    const [selectedInvetsmentLocal, setSelectedInvetsmentLocal] = useState<any>(null);\r\n\r\n    const gridOptions: GridOptions = {\r\n        defaultColDef: DefaultColumnDef,\r\n        enableCellChangeFlash: true,\r\n        enableRangeSelection: true,\r\n        animateRows: true,\r\n        pagination: true,\r\n        paginationPageSize:5,\r\n        enableCellTextSelection: true,\r\n        groupDisplayType: 'multipleColumns',\r\n        statusBar: DefaultStatusPanelDef,\r\n    };\r\n\r\n    const ButtonCellRenderer = (props: any) => {\r\n        const handleEditClick = () => {\r\n            if (props.data) {\r\n                setEditPageName('lpPCOs');\r\n                setEditDialogOpen(!editChildDialogOpen);\r\n                const investment: EditInvestment = {\r\n                    lpId: selectedLP?.id,\r\n                    pcoId: props.data?.id,\r\n                    participationPercentage: props.data?.participationPercentage\r\n                }\r\n                setSelectedInvetsmentLocal(investment);\r\n                //handleOpenEditChildDialog('investments');\r\n            }\r\n        };\r\n\r\n        return <span key={props.data.id} style={{ display: 'flex', width: '100%', justifyContent: 'center', alignItems: 'center', cursor: 'pointer' }}>\r\n            <EditRoundedIcon style={{ color: theme.palette.primary.main, width: '100%', alignSelf: 'center' }} onClick={() => handleEditClick()} />\r\n        </span>;\r\n    };\r\n\r\n    const getColumnDefs = useMemo((): (ColDef | ColGroupDef)[] => {\r\n        return [\r\n            {\r\n                headerName: 'Short Name',\r\n                field: 'shortName',\r\n                tooltipField: 'fundName',\r\n                suppressFiltersToolPanel: true,\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n            },\r\n            {\r\n                headerName: 'Participation Percentage',\r\n                field: 'participationPercentage',\r\n                enableRowGroup: true,\r\n                type: 'numericColumn',\r\n                tooltipField: 'amountInvested',\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n                valueFormatter: percentageyValueFormatter,\r\n            },\r\n            {\r\n                headerName: '',\r\n                maxWidth: 60,\r\n                cellRenderer: 'buttonCellRenderer',\r\n                editable: false\r\n            },\r\n        ];\r\n    }, [theme]);\r\n\r\n    const onGridReady = (params: GridReadyEvent) => {\r\n        setGridApi(params?.api);\r\n    };\r\n\r\n\r\n    const loadingOverlayRendererParams = useMemo(() => {\r\n        return {\r\n            loadingMessage: 'Loading Funds Overview...',\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setRowData(selectedLP?.pcos ?? []);\r\n    }, [selectedLP])\r\n\r\n\r\n    useEffect(() => {\r\n        if (selectedInvetsmentLocal && editialogOpen) {\r\n            dispatch(setSelectedInvestment(selectedInvetsmentLocal));\r\n            dispatch(setEditChildDiaogOpen(!editChildDialogOpen));\r\n        }\r\n    }, [selectedInvetsmentLocal, editialogOpen, dispatch])\r\n\r\n    return (\r\n        <div className={clsx(getGridTheme(isDarkTheme), classes.fill)} style={{ flex: 1 }}>\r\n            <AgGridReact gridOptions={gridOptions}\r\n                columnDefs={getColumnDefs}\r\n                rowData={rowData}\r\n                domLayout={'autoHeight'}\r\n                onGridReady={onGridReady}\r\n                loadingOverlayComponentParams={loadingOverlayRendererParams}\r\n                loadingOverlayComponent={AGGridLoader}\r\n                tooltipShowDelay={0}\r\n                tooltipHideDelay={10000}\r\n                components={{\r\n                    buttonCellRenderer: ButtonCellRenderer\r\n                }}\r\n            />\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default LPPCOsStepContentTable;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useTheme } from '@mui/material';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport { GridApi, GridOptions, GridReadyEvent } from 'ag-grid-community';\r\nimport createStyles from '@mui/styles/createStyles';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport clsx from 'clsx';\r\nimport { ColDef, ColGroupDef, ValueSetterParams } from 'ag-grid-community/dist/lib/entities/colDef';\r\nimport { RootState } from '../../../../../redux/slices/rootSlice';\r\nimport { Exits } from '../../../../../models/lps/lpModels';\r\nimport { dateValueFormatter, getGridTheme, DefaultColumnDef, DefaultStatusPanelDef, quantityValueFormatter } from '../../../../../helpers/agGrid';\r\nimport AGGridLoader from '../../../../shared/AGGridLoader';\r\nimport EditRoundedIcon from '@mui/icons-material/EditRounded';\r\nimport { useAppDispatch } from '../../../../../redux/store';\r\nimport { setEditChildDiaogOpen } from '../../../../../redux/slices/appSlice';\r\nimport { setSelectedExit } from '../../../../../redux/slices/lps/lpsSlice';\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            flex: 1,\r\n            overflow: 'hidden',\r\n        },\r\n        fill: {\r\n            flex: 1,\r\n            width: '100%',\r\n            height: '100%',\r\n        }\r\n    })\r\n);\r\n\r\n\r\ninterface LPExitsStepContentTableProps {\r\n    setEditPageName: any,\r\n}\r\n\r\nconst LPExitsStepContentTable = ({setEditPageName}:LPExitsStepContentTableProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const { isDarkTheme, editChildDialogOpen } = useSelector((state: RootState) => state.app);\r\n    const { selectedLP } = useSelector((state: RootState) => state.lps);\r\n    const [, setGridApi] = useState<GridApi>();\r\n    const theme = useTheme();\r\n    const [rowData, setRowData] = useState<Exits[]>([]);\r\n    const [editCommitmentDialogOpen, setEditCommitmentDialogOpen] = useState<boolean>(false);\r\n    const [editialogOpen, setEditDialogOpen] = useState<boolean>(false);\r\n    const [selectedExitLocal, setSelectedExitLocal] = useState<any>(null);\r\n\r\n    const gridOptions: GridOptions = {\r\n        defaultColDef: DefaultColumnDef,\r\n        enableCellChangeFlash: true,\r\n        enableRangeSelection: true,\r\n        animateRows: true,\r\n        pagination: true,\r\n        paginationPageSize: 5,\r\n        enableCellTextSelection: true,\r\n        groupDisplayType: 'multipleColumns',\r\n        statusBar: DefaultStatusPanelDef,\r\n    };\r\n\r\n    const ButtonCellRenderer = (props: any) => {\r\n      const handleEditClick = () => {\r\n            if (props.data) {\r\n                setSelectedExitLocal(props.data);\r\n                setEditPageName('lpExits');\r\n                setEditDialogOpen(!editChildDialogOpen);\r\n                //handleOpenEditChildDialog('investments');\r\n            }\r\n        };\r\n        return <span key={props.data.id} style={{ display: 'flex', width: '100%', justifyContent: 'center', alignItems: 'center', cursor: 'pointer' }}>\r\n            <EditRoundedIcon style={{ color: theme.palette.primary.main, width: '100%', alignSelf: 'center' }} onClick={() => handleEditClick()} />\r\n        </span>;\r\n    };\r\n\r\n    const getColumnDefs = useMemo((): (ColDef | ColGroupDef)[] => {\r\n        return [\r\n            {\r\n                headerName: 'Date',\r\n                field: 'date',\r\n                minWidth: 100,\r\n                maxWidth: 140,\r\n                enableRowGroup: true,\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n                valueFormatter: dateValueFormatter,\r\n            },\r\n            {\r\n                headerName: 'Short Name',\r\n                field: 'shortName',\r\n                tooltipField: 'shortName',\r\n                suppressFiltersToolPanel: true,\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n            },\r\n            {\r\n                headerName: 'Amount Returned',\r\n                field: 'amountGained',\r\n                enableRowGroup: true,\r\n                type: 'numericColumn',\r\n                tooltipField: 'amountGained',\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n                valueFormatter: quantityValueFormatter,\r\n            },\r\n            {\r\n                headerName: 'Currency',\r\n                field: 'fundCurrency',\r\n                enableRowGroup: true,\r\n                minWidth: 90,\r\n                maxWidth: 120,\r\n                valueGetter: (params) => {\r\n                    return params.data?.fundCurrency ? params.data?.fundCurrency.toUpperCase() : '';\r\n                },\r\n                valueSetter: (params) => valueSetter(params, 'fundCurrency'),\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n            },\r\n            {\r\n                headerName: '',\r\n                maxWidth: 60,\r\n                cellRenderer: 'buttonCellRenderer',\r\n                editable: false\r\n            },\r\n        ];\r\n    }, [theme]);\r\n\r\n    const onGridReady = (params: GridReadyEvent) => {\r\n        setGridApi(params?.api);\r\n    };\r\n\r\n    const valueSetter = (params: ValueSetterParams, field: string) => {\r\n        const value = params.newValue;\r\n        const data = params.data;\r\n        if (data[field] !== value) {\r\n            data[field] = value;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const loadingOverlayRendererParams = useMemo(() => {\r\n        return {\r\n            loadingMessage: 'Loading Funds Overview...',\r\n        };\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        setRowData(selectedLP?.exits ?? []);\r\n    }, [selectedLP])\r\n\r\n    useEffect(() => {\r\n        if (selectedExitLocal && editialogOpen) {\r\n            dispatch(setSelectedExit(selectedExitLocal));\r\n            dispatch(setEditChildDiaogOpen(!editChildDialogOpen));\r\n        }\r\n    }, [selectedExitLocal, editialogOpen, dispatch])\r\n\r\n    return (\r\n        <div className={clsx(getGridTheme(isDarkTheme), classes.fill)} style={{ flex: 1 }}>\r\n            <AgGridReact gridOptions={gridOptions}\r\n                columnDefs={getColumnDefs}\r\n                rowData={rowData}\r\n                domLayout={'autoHeight'}\r\n                onGridReady={onGridReady}\r\n                loadingOverlayComponentParams={loadingOverlayRendererParams}\r\n                loadingOverlayComponent={AGGridLoader}\r\n                tooltipShowDelay={0}\r\n                tooltipHideDelay={10000}\r\n                components={{\r\n                    buttonCellRenderer: ButtonCellRenderer\r\n                }}\r\n            />\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default LPExitsStepContentTable;\r\n","import { Autocomplete, AutocompleteRenderInputParams, Fab, FormControlLabel, Grid, IconButton, InputAdornment, Switch, TextField, Tooltip, Typography,Box } from '@mui/material';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Theme } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport { GridApi } from 'ag-grid-community';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { CountryList, CurrencyList, NewCommitment } from '../../../../models/shared/sharedModels';\r\nimport { LP } from '../../../../models/lps/lpModels';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../redux/slices/rootSlice';\r\nimport { useAppDispatch } from '../../../../redux/store';\r\nimport { fetchLPs } from '../../../../redux/thunks/lpThunk';\r\nimport { FundSummary } from '../../../../models/funds/fundModels';\r\nimport { setLPs, setSelectedLP } from '../../../../redux/slices/lps/lpsSlice';\r\nimport { setSelectedFund } from '../../../../redux/slices/funds/fundsSlice';\r\nimport { InvestmentType, NewTransaction, SecurityType, Transaction, TransactionType } from '../../../../models/transactions/transactionsModels';\r\nimport { setSelectedPCO } from '../../../../redux/slices/pcos/pcosSlice';\r\nimport { NewInvestment, PCOSummary } from '../../../../models/pcos/pcoModels';\r\nimport { fetchFunds } from '../../../../redux/thunks/fundThunk';\r\nimport { fetchPCOs } from '../../../../redux/thunks/pcoThunk';\r\nimport { LPCashCallType } from '../../../../models/cashCalls/cashCallsModels';\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nconst autocompleteInputStyles = makeStyles((theme: Theme) => ({\r\n    autocomplete: {\r\n        'borderRadius': 5,\r\n        'backgroundColor': theme.palette.background.paper,\r\n        '& input::placeholder': {\r\n            color: theme.palette.text.primary\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: theme.palette.text.primary,\r\n            opacity: 0.8\r\n        }\r\n    },\r\n    textInput: {\r\n        'color': theme.palette.text.primary,\r\n        'fontWeight': 800,\r\n        'fontFamily': 'Raleway',\r\n        height: '2.2em',\r\n        /* 'height': '2.5em', */\r\n        'fontSize': 10,\r\n        '& .MuiIconButton-label': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chart: {\r\n            flex: 1,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n        },\r\n        fabIcon: {\r\n            marginLeft: 10,\r\n            alignSelf: 'center',\r\n        },\r\n        searchBox: {\r\n            width: '400px',\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        switchField: {\r\n            '& .MuiFormControlLabel-label': {\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        textFildsSmall: {\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        inputRoot: {\r\n            height: '1em',\r\n            'borderRadius': 5,\r\n            'backgroundColor': 'transparent',\r\n            /*         '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'black'\r\n                    },*/\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.primary.main\r\n            },\r\n            /*  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'black'\r\n              }, */\r\n            '& .MuiChip-root': {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: 'transparent',\r\n                borderRadius: 5\r\n            },\r\n            '& .MuiChip-deleteIconSmall': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        option: {\r\n            'background': theme.palette.background.paper,\r\n            '&:hover': {\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 400,\r\n                fontFamily: 'Raleway'\r\n            },\r\n            '&[aria-selected=\"true\"]': {\r\n                background: theme.palette.background.paper,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 700,\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        popupIndicator: {\r\n            '&.MuiIconButton-root': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        clearIndicator: {\r\n            color: theme.palette.text.primary\r\n        },\r\n    }),\r\n);\r\nconst LPTypes = [\r\n    \"Corporate\",\r\n    \"General Partner\",\r\n    \"Individual\",\r\n    \"Institutional\",\r\n];\r\n\r\ninterface AddNewPCOInvestmentComponentProps {\r\n    disabled: boolean,\r\n    setDisabled: any,\r\n    newInvestment: NewInvestment | null,\r\n    setNewInvestment: (newState: any) => void\r\n}\r\n\r\nconst AddNewPCOInvestmentComponent = ({ setDisabled, disabled, newInvestment, setNewInvestment }: AddNewPCOInvestmentComponentProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const autocompleteInputClasses = autocompleteInputStyles();\r\n    const theme = useTheme();\r\n    const [amountFundCurrency, setAmountFundCurrency] = useState<number>(0);\r\n    const [currency, setCurrency] = useState<string>('');\r\n    const { pcos, selectedPCO } = useSelector((state: RootState) => state.pcos);\r\n    const pcoId = selectedPCO?.id ?? '';\r\n    const pcoName = selectedPCO?.shortName ?? '';\r\n    const [fundId, setFundId] = useState<string>('');\r\n    const { funds, selectedFund } = useSelector((state: RootState) => state.funds);\r\n    const { lps, selectedLP } = useSelector((state: RootState) => state.lps);\r\n    const [transType, setTransType] = useState<string>('');\r\n    const [investmentType, setInvestmentType] = useState<string>('');\r\n    const [securityType, setSecurityType] = useState<string>('');\r\n    const [lpId, setLPId] = useState<string>('');\r\n\r\n    const onValueChange = (value: string, field: string) => {\r\n        switch (field) {\r\n            case 'fundId':\r\n                setFundId(value);\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    fundId: value\r\n                });\r\n                setDisabled(value === '' || investmentType === '' ||  amountFundCurrency === 0);\r\n                break;\r\n            case 'investmentType':\r\n                setInvestmentType(value);\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    investmentType: value\r\n                });\r\n                setDisabled(value === ''  || fundId === '' || amountFundCurrency === 0);\r\n                break;\r\n            case 'amountFundCurrency':\r\n                setAmountFundCurrency(+value);\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    amountFundCurrency: +value\r\n                });\r\n                setDisabled(+value === 0 || investmentType === '' || fundId === '' );\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const optionLabelFund = (option: string | FundSummary) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.fundName ? option.fundName : option;\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchFunds());\r\n    }, [dispatch])\r\n\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{paddingTop:'10px'}}>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <Autocomplete\r\n                    id={'fundsAutocomplete'}\r\n                    popupIcon={<ExpandMoreIcon />}\r\n                    size={'small'}\r\n                    autoHighlight={true}\r\n                    autoSelect={true}\r\n                    autoComplete={false}\r\n                    classes={classes}\r\n                    sx={{ marginRight: '1em', width: '400px' }}\r\n                    isOptionEqualToValue={(option, value) => option === value}\r\n                    onChange={(e, value: FundSummary | null) => onValueChange(value ? value.id : '', 'fundId')}\r\n                    value={selectedFund ?? undefined}\r\n                    options={funds && funds.length > 0 ? funds.slice().sort(function (a, b) {\r\n                        if (a.id.toLowerCase() < b.id.toLowerCase()) return -1;\r\n                        if (a.id.toLowerCase() > b.id.toLowerCase()) return 1;\r\n                        return 0;\r\n                    }) : []}\r\n                    getOptionLabel={(option) => optionLabelFund(option).toString()}\r\n                    renderInput={(params: AutocompleteRenderInputParams) => {\r\n                        params.InputProps.className = autocompleteInputClasses.textInput;\r\n                        return <TextField {...params}\r\n                            className={autocompleteInputClasses.autocomplete}\r\n                            variant=\"outlined\"\r\n                            autoComplete=\"off\"\r\n                            label={'Fund'}\r\n                            helperText={!disabled && fundId === '' ? 'Required' : ''}\r\n                            type={'text'}\r\n                        />;\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <TextField\r\n                    className={classes.searchBox}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={'PCO'}\r\n                    aria-label=\"baseCapital\"\r\n                    value={pcoName}\r\n                    inputProps={{\r\n                        style: { height: '1em' },\r\n                    }}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <Autocomplete\r\n                    id={'fundsAutocomplete'}\r\n                    popupIcon={<ExpandMoreIcon />}\r\n                    size={'small'}\r\n                    autoHighlight={true}\r\n                    autoSelect={true}\r\n                    autoComplete={false}\r\n                    disableClearable\r\n                    classes={classes}\r\n                    sx={{ marginRight: '1em', width: '400px' }}\r\n                    isOptionEqualToValue={(option, value) => option === value}\r\n                    onChange={(e, value: any) => onValueChange(value, 'investmentType')}\r\n                    value={investmentType ?? ''}\r\n                    options={InvestmentType?.slice()}\r\n                    renderInput={(params: AutocompleteRenderInputParams) => {\r\n                        params.InputProps.className = autocompleteInputClasses.textInput;\r\n                        return <TextField {...params}\r\n                            className={autocompleteInputClasses.autocomplete}\r\n                            variant=\"outlined\"\r\n                            autoComplete=\"off\"\r\n                            label={'Investment Type'}\r\n                            helperText={!disabled && investmentType === '' ? 'Required' : ''}\r\n                            type={'text'}\r\n                        />;\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <TextField\r\n                    className={classes.searchBox}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    aria-label=\"baseCapital\"\r\n                    value={amountFundCurrency}\r\n                    type={'number'}\r\n                    label={'Amount'}\r\n                    onChange={(e) => onValueChange(e.target.value, 'amountFundCurrency')}\r\n                    inputProps={{\r\n                        style: { height: '1em' },\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default AddNewPCOInvestmentComponent;","import { Autocomplete, AutocompleteRenderInputParams, Fab, FormControlLabel, Grid, IconButton, InputAdornment, Switch, TextField, Tooltip, Typography, Box } from '@mui/material';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Theme } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport { GridApi } from 'ag-grid-community';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { CountryList, CurrencyList, NewCommitment } from '../../../../models/shared/sharedModels';\r\nimport { LP } from '../../../../models/lps/lpModels';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../redux/slices/rootSlice';\r\nimport { useAppDispatch } from '../../../../redux/store';\r\nimport { fetchLPs } from '../../../../redux/thunks/lpThunk';\r\nimport { FundSummary } from '../../../../models/funds/fundModels';\r\nimport { setLPs, setSelectedLP } from '../../../../redux/slices/lps/lpsSlice';\r\nimport { setSelectedFund } from '../../../../redux/slices/funds/fundsSlice';\r\nimport { InvestmentType, NewTransaction, SecurityType, Transaction, TransactionType } from '../../../../models/transactions/transactionsModels';\r\nimport { setSelectedPCO } from '../../../../redux/slices/pcos/pcosSlice';\r\nimport { NewInvestment, PCOSummary } from '../../../../models/pcos/pcoModels';\r\nimport { fetchFunds } from '../../../../redux/thunks/fundThunk';\r\nimport { fetchPCOs } from '../../../../redux/thunks/pcoThunk';\r\nimport { LPCashCallType } from '../../../../models/cashCalls/cashCallsModels';\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nconst autocompleteInputStyles = makeStyles((theme: Theme) => ({\r\n    autocomplete: {\r\n        'borderRadius': 5,\r\n        'backgroundColor': theme.palette.background.paper,\r\n        '& input::placeholder': {\r\n            color: theme.palette.text.primary\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: theme.palette.text.primary,\r\n            opacity: 0.8\r\n        }\r\n    },\r\n    textInput: {\r\n        'color': theme.palette.text.primary,\r\n        'fontWeight': 800,\r\n        'fontFamily': 'Raleway',\r\n        height: '2.2em',\r\n        /* 'height': '2.5em', */\r\n        'fontSize': 10,\r\n        '& .MuiIconButton-label': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chart: {\r\n            flex: 1,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n        },\r\n        fabIcon: {\r\n            marginLeft: 10,\r\n            alignSelf: 'center',\r\n        },\r\n        searchBox: {\r\n            width: '400px',\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        switchField: {\r\n            '& .MuiFormControlLabel-label': {\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        textFildsSmall: {\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        inputRoot: {\r\n            height: '1em',\r\n            'borderRadius': 5,\r\n            'backgroundColor': 'transparent',\r\n            /*         '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'black'\r\n                    },*/\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.primary.main\r\n            },\r\n            /*  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'black'\r\n              }, */\r\n            '& .MuiChip-root': {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: 'transparent',\r\n                borderRadius: 5\r\n            },\r\n            '& .MuiChip-deleteIconSmall': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        option: {\r\n            'background': theme.palette.background.paper,\r\n            '&:hover': {\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 400,\r\n                fontFamily: 'Raleway'\r\n            },\r\n            '&[aria-selected=\"true\"]': {\r\n                background: theme.palette.background.paper,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 700,\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        popupIndicator: {\r\n            '&.MuiIconButton-root': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        clearIndicator: {\r\n            color: theme.palette.text.primary\r\n        },\r\n    }),\r\n);\r\nconst LPTypes = [\r\n    \"Corporate\",\r\n    \"General Partner\",\r\n    \"Individual\",\r\n    \"Institutional\",\r\n];\r\n\r\ninterface AddNewPCOInvestmentFromLPComponentProps {\r\n    disabled: boolean,\r\n    setDisabled: any,\r\n    newInvestment: NewInvestment | null,\r\n    setNewInvestment: (newState: any) => void\r\n}\r\n\r\nconst AddNewPCOInvestmentFromLPComponent = ({ setDisabled, disabled, newInvestment, setNewInvestment }: AddNewPCOInvestmentFromLPComponentProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const autocompleteInputClasses = autocompleteInputStyles();\r\n    const theme = useTheme();\r\n    const [amountFundCurrency, setAmountFundCurrency] = useState<number>(0);\r\n    const [currency, setCurrency] = useState<string>('');\r\n    const { pcos, selectedPCO } = useSelector((state: RootState) => state.pcos);\r\n    const pcoId = selectedPCO?.id ?? '';\r\n    const pcoName = selectedPCO?.shortName ?? '';\r\n    const [fundId, setFundId] = useState<string>('');\r\n    const { funds, selectedFund } = useSelector((state: RootState) => state.funds);\r\n    const { lps, selectedLP } = useSelector((state: RootState) => state.lps);\r\n    const [transType, setTransType] = useState<string>('');\r\n    const [investmentType, setInvestmentType] = useState<string>('');\r\n    const [securityType, setSecurityType] = useState<string>('');\r\n    const [lpId, setLPId] = useState<string>('');\r\n\r\n    const onValueChange = (value: string, field: string) => {\r\n        switch (field) {\r\n            case 'lpId':\r\n                setLPId(value);\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    lpId: value\r\n                });\r\n                setDisabled(value === '' || investmentType === '' || amountFundCurrency === 0);\r\n                break;\r\n            case 'investmentType':\r\n                setInvestmentType(value);\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    investmentType: value\r\n                });\r\n                setDisabled(value === '' || lpId === '' || amountFundCurrency === 0);\r\n                break;\r\n            case 'amountFundCurrency':\r\n                setAmountFundCurrency(+value);\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    amountFundCurrency: +value\r\n                });\r\n                setDisabled(+value === 0 || investmentType === '' || lpId === '');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const optionLabelLP = (option: string | LP) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.name ? option.name : option;\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchLPs());\r\n    }, [dispatch])\r\n\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{ paddingTop: '10px' }}>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <Autocomplete\r\n                    id={'fundsAutocomplete'}\r\n                    popupIcon={<ExpandMoreIcon />}\r\n                    size={'small'}\r\n                    autoHighlight={true}\r\n                    autoSelect={true}\r\n                    autoComplete={false}\r\n                    classes={classes}\r\n                    sx={{ marginRight: '1em', width: '400px' }}\r\n                    isOptionEqualToValue={(option, value) => option === value}\r\n                    onChange={(e, value: LP | null) => onValueChange(value ? value.id : '', 'lpId')}\r\n                    value={selectedLP ?? undefined}\r\n                    options={lps && lps.length > 0 ? lps.slice().sort(function (a, b) {\r\n                        if (a.id.toLowerCase() < b.id.toLowerCase()) return -1;\r\n                        if (a.id.toLowerCase() > b.id.toLowerCase()) return 1;\r\n                        return 0;\r\n                    }) : []}\r\n                    getOptionLabel={(option) => optionLabelLP(option).toString()}\r\n                    renderInput={(params: AutocompleteRenderInputParams) => {\r\n                        params.InputProps.className = autocompleteInputClasses.textInput;\r\n                        return <TextField {...params}\r\n                            className={autocompleteInputClasses.autocomplete}\r\n                            variant=\"outlined\"\r\n                            autoComplete=\"off\"\r\n                            label={'LP'}\r\n                            helperText={!disabled && fundId === '' ? 'Required' : ''}\r\n                            type={'text'}\r\n                        />;\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label={'PCO'}\r\n                        aria-label=\"baseCapital\"\r\n                        value={pcoName}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputProps={{\r\n                            readOnly: true,\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <Autocomplete\r\n                    id={'fundsAutocomplete'}\r\n                    popupIcon={<ExpandMoreIcon />}\r\n                    size={'small'}\r\n                    autoHighlight={true}\r\n                    autoSelect={true}\r\n                    autoComplete={false}\r\n                    disableClearable\r\n                    classes={classes}\r\n                    sx={{ marginRight: '1em', width: '400px' }}\r\n                    isOptionEqualToValue={(option, value) => option === value}\r\n                    onChange={(e, value: any) => onValueChange(value, 'investmentType')}\r\n                    value={investmentType ?? ''}\r\n                    options={InvestmentType?.slice()}\r\n                    renderInput={(params: AutocompleteRenderInputParams) => {\r\n                        params.InputProps.className = autocompleteInputClasses.textInput;\r\n                        return <TextField {...params}\r\n                            className={autocompleteInputClasses.autocomplete}\r\n                            variant=\"outlined\"\r\n                            autoComplete=\"off\"\r\n                            label={'Investment Type'}\r\n                            helperText={!disabled && investmentType === '' ? 'Required' : ''}\r\n                            type={'text'}\r\n                        />;\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"baseCapital\"\r\n                        value={amountFundCurrency}\r\n                        label={'Amount'}\r\n                        type={'number'}\r\n                        onChange={(e) => onValueChange(e.target.value, 'amountFundCurrency')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default AddNewPCOInvestmentFromLPComponent;","import { Autocomplete, AutocompleteRenderInputParams, Fab, FormControlLabel, Grid, IconButton, InputAdornment, Switch, TextField, Tooltip, Typography,Box } from '@mui/material';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Theme } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport { GridApi } from 'ag-grid-community';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { CountryList, CurrencyList, NewCommitment } from '../../../../models/shared/sharedModels';\r\nimport { LP } from '../../../../models/lps/lpModels';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../redux/slices/rootSlice';\r\nimport { useAppDispatch } from '../../../../redux/store';\r\nimport { fetchLPs } from '../../../../redux/thunks/lpThunk';\r\nimport { FundSummary } from '../../../../models/funds/fundModels';\r\nimport { setSelectedLP } from '../../../../redux/slices/lps/lpsSlice';\r\nimport { setSelectedFund } from '../../../../redux/slices/funds/fundsSlice';\r\nimport { fetchFunds } from '../../../../redux/thunks/fundThunk';\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nconst autocompleteInputStyles = makeStyles((theme: Theme) => ({\r\n    autocomplete: {\r\n        'borderRadius': 5,\r\n        'backgroundColor': theme.palette.background.paper,\r\n        '& input::placeholder': {\r\n            color: theme.palette.text.primary\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: theme.palette.text.primary,\r\n            opacity: 0.8\r\n        }\r\n    },\r\n    textInput: {\r\n        'color': theme.palette.text.primary,\r\n        'fontWeight': 800,\r\n        'fontFamily': 'Raleway',\r\n        height: '2.2em',\r\n        /* 'height': '2.5em', */\r\n        'fontSize': 10,\r\n        '& .MuiIconButton-label': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chart: {\r\n            flex: 1,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n        },\r\n        fabIcon: {\r\n            marginLeft: 10,\r\n            alignSelf: 'center',\r\n        },\r\n        searchBox: {\r\n            width: '400px',\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        switchField: {\r\n            '& .MuiFormControlLabel-label': {\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        textFildsSmall: {\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        inputRoot: {\r\n            height: '1em',\r\n            'borderRadius': 5,\r\n            'backgroundColor': 'transparent',\r\n            /*         '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'black'\r\n                    },*/\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.primary.main\r\n            },\r\n            /*  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'black'\r\n              }, */\r\n            '& .MuiChip-root': {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: 'transparent',\r\n                borderRadius: 5\r\n            },\r\n            '& .MuiChip-deleteIconSmall': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        option: {\r\n            'background': theme.palette.background.paper,\r\n            '&:hover': {\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 400,\r\n                fontFamily: 'Raleway'\r\n            },\r\n            '&[aria-selected=\"true\"]': {\r\n                background: theme.palette.background.paper,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 700,\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        popupIndicator: {\r\n            '&.MuiIconButton-root': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        clearIndicator: {\r\n            color: theme.palette.text.primary\r\n        },\r\n    }),\r\n);\r\nconst LPTypes = [\r\n    \"Corporate\",\r\n    \"General Partner\",\r\n    \"Individual\",\r\n    \"Institutional\",\r\n];\r\n\r\ninterface AddNewLPCommitmentComponentProps {\r\n    disabled: boolean,\r\n    setDisabled: any,\r\n    newCommitment: NewCommitment | null,\r\n    setNewCommitment: (newState: any) => void\r\n}\r\n\r\nconst AddNewLPCommitmentComponent = ({ setDisabled, disabled, newCommitment, setNewCommitment }: AddNewLPCommitmentComponentProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const theme = useTheme();\r\n    const autocompleteInputClasses = autocompleteInputStyles();\r\n    const [committedAmount, setCommittedAmount] = useState<number>(0);\r\n    const [currency, setCurrency] = useState<string>('');\r\n    const { lps, selectedLP } = useSelector((state: RootState) => state.lps);\r\n    const lpId = selectedLP?.id ?? '';\r\n    const lpName = selectedLP?.shortName ?? '';\r\n    const [transfered, setTransfered] = useState<boolean>(false);\r\n    const [fundId, setFundId] = useState<string>('');\r\n    const { funds, selectedFund } = useSelector((state: RootState) => state.funds);\r\n\r\n    const onValueChange = (value: string, field: string) => {\r\n        switch (field) {\r\n            case 'fundId':\r\n                setFundId(value);\r\n                setNewCommitment({\r\n                    ...newCommitment,\r\n                    fundId: value\r\n                });\r\n                setDisabled(value === '' || currency === '' || committedAmount === 0);\r\n                break;\r\n            case 'currency':\r\n                setCurrency(value);\r\n                setNewCommitment({\r\n                    ...newCommitment,\r\n                    currency: value\r\n                });\r\n                setDisabled(value === '' || fundId === '' || committedAmount === 0);\r\n                break;\r\n            case 'committedAmount':\r\n                setCommittedAmount(+value);\r\n                setNewCommitment({\r\n                    ...newCommitment,\r\n                    committedAmount: +value\r\n                });\r\n                setDisabled(currency === '' || fundId === '' || +value === 0);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const optionLabel = (option: string | LP) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.name ? option.name : option;\r\n        }\r\n    };\r\n\r\n    const optionLabelFund = (option: string | FundSummary) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.fundName ? option.fundName : option;\r\n        }\r\n    };\r\n\r\n    const handleSwitchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setTransfered(event.target.checked);\r\n        setNewCommitment({\r\n            ...newCommitment,\r\n            transfered: event.target.checked\r\n        });\r\n        setDisabled(lpId === '' || currency === '' || fundId === '' || committedAmount === 0);\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchFunds());\r\n    }, [dispatch])\r\n\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{paddingTop:'10px'}}>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <TextField\r\n                    className={classes.searchBox}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={'LP'}\r\n                    aria-label=\"baseCapital\"\r\n                    value={lpName}\r\n                    inputProps={{\r\n                        style: { height: '1em' },\r\n                    }}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <Autocomplete\r\n                    id={'fundsAutocomplete'}\r\n                    popupIcon={<ExpandMoreIcon />}\r\n                    size={'small'}\r\n                    autoHighlight={true}\r\n                    autoSelect={true}\r\n                    autoComplete={false}\r\n                    classes={classes}\r\n                    sx={{ marginRight: '1em', width: '400px' }}\r\n                    isOptionEqualToValue={(option, value) => option === value}\r\n                    onChange={(e, value: FundSummary | null) => onValueChange(value ? value.id : '', 'fundId')}\r\n                    value={selectedFund ?? undefined}\r\n                    options={funds && funds.length > 0 ? funds.slice().sort(function (a, b) {\r\n                        if (a.id.toLowerCase() < b.id.toLowerCase()) return -1;\r\n                        if (a.id.toLowerCase() > b.id.toLowerCase()) return 1;\r\n                        return 0;\r\n                    }) : []}\r\n                    getOptionLabel={(option) => optionLabelFund(option).toString()}\r\n                    renderInput={(params: AutocompleteRenderInputParams) => {\r\n                        params.InputProps.className = autocompleteInputClasses.textInput;\r\n                        return <TextField {...params}\r\n                            className={autocompleteInputClasses.autocomplete}\r\n                            variant=\"outlined\"\r\n                            autoComplete=\"off\"\r\n                            label={'Fund*'}\r\n                            helperText={!disabled && fundId === '' ? 'Required' : ''}\r\n                            type={'text'}\r\n                        />;\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <Autocomplete\r\n                    id={'fundsAutocomplete'}\r\n                    popupIcon={<ExpandMoreIcon />}\r\n                    size={'small'}\r\n                    autoHighlight={true}\r\n                    autoSelect={true}\r\n                    autoComplete={false}\r\n                    disableClearable\r\n                    classes={classes}\r\n                    sx={{ marginRight: '1em', width: '400px' }}\r\n                    isOptionEqualToValue={(option, value) => option === value}\r\n                    onChange={(e, value: any) => onValueChange(value, 'currency')}\r\n                    value={currency ?? ''}\r\n                    options={CurrencyList?.map(x => x.code)?.slice()}\r\n                    renderInput={(params: AutocompleteRenderInputParams) => {\r\n                        params.InputProps.className = autocompleteInputClasses.textInput;\r\n                        return <TextField {...params}\r\n                            className={autocompleteInputClasses.autocomplete}\r\n                            variant=\"outlined\"\r\n                            autoComplete=\"off\"\r\n                            label={'Currency*'}\r\n                            helperText={!disabled && currency === '' ? 'Required' : ''}\r\n                            type={'text'}\r\n                        />;\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <TextField\r\n                    className={classes.searchBox}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    aria-label=\"baseCapital\"\r\n                    value={committedAmount}\r\n                    type={'number'}\r\n                    label={'Amount*'}\r\n                    onChange={(e) => onValueChange(e.target.value, 'committedAmount')}\r\n                    inputProps={{\r\n                        style: { height: '1em' },\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Typography variant='body2'>Transfer</Typography>\r\n                <Tooltip title={'Is transfer from one fund to another'}>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch color=\"primary\" checked={transfered} onChange={handleSwitchChange} />}\r\n                        label={''}\r\n                        className={classes.switchField}\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </Tooltip>\r\n            </Grid>\r\n\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default AddNewLPCommitmentComponent;","import { Autocomplete, AutocompleteRenderInputParams, Fab, FormControlLabel, Grid, IconButton, InputAdornment, Switch, TextField, Tooltip, Typography,Box } from '@mui/material';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Theme } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport { GridApi } from 'ag-grid-community';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { CountryList, CurrencyList } from '../../../../models/shared/sharedModels';\r\nimport { LP } from '../../../../models/lps/lpModels';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../redux/slices/rootSlice';\r\nimport { useAppDispatch } from '../../../../redux/store';\r\nimport { fetchLPs } from '../../../../redux/thunks/lpThunk';\r\nimport { FundSummary } from '../../../../models/funds/fundModels';\r\nimport { setSelectedLP } from '../../../../redux/slices/lps/lpsSlice';\r\nimport { setSelectedFund } from '../../../../redux/slices/funds/fundsSlice';\r\nimport { fetchFunds } from '../../../../redux/thunks/fundThunk';\r\nimport { fetchPCOs } from '../../../../redux/thunks/pcoThunk';\r\nimport { NewInvestment, PCOSummary } from '../../../../models/pcos/pcoModels';\r\nimport { InvestmentType } from '../../../../models/transactions/transactionsModels';\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nconst autocompleteInputStyles = makeStyles((theme: Theme) => ({\r\n    autocomplete: {\r\n        'borderRadius': 5,\r\n        'backgroundColor': theme.palette.background.paper,\r\n        '& input::placeholder': {\r\n            color: theme.palette.text.primary\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: theme.palette.text.primary,\r\n            opacity: 0.8\r\n        }\r\n    },\r\n    textInput: {\r\n        'color': theme.palette.text.primary,\r\n        'fontWeight': 800,\r\n        'fontFamily': 'Raleway',\r\n        height: '2.2em',\r\n        /* 'height': '2.5em', */\r\n        'fontSize': 10,\r\n        '& .MuiIconButton-label': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chart: {\r\n            flex: 1,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n        },\r\n        fabIcon: {\r\n            marginLeft: 10,\r\n            alignSelf: 'center',\r\n        },\r\n        searchBox: {\r\n            width: '400px',\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        switchField: {\r\n            '& .MuiFormControlLabel-label': {\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        textFildsSmall: {\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        inputRoot: {\r\n            height: '1em',\r\n            'borderRadius': 5,\r\n            'backgroundColor': 'transparent',\r\n            /*         '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'black'\r\n                    },*/\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.primary.main\r\n            },\r\n            /*  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'black'\r\n              }, */\r\n            '& .MuiChip-root': {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: 'transparent',\r\n                borderRadius: 5\r\n            },\r\n            '& .MuiChip-deleteIconSmall': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        option: {\r\n            'background': theme.palette.background.paper,\r\n            '&:hover': {\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 400,\r\n                fontFamily: 'Raleway'\r\n            },\r\n            '&[aria-selected=\"true\"]': {\r\n                background: theme.palette.background.paper,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 700,\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        popupIndicator: {\r\n            '&.MuiIconButton-root': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        clearIndicator: {\r\n            color: theme.palette.text.primary\r\n        },\r\n    }),\r\n);\r\nconst LPTypes = [\r\n    \"Corporate\",\r\n    \"General Partner\",\r\n    \"Individual\",\r\n    \"Institutional\",\r\n];\r\n\r\ninterface AddNewLPToPCOinvestmentComponentProps {\r\n    disabled: boolean,\r\n    setDisabled: any,\r\n    newInvestment: NewInvestment | null,\r\n    setNewInvestment: (newState: any) => void\r\n}\r\n\r\nconst AddNewLPToPCOinvestmentComponent = ({ setDisabled, disabled, newInvestment, setNewInvestment }: AddNewLPToPCOinvestmentComponentProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const autocompleteInputClasses = autocompleteInputStyles();\r\n    const theme = useTheme();\r\n    const [amount, setAmount] = useState<number>(0);\r\n    const [currency, setCurrency] = useState<string>('');\r\n    const { lps, selectedLP } = useSelector((state: RootState) => state.lps);\r\n    const lpId = selectedLP?.id ?? '';\r\n    const lpName = selectedLP?.shortName ?? '';\r\n    const [transfered, setTransfered] = useState<boolean>(false);\r\n    const [pcoId, setPcoId] = useState<string>('');\r\n    const { pcos,selectedPCO } = useSelector((state: RootState) => state.pcos);\r\n    const [investmentType, setInvestmentType] = useState<string>('');\r\n\r\n    const onValueChange = (value: string, field: string) => {\r\n        switch (field) {\r\n            case 'pcoId':\r\n                setPcoId(value);\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    pcoId: value\r\n                });\r\n                setDisabled(value === '' || currency === '' || amount === 0);\r\n                break;\r\n            case 'currency':\r\n                setCurrency(value);\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    currency: value\r\n                });\r\n                setDisabled(value === '' || pcoId === '' || amount === 0);\r\n                break;\r\n            case 'investmentType':\r\n                setInvestmentType(value);\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    investmentType: value\r\n                });\r\n                setDisabled(value === '' || pcoId === '' || amount === 0);\r\n                break;\r\n            case 'amount':\r\n                setAmount(+value);\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    amount: +value\r\n                });\r\n                setDisabled(currency === '' || pcoId === '' || +value === 0);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const optionLabel = (option: string | PCOSummary) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.pcoName ? option.pcoName : option;\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        dispatch(fetchPCOs());\r\n    }, [dispatch])\r\n\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{ paddingTop: '10px' }}>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <TextField\r\n                    className={classes.searchBox}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={'LP'}\r\n                    aria-label=\"baseCapital\"\r\n                    value={lpName}\r\n                    inputProps={{\r\n                        style: { height: '1em' },\r\n                    }}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <Autocomplete\r\n                    id={'fundsAutocomplete'}\r\n                    popupIcon={<ExpandMoreIcon />}\r\n                    size={'small'}\r\n                    autoHighlight={true}\r\n                    autoSelect={true}\r\n                    autoComplete={false}\r\n                    classes={classes}\r\n                    sx={{ marginRight: '1em', width: '400px' }}\r\n                    isOptionEqualToValue={(option, value) => option === value}\r\n                    onChange={(e, value: PCOSummary | null) => onValueChange(value ? value.id : '', 'pcoId')}\r\n                    value={selectedPCO ?? undefined}\r\n                    options={pcos && pcos.length > 0 ? pcos.slice().sort(function (a, b) {\r\n                        if (a.id.toLowerCase() < b.id.toLowerCase()) return -1;\r\n                        if (a.id.toLowerCase() > b.id.toLowerCase()) return 1;\r\n                        return 0;\r\n                    }) : []}\r\n                    getOptionLabel={(option) => optionLabel(option).toString()}\r\n                    renderInput={(params: AutocompleteRenderInputParams) => {\r\n                        params.InputProps.className = autocompleteInputClasses.textInput;\r\n                        return <TextField {...params}\r\n                            className={autocompleteInputClasses.autocomplete}\r\n                            variant=\"outlined\"\r\n                            autoComplete=\"off\"\r\n                            label={'PCO'}\r\n                            helperText={!disabled && pcoId === '' ? 'Required' : ''}\r\n                            type={'text'}\r\n                        />;\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <Autocomplete\r\n                    id={'fundsAutocomplete'}\r\n                    popupIcon={<ExpandMoreIcon />}\r\n                    size={'small'}\r\n                    autoHighlight={true}\r\n                    autoSelect={true}\r\n                    autoComplete={false}\r\n                    disableClearable\r\n                    classes={classes}\r\n                    sx={{ marginRight: '1em', width: '400px' }}\r\n                    isOptionEqualToValue={(option, value) => option === value}\r\n                    onChange={(e, value: any) => onValueChange(value, 'currency')}\r\n                    value={currency ?? ''}\r\n                    options={CurrencyList?.map(x => x.code)?.slice()}\r\n                    renderInput={(params: AutocompleteRenderInputParams) => {\r\n                        params.InputProps.className = autocompleteInputClasses.textInput;\r\n                        return <TextField {...params}\r\n                            className={autocompleteInputClasses.autocomplete}\r\n                            variant=\"outlined\"\r\n                            autoComplete=\"off\"\r\n                            label={'Currency'}\r\n                            helperText={!disabled && currency === '' ? 'Required' : ''}\r\n                            type={'text'}\r\n                        />;\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <Autocomplete\r\n                    id={'fundsAutocomplete'}\r\n                    popupIcon={<ExpandMoreIcon />}\r\n                    size={'small'}\r\n                    autoHighlight={true}\r\n                    autoSelect={true}\r\n                    autoComplete={false}\r\n                    disableClearable\r\n                    classes={classes}\r\n                    sx={{ marginRight: '1em', width: '400px' }}\r\n                    isOptionEqualToValue={(option, value) => option === value}\r\n                    onChange={(e, value: any) => onValueChange(value, 'investmentType')}\r\n                    value={investmentType ?? ''}\r\n                    options={InvestmentType?.slice()}\r\n                    renderInput={(params: AutocompleteRenderInputParams) => {\r\n                        params.InputProps.className = autocompleteInputClasses.textInput;\r\n                        return <TextField {...params}\r\n                            className={autocompleteInputClasses.autocomplete}\r\n                            variant=\"outlined\"\r\n                            autoComplete=\"off\"\r\n                            label={'Investment Type'}\r\n                            helperText={!disabled && investmentType === '' ? 'Required' : ''}\r\n                            type={'text'}\r\n                        />;\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <TextField\r\n                    className={classes.searchBox}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    aria-label=\"baseCapital\"\r\n                    value={amount}\r\n                    type={'number'}\r\n                    label={'Amount'}\r\n                    onChange={(e) => onValueChange(e.target.value, 'amount')}\r\n                    inputProps={{\r\n                        style: { height: '1em' },\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default AddNewLPToPCOinvestmentComponent;","import { Autocomplete, AutocompleteRenderInputParams, Box, Fab, FormControlLabel, Grid, IconButton, InputAdornment, Switch, TextField, Tooltip, Typography } from '@mui/material';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Theme } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport { GridApi } from 'ag-grid-community';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { CountryList, CurrencyList, NewCommitment } from '../../../../models/shared/sharedModels';\r\nimport { LP } from '../../../../models/lps/lpModels';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../redux/slices/rootSlice';\r\nimport { useAppDispatch } from '../../../../redux/store';\r\nimport { fetchLPs } from '../../../../redux/thunks/lpThunk';\r\nimport { FundSummary } from '../../../../models/funds/fundModels';\r\nimport { setLPs, setSelectedLP } from '../../../../redux/slices/lps/lpsSlice';\r\nimport { setSelectedFund } from '../../../../redux/slices/funds/fundsSlice';\r\nimport { InvestmentType, NewTransaction, SecurityType, Transaction, TransactionType } from '../../../../models/transactions/transactionsModels';\r\nimport { setSelectedPCO } from '../../../../redux/slices/pcos/pcosSlice';\r\nimport { PCOSummary } from '../../../../models/pcos/pcoModels';\r\nimport { fetchFunds } from '../../../../redux/thunks/fundThunk';\r\nimport { fetchPCOs } from '../../../../redux/thunks/pcoThunk';\r\nimport { LPDistributionTypes, NewDistribution } from '../../../../models/distributions/distributionsModels';\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nconst autocompleteInputStyles = makeStyles((theme: Theme) => ({\r\n    autocomplete: {\r\n        'borderRadius': 5,\r\n        'backgroundColor': theme.palette.background.paper,\r\n        '& input::placeholder': {\r\n            color: theme.palette.text.primary\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: theme.palette.text.primary,\r\n            opacity: 0.8\r\n        }\r\n    },\r\n    textInput: {\r\n        'color': theme.palette.text.primary,\r\n        'fontWeight': 800,\r\n        'fontFamily': 'Raleway',\r\n        height: '2.2em',\r\n        /* 'height': '2.5em', */\r\n        'fontSize': 10,\r\n        '& .MuiIconButton-label': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chart: {\r\n            flex: 1,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n        },\r\n        fabIcon: {\r\n            marginLeft: 10,\r\n            alignSelf: 'center',\r\n        },\r\n        searchBox: {\r\n            width: '400px',\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        switchField: {\r\n            '& .MuiFormControlLabel-label': {\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        textFildsSmall: {\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        inputRoot: {\r\n            height: '1em',\r\n            'borderRadius': 5,\r\n            'backgroundColor': 'transparent',\r\n            /*         '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'black'\r\n                    },*/\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.primary.main\r\n            },\r\n            /*  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'black'\r\n              }, */\r\n            '& .MuiChip-root': {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: 'transparent',\r\n                borderRadius: 5\r\n            },\r\n            '& .MuiChip-deleteIconSmall': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        option: {\r\n            'background': theme.palette.background.paper,\r\n            '&:hover': {\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 400,\r\n                fontFamily: 'Raleway'\r\n            },\r\n            '&[aria-selected=\"true\"]': {\r\n                background: theme.palette.background.paper,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 700,\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        popupIndicator: {\r\n            '&.MuiIconButton-root': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        clearIndicator: {\r\n            color: theme.palette.text.primary\r\n        },\r\n    }),\r\n);\r\nconst LPTypes = [\r\n    \"Corporate\",\r\n    \"General Partner\",\r\n    \"Individual\",\r\n    \"Institutional\",\r\n];\r\n\r\ninterface AddNewLPExitComponentProps {\r\n    disabled: boolean,\r\n    setDisabled: any,\r\n    newDistribution: NewDistribution | null,\r\n    setNewDistribution: (newState: any) => void\r\n}\r\n\r\nconst AddNewLPExitComponent = ({ setDisabled, disabled, newDistribution, setNewDistribution }: AddNewLPExitComponentProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const autocompleteInputClasses = autocompleteInputStyles();\r\n    const theme = useTheme();\r\n    const [amountFundCurrency, setAmountFundCurrency] = useState<number>(0);\r\n    const [currency, setCurrency] = useState<string>('');\r\n    const [pcoId, setPCOId] = useState<string>('');\r\n    const { pcos, selectedPCO } = useSelector((state: RootState) => state.pcos);\r\n    const [fundId, setFundId] = useState<string>('');\r\n    const { funds, selectedFund } = useSelector((state: RootState) => state.funds);\r\n    const { lps, selectedLP } = useSelector((state: RootState) => state.lps);\r\n    const [transType, setTransType] = useState<string>('');\r\n    const [investmentType, setInvestmentType] = useState<string>('');\r\n    const [securityType, setSecurityType] = useState<string>('');\r\n    const lpId = selectedLP?.id ?? '';\r\n    const lpName = selectedLP?.shortName ?? '';\r\n\r\n    const onValueChange = (value: string, field: string) => {\r\n        switch (field) {\r\n            case 'pcoId':\r\n                setPCOId(value);\r\n                dispatch(setSelectedPCO(pcos?.filter(x => x.id === value)[0] ?? null))\r\n                setNewDistribution({\r\n                    ...newDistribution,\r\n                    pcoId: value\r\n                });\r\n                setDisabled(value === '' || transType === '' || amountFundCurrency === 0);\r\n                break;\r\n            case 'transType':\r\n                setTransType(value);\r\n                setNewDistribution({\r\n                    ...newDistribution,\r\n                    transType: value\r\n                });\r\n                setDisabled(value === '' || pcoId === '' || amountFundCurrency === 0);\r\n                break;\r\n            case 'amountFundCurrency':\r\n                setAmountFundCurrency(+value);\r\n                setNewDistribution({\r\n                    ...newDistribution,\r\n                    amountFundCurrency: +value\r\n                });\r\n                setDisabled(+value === 0 || transType === '' || pcoId === '');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const optionLabel = (option: string | PCOSummary) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.pcoName ? option.pcoName : option;\r\n        }\r\n    };\r\n\r\n    const optionLabelFund = (option: string | FundSummary) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.fundName ? option.fundName : option;\r\n        }\r\n    };\r\n\r\n    const optionLabelLP = (option: string | LP) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.name ? option.name : option;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchFunds());\r\n        dispatch(fetchPCOs());\r\n        dispatch(fetchLPs());\r\n    }, [dispatch])\r\n\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{ paddingTop: '10px' }}>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n            <TextField\r\n                    className={classes.searchBox}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={'LP'}\r\n                    aria-label=\"baseCapital\"\r\n                    value={lpName}\r\n                    inputProps={{\r\n                        style: { height: '1em' },\r\n                    }}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <Autocomplete\r\n                    id={'fundsAutocomplete'}\r\n                    popupIcon={<ExpandMoreIcon />}\r\n                    size={'small'}\r\n                    autoHighlight={true}\r\n                    autoSelect={true}\r\n                    autoComplete={false}\r\n                    classes={classes}\r\n                    sx={{ marginRight: '1em', width: '400px' }}\r\n                    isOptionEqualToValue={(option, value) => option === value}\r\n                    onChange={(e, value: PCOSummary | null) => onValueChange(value ? value.id : '', 'pcoId')}\r\n                    value={selectedPCO ?? undefined}\r\n                    options={pcos && pcos.length > 0 ? pcos.slice().sort(function (a, b) {\r\n                        if (a.id.toLowerCase() < b.id.toLowerCase()) return -1;\r\n                        if (a.id.toLowerCase() > b.id.toLowerCase()) return 1;\r\n                        return 0;\r\n                    }) : []}\r\n                    getOptionLabel={(option) => optionLabel(option).toString()}\r\n                    renderInput={(params: AutocompleteRenderInputParams) => {\r\n                        params.InputProps.className = autocompleteInputClasses.textInput;\r\n                        return <TextField {...params}\r\n                            className={autocompleteInputClasses.autocomplete}\r\n                            variant=\"outlined\"\r\n                            autoComplete=\"off\"\r\n                            label={'PCO'}\r\n                            helperText={!disabled && pcoId === '' ? 'Required' : ''}\r\n                            type={'text'}\r\n                        />;\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <Autocomplete\r\n                    id={'fundsAutocomplete'}\r\n                    popupIcon={<ExpandMoreIcon />}\r\n                    size={'small'}\r\n                    autoHighlight={true}\r\n                    autoSelect={true}\r\n                    autoComplete={false}\r\n                    disableClearable\r\n                    classes={classes}\r\n                    sx={{ marginRight: '1em', width: '400px' }}\r\n                    isOptionEqualToValue={(option, value) => option === value}\r\n                    onChange={(e, value: any) => onValueChange(value, 'transType')}\r\n                    value={transType ?? ''}\r\n                    options={LPDistributionTypes?.slice()}\r\n                    renderInput={(params: AutocompleteRenderInputParams) => {\r\n                        params.InputProps.className = autocompleteInputClasses.textInput;\r\n                        return <TextField {...params}\r\n                            className={autocompleteInputClasses.autocomplete}\r\n                            variant=\"outlined\"\r\n                            autoComplete=\"off\"\r\n                            label={'Transaction Type*'}\r\n                            helperText={!disabled && transType === '' ? 'Required' : ''}\r\n                            type={'text'}\r\n                        />;\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <TextField\r\n                    className={classes.searchBox}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    aria-label=\"baseCapital\"\r\n                    value={amountFundCurrency}\r\n                    type={'number'}\r\n                    label={'Amount'}\r\n                    onChange={(e) => onValueChange(e.target.value, 'amountFundCurrency')}\r\n                    inputProps={{\r\n                        style: { height: '1em' },\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default AddNewLPExitComponent;","import { Autocomplete, AutocompleteRenderInputParams, Box, Fab, FormControlLabel, Grid, IconButton, InputAdornment, Switch, TextField, Tooltip, Typography } from '@mui/material';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Theme } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport { GridApi } from 'ag-grid-community';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { CountryList, CurrencyList, NewCommitment } from '../../../../models/shared/sharedModels';\r\nimport { LP } from '../../../../models/lps/lpModels';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../redux/slices/rootSlice';\r\nimport { useAppDispatch } from '../../../../redux/store';\r\nimport { fetchLPs } from '../../../../redux/thunks/lpThunk';\r\nimport { FundSummary } from '../../../../models/funds/fundModels';\r\nimport { setSelectedLP } from '../../../../redux/slices/lps/lpsSlice';\r\nimport { setSelectedFund } from '../../../../redux/slices/funds/fundsSlice';\r\nimport { fetchFunds } from '../../../../redux/thunks/fundThunk';\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nconst autocompleteInputStyles = makeStyles((theme: Theme) => ({\r\n    autocomplete: {\r\n        'borderRadius': 5,\r\n        'backgroundColor': theme.palette.background.paper,\r\n        '& input::placeholder': {\r\n            color: theme.palette.text.primary\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: theme.palette.text.primary,\r\n            opacity: 0.8\r\n        }\r\n    },\r\n    textInput: {\r\n        'color': theme.palette.text.primary,\r\n        'fontWeight': 800,\r\n        'fontFamily': 'Raleway',\r\n        height: '2.2em',\r\n        /* 'height': '2.5em', */\r\n        'fontSize': 10,\r\n        '& .MuiIconButton-label': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chart: {\r\n            flex: 1,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n        },\r\n        fabIcon: {\r\n            marginLeft: 10,\r\n            alignSelf: 'center',\r\n        },\r\n        searchBox: {\r\n            width: '400px',\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        switchField: {\r\n            '& .MuiFormControlLabel-label': {\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        textFildsSmall: {\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        inputRoot: {\r\n            height: '1em',\r\n            'borderRadius': 5,\r\n            'backgroundColor': 'transparent',\r\n            /*         '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'black'\r\n                    },*/\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.primary.main\r\n            },\r\n            /*  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'black'\r\n              }, */\r\n            '& .MuiChip-root': {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: 'transparent',\r\n                borderRadius: 5\r\n            },\r\n            '& .MuiChip-deleteIconSmall': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        option: {\r\n            'background': theme.palette.background.paper,\r\n            '&:hover': {\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 400,\r\n                fontFamily: 'Raleway'\r\n            },\r\n            '&[aria-selected=\"true\"]': {\r\n                background: theme.palette.background.paper,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 700,\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        popupIndicator: {\r\n            '&.MuiIconButton-root': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        clearIndicator: {\r\n            color: theme.palette.text.primary\r\n        },\r\n    }),\r\n);\r\nconst LPTypes = [\r\n    \"Corporate\",\r\n    \"General Partner\",\r\n    \"Individual\",\r\n    \"Institutional\",\r\n];\r\n\r\ninterface AddNewFundCommitmentComponentProps {\r\n    disabled: boolean,\r\n    setDisabled: any,\r\n    newCommitment: NewCommitment | null,\r\n    setNewCommitment: (newState: any) => void\r\n}\r\n\r\nconst AddNewFundCommitmentComponent = ({ setDisabled, disabled, newCommitment, setNewCommitment }: AddNewFundCommitmentComponentProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const theme = useTheme();\r\n    const autocompleteInputClasses = autocompleteInputStyles();\r\n    const [committedAmount, setCommittedAmount] = useState<number>(0);\r\n    const [currency, setCurrency] = useState<string>('');\r\n    const { lps, selectedLP } = useSelector((state: RootState) => state.lps);\r\n    const [transfered, setTransfered] = useState<boolean>(false);\r\n    const [lpId, setLPId] = useState<string>('');\r\n    const { funds, selectedFund } = useSelector((state: RootState) => state.funds);\r\n    const fundId = selectedFund?.id ?? '';\r\n    const fundName = selectedFund?.shortName ?? '';\r\n\r\n    const onValueChange = (value: string, field: string) => {\r\n        switch (field) {\r\n            case 'lpId':\r\n                setLPId(value);\r\n                setNewCommitment({\r\n                    ...newCommitment,\r\n                    lpId: value\r\n                });\r\n                setDisabled(value === '' || currency === '' || committedAmount === 0);\r\n                break;\r\n            case 'currency':\r\n                setCurrency(value);\r\n                setNewCommitment({\r\n                    ...newCommitment,\r\n                    currency: value\r\n                });\r\n                setDisabled(value === '' || lpId === '' || committedAmount === 0);\r\n                break;\r\n            case 'committedAmount':\r\n                setCommittedAmount(+value);\r\n                setNewCommitment({\r\n                    ...newCommitment,\r\n                    committedAmount: +value\r\n                });\r\n                setDisabled(currency === '' || lpId === '' || +value === 0);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const optionLabel = (option: string | LP) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.name ? option.name : option;\r\n        }\r\n    };\r\n\r\n    const optionLabelFund = (option: string | FundSummary) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.fundName ? option.fundName : option;\r\n        }\r\n    };\r\n\r\n    const handleSwitchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setTransfered(event.target.checked);\r\n        setNewCommitment({\r\n            ...newCommitment,\r\n            transfered: event.target.checked\r\n        });\r\n        setDisabled(lpId === '' || currency === '' || fundId === '' || committedAmount === 0);\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchLPs());\r\n    }, [dispatch])\r\n\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{ paddingTop: '10px' }}>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label={'Fund'}\r\n                        aria-label=\"baseCapital\"\r\n                        value={fundName}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputProps={{\r\n                            readOnly: true,\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <Autocomplete\r\n                    id={'fundsAutocomplete'}\r\n                    popupIcon={<ExpandMoreIcon />}\r\n                    size={'small'}\r\n                    autoHighlight={true}\r\n                    autoSelect={true}\r\n                    autoComplete={false}\r\n                    classes={classes}\r\n                    sx={{ marginRight: '1em', width: '400px' }}\r\n                    isOptionEqualToValue={(option, value) => option === value}\r\n                    onChange={(e, value: LP | null) => onValueChange(value ? value.id : '', 'lpId')}\r\n                    value={selectedLP ?? undefined}\r\n                    options={lps && lps.length > 0 ? lps.slice().sort(function (a, b) {\r\n                        if (a.id.toLowerCase() < b.id.toLowerCase()) return -1;\r\n                        if (a.id.toLowerCase() > b.id.toLowerCase()) return 1;\r\n                        return 0;\r\n                    }) : []}\r\n                    getOptionLabel={(option) => optionLabel(option).toString()}\r\n                    renderInput={(params: AutocompleteRenderInputParams) => {\r\n                        params.InputProps.className = autocompleteInputClasses.textInput;\r\n                        return <TextField {...params}\r\n                            className={autocompleteInputClasses.autocomplete}\r\n                            variant=\"outlined\"\r\n                            autoComplete=\"off\"\r\n                            label={'LP*'}\r\n                            helperText={!disabled && fundId === '' ? 'Required' : ''}\r\n                            type={'text'}\r\n                        />;\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <Autocomplete\r\n                    id={'fundsAutocomplete'}\r\n                    popupIcon={<ExpandMoreIcon />}\r\n                    size={'small'}\r\n                    autoHighlight={true}\r\n                    autoSelect={true}\r\n                    autoComplete={false}\r\n                    disableClearable\r\n                    classes={classes}\r\n                    sx={{ marginRight: '1em', width: '400px' }}\r\n                    isOptionEqualToValue={(option, value) => option === value}\r\n                    onChange={(e, value: any) => onValueChange(value, 'currency')}\r\n                    value={currency ?? ''}\r\n                    options={CurrencyList?.map(x => x.code)?.slice()}\r\n                    renderInput={(params: AutocompleteRenderInputParams) => {\r\n                        params.InputProps.className = autocompleteInputClasses.textInput;\r\n                        return <TextField {...params}\r\n                            className={autocompleteInputClasses.autocomplete}\r\n                            variant=\"outlined\"\r\n                            autoComplete=\"off\"\r\n                            label={'Currency*'}\r\n                            helperText={!disabled && currency === '' ? 'Required' : ''}\r\n                            type={'text'}\r\n                        />;\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"baseCapital\"\r\n                        value={committedAmount}\r\n                        label={'Amount*'}\r\n                        type={'number'}\r\n                        onChange={(e) => onValueChange(e.target.value, 'committedAmount')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Typography variant='body2'>Transfer</Typography>\r\n                <Tooltip title={'Is transfer from one fund to another'}>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch color=\"primary\" checked={transfered} onChange={handleSwitchChange} />}\r\n                        label={''}\r\n                        className={classes.switchField}\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </Tooltip>\r\n            </Grid>\r\n\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default AddNewFundCommitmentComponent;","import { Autocomplete, AutocompleteRenderInputParams, Fab, FormControlLabel, Grid, IconButton, InputAdornment, Switch, TextField, Tooltip, Typography,Box } from '@mui/material';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Theme } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport { GridApi } from 'ag-grid-community';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { CountryList, CurrencyList } from '../../../../models/shared/sharedModels';\r\nimport { LP } from '../../../../models/lps/lpModels';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../redux/slices/rootSlice';\r\nimport { useAppDispatch } from '../../../../redux/store';\r\nimport { fetchLPs } from '../../../../redux/thunks/lpThunk';\r\nimport { FundSummary } from '../../../../models/funds/fundModels';\r\nimport { setSelectedLP } from '../../../../redux/slices/lps/lpsSlice';\r\nimport { setSelectedFund } from '../../../../redux/slices/funds/fundsSlice';\r\nimport { fetchFunds } from '../../../../redux/thunks/fundThunk';\r\nimport { fetchPCOs } from '../../../../redux/thunks/pcoThunk';\r\nimport { NewInvestment, PCOSummary } from '../../../../models/pcos/pcoModels';\r\nimport { InvestmentType } from '../../../../models/transactions/transactionsModels';\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nconst autocompleteInputStyles = makeStyles((theme: Theme) => ({\r\n    autocomplete: {\r\n        'borderRadius': 5,\r\n        'backgroundColor': theme.palette.background.paper,\r\n        '& input::placeholder': {\r\n            color: theme.palette.text.primary\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: theme.palette.text.primary,\r\n            opacity: 0.8\r\n        }\r\n    },\r\n    textInput: {\r\n        'color': theme.palette.text.primary,\r\n        'fontWeight': 800,\r\n        'fontFamily': 'Raleway',\r\n        height: '2.2em',\r\n        /* 'height': '2.5em', */\r\n        'fontSize': 10,\r\n        '& .MuiIconButton-label': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chart: {\r\n            flex: 1,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n        },\r\n        fabIcon: {\r\n            marginLeft: 10,\r\n            alignSelf: 'center',\r\n        },\r\n        searchBox: {\r\n            width: '400px',\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        switchField: {\r\n            '& .MuiFormControlLabel-label': {\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        textFildsSmall: {\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        inputRoot: {\r\n            height: '1em',\r\n            'borderRadius': 5,\r\n            'backgroundColor': 'transparent',\r\n            /*         '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'black'\r\n                    },*/\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.primary.main\r\n            },\r\n            /*  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'black'\r\n              }, */\r\n            '& .MuiChip-root': {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: 'transparent',\r\n                borderRadius: 5\r\n            },\r\n            '& .MuiChip-deleteIconSmall': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        option: {\r\n            'background': theme.palette.background.paper,\r\n            '&:hover': {\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 400,\r\n                fontFamily: 'Raleway'\r\n            },\r\n            '&[aria-selected=\"true\"]': {\r\n                background: theme.palette.background.paper,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 700,\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        popupIndicator: {\r\n            '&.MuiIconButton-root': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        clearIndicator: {\r\n            color: theme.palette.text.primary\r\n        },\r\n    }),\r\n);\r\nconst LPTypes = [\r\n    \"Corporate\",\r\n    \"General Partner\",\r\n    \"Individual\",\r\n    \"Institutional\",\r\n];\r\n\r\ninterface AddNewFundToPCOinvestmentComponentProps {\r\n    disabled: boolean,\r\n    setDisabled: any,\r\n    newInvestment: NewInvestment | null,\r\n    setNewInvestment: (newState: any) => void\r\n}\r\n\r\nconst AddNewFundToPCOinvestmentComponent = ({ setDisabled, disabled, newInvestment, setNewInvestment }: AddNewFundToPCOinvestmentComponentProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const autocompleteInputClasses = autocompleteInputStyles();\r\n    const theme = useTheme();\r\n    const [amount, setAmount] = useState<number>(0);\r\n    const [currency, setCurrency] = useState<string>('');\r\n    const { funds, selectedFund } = useSelector((state: RootState) => state.funds);\r\n    const fundId = selectedFund?.id ?? '';\r\n    const fundName = selectedFund?.shortName ?? '';\r\n    const [transfered, setTransfered] = useState<boolean>(false);\r\n    const [pcoId, setPcoId] = useState<string>('');\r\n    const { pcos,selectedPCO } = useSelector((state: RootState) => state.pcos);\r\n    const [investmentType, setInvestmentType] = useState<string>('');\r\n\r\n    const onValueChange = (value: string, field: string) => {\r\n        switch (field) {\r\n            case 'pcoId':\r\n                setPcoId(value);\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    pcoId: value\r\n                });\r\n                setDisabled(value === '' || currency === '' || amount === 0);\r\n                break;\r\n            case 'currency':\r\n                setCurrency(value);\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    currency: value\r\n                });\r\n                setDisabled(value === '' || pcoId === '' || amount === 0);\r\n                break;\r\n            case 'investmentType':\r\n                setInvestmentType(value);\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    investmentType: value\r\n                });\r\n                setDisabled(value === '' || pcoId === '' || amount === 0);\r\n                break;\r\n            case 'amount':\r\n                setAmount(+value);\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    amount: +value\r\n                });\r\n                setDisabled(currency === '' || pcoId === '' || +value === 0);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const optionLabel = (option: string | PCOSummary) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.pcoName ? option.pcoName : option;\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        dispatch(fetchPCOs());\r\n    }, [dispatch])\r\n\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{ paddingTop: '10px' }}>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <TextField\r\n                    className={classes.searchBox}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={'Fund'}\r\n                    aria-label=\"baseCapital\"\r\n                    value={fundName}\r\n                    inputProps={{\r\n                        style: { height: '1em' },\r\n                    }}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <Autocomplete\r\n                    id={'fundsAutocomplete'}\r\n                    popupIcon={<ExpandMoreIcon />}\r\n                    size={'small'}\r\n                    autoHighlight={true}\r\n                    autoSelect={true}\r\n                    autoComplete={false}\r\n                    classes={classes}\r\n                    sx={{ marginRight: '1em', width: '400px' }}\r\n                    isOptionEqualToValue={(option, value) => option === value}\r\n                    onChange={(e, value: PCOSummary | null) => onValueChange(value ? value.id : '', 'pcoId')}\r\n                    value={selectedPCO ?? undefined}\r\n                    options={pcos && pcos.length > 0 ? pcos.slice().sort(function (a, b) {\r\n                        if (a.id.toLowerCase() < b.id.toLowerCase()) return -1;\r\n                        if (a.id.toLowerCase() > b.id.toLowerCase()) return 1;\r\n                        return 0;\r\n                    }) : []}\r\n                    getOptionLabel={(option) => optionLabel(option).toString()}\r\n                    renderInput={(params: AutocompleteRenderInputParams) => {\r\n                        params.InputProps.className = autocompleteInputClasses.textInput;\r\n                        return <TextField {...params}\r\n                            className={autocompleteInputClasses.autocomplete}\r\n                            variant=\"outlined\"\r\n                            autoComplete=\"off\"\r\n                            label={'PCO'}\r\n                            helperText={!disabled && pcoId === '' ? 'Required' : ''}\r\n                            type={'text'}\r\n                        />;\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <Autocomplete\r\n                    id={'fundsAutocomplete'}\r\n                    popupIcon={<ExpandMoreIcon />}\r\n                    size={'small'}\r\n                    autoHighlight={true}\r\n                    autoSelect={true}\r\n                    autoComplete={false}\r\n                    disableClearable\r\n                    classes={classes}\r\n                    sx={{ marginRight: '1em', width: '400px' }}\r\n                    isOptionEqualToValue={(option, value) => option === value}\r\n                    onChange={(e, value: any) => onValueChange(value, 'currency')}\r\n                    value={currency ?? ''}\r\n                    options={CurrencyList?.map(x => x.code)?.slice()}\r\n                    renderInput={(params: AutocompleteRenderInputParams) => {\r\n                        params.InputProps.className = autocompleteInputClasses.textInput;\r\n                        return <TextField {...params}\r\n                            className={autocompleteInputClasses.autocomplete}\r\n                            variant=\"outlined\"\r\n                            autoComplete=\"off\"\r\n                            label={'Currency'}\r\n                            helperText={!disabled && currency === '' ? 'Required' : ''}\r\n                            type={'text'}\r\n                        />;\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <Autocomplete\r\n                    id={'fundsAutocomplete'}\r\n                    popupIcon={<ExpandMoreIcon />}\r\n                    size={'small'}\r\n                    autoHighlight={true}\r\n                    autoSelect={true}\r\n                    autoComplete={false}\r\n                    disableClearable\r\n                    classes={classes}\r\n                    sx={{ marginRight: '1em', width: '400px' }}\r\n                    isOptionEqualToValue={(option, value) => option === value}\r\n                    onChange={(e, value: any) => onValueChange(value, 'investmentType')}\r\n                    value={investmentType ?? ''}\r\n                    options={InvestmentType?.slice()}\r\n                    renderInput={(params: AutocompleteRenderInputParams) => {\r\n                        params.InputProps.className = autocompleteInputClasses.textInput;\r\n                        return <TextField {...params}\r\n                            className={autocompleteInputClasses.autocomplete}\r\n                            variant=\"outlined\"\r\n                            autoComplete=\"off\"\r\n                            label={'Investment Type'}\r\n                            helperText={!disabled && investmentType === '' ? 'Required' : ''}\r\n                            type={'text'}\r\n                        />;\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <TextField\r\n                    className={classes.searchBox}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    aria-label=\"baseCapital\"\r\n                    value={amount}\r\n                    type={'number'}\r\n                    label={'Amount'}\r\n                    onChange={(e) => onValueChange(e.target.value, 'amount')}\r\n                    inputProps={{\r\n                        style: { height: '1em' },\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default AddNewFundToPCOinvestmentComponent;","import { Autocomplete, AutocompleteRenderInputParams, Fab, FormControlLabel, Grid, IconButton, InputAdornment, Switch, TextField, Tooltip, Typography, Box } from '@mui/material';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Theme } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport { GridApi } from 'ag-grid-community';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { CountryList, CurrencyList, NewCommitment } from '../../../../models/shared/sharedModels';\r\nimport { LP } from '../../../../models/lps/lpModels';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../redux/slices/rootSlice';\r\nimport { useAppDispatch } from '../../../../redux/store';\r\nimport { fetchLPs } from '../../../../redux/thunks/lpThunk';\r\nimport { FundSummary } from '../../../../models/funds/fundModels';\r\nimport { setLPs, setSelectedLP } from '../../../../redux/slices/lps/lpsSlice';\r\nimport { setSelectedFund } from '../../../../redux/slices/funds/fundsSlice';\r\nimport { InvestmentType, NewTransaction, SecurityType, Transaction, TransactionType } from '../../../../models/transactions/transactionsModels';\r\nimport { setSelectedPCO } from '../../../../redux/slices/pcos/pcosSlice';\r\nimport { PCOSummary } from '../../../../models/pcos/pcoModels';\r\nimport { fetchFunds } from '../../../../redux/thunks/fundThunk';\r\nimport { fetchPCOs } from '../../../../redux/thunks/pcoThunk';\r\nimport { LPDistributionTypes, NewDistribution } from '../../../../models/distributions/distributionsModels';\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nconst autocompleteInputStyles = makeStyles((theme: Theme) => ({\r\n    autocomplete: {\r\n        'borderRadius': 5,\r\n        'backgroundColor': theme.palette.background.paper,\r\n        '& input::placeholder': {\r\n            color: theme.palette.text.primary\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: theme.palette.text.primary,\r\n            opacity: 0.8\r\n        }\r\n    },\r\n    textInput: {\r\n        'color': theme.palette.text.primary,\r\n        'fontWeight': 800,\r\n        'fontFamily': 'Raleway',\r\n        height: '2.2em',\r\n        /* 'height': '2.5em', */\r\n        'fontSize': 10,\r\n        '& .MuiIconButton-label': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chart: {\r\n            flex: 1,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n        },\r\n        fabIcon: {\r\n            marginLeft: 10,\r\n            alignSelf: 'center',\r\n        },\r\n        searchBox: {\r\n            width: '400px',\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        switchField: {\r\n            '& .MuiFormControlLabel-label': {\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        textFildsSmall: {\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        inputRoot: {\r\n            height: '1em',\r\n            'borderRadius': 5,\r\n            'backgroundColor': 'transparent',\r\n            /*         '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'black'\r\n                    },*/\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.primary.main\r\n            },\r\n            /*  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'black'\r\n              }, */\r\n            '& .MuiChip-root': {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: 'transparent',\r\n                borderRadius: 5\r\n            },\r\n            '& .MuiChip-deleteIconSmall': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        option: {\r\n            'background': theme.palette.background.paper,\r\n            '&:hover': {\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 400,\r\n                fontFamily: 'Raleway'\r\n            },\r\n            '&[aria-selected=\"true\"]': {\r\n                background: theme.palette.background.paper,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 700,\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        popupIndicator: {\r\n            '&.MuiIconButton-root': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        clearIndicator: {\r\n            color: theme.palette.text.primary\r\n        },\r\n    }),\r\n);\r\nconst LPTypes = [\r\n    \"Corporate\",\r\n    \"General Partner\",\r\n    \"Individual\",\r\n    \"Institutional\",\r\n];\r\n\r\ninterface AddNewFundExitComponentProps {\r\n    disabled: boolean,\r\n    setDisabled: any,\r\n    newDistribution: NewDistribution | null,\r\n    setNewDistribution: (newState: any) => void\r\n}\r\n\r\nconst AddNewFundExitComponent = ({ setDisabled, disabled, newDistribution, setNewDistribution }: AddNewFundExitComponentProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const autocompleteInputClasses = autocompleteInputStyles();\r\n    const theme = useTheme();\r\n    const [amountFundCurrency, setAmountFundCurrency] = useState<number>(0);\r\n    const [currency, setCurrency] = useState<string>('');\r\n    const [pcoId, setPCOId] = useState<string>('');\r\n    const { pcos, selectedPCO } = useSelector((state: RootState) => state.pcos);\r\n    const { funds, selectedFund } = useSelector((state: RootState) => state.funds);\r\n    const { lps, selectedLP } = useSelector((state: RootState) => state.lps);\r\n    const [transType, setTransType] = useState<string>('');\r\n    const [investmentType, setInvestmentType] = useState<string>('');\r\n    const [securityType, setSecurityType] = useState<string>('');\r\n    const fundId = selectedFund?.id ?? '';\r\n    const fundName = selectedFund?.shortName ?? '';\r\n\r\n    const onValueChange = (value: string, field: string) => {\r\n        switch (field) {\r\n            case 'pcoId':\r\n                setPCOId(value);\r\n                dispatch(setSelectedPCO(pcos?.filter(x => x.id === value)[0] ?? null))\r\n                setNewDistribution({\r\n                    ...newDistribution,\r\n                    pcoId: value\r\n                });\r\n                setDisabled(value === '' || transType === '' || amountFundCurrency === 0);\r\n                break;\r\n            case 'transType':\r\n                setTransType(value);\r\n                setNewDistribution({\r\n                    ...newDistribution,\r\n                    transType: value\r\n                });\r\n                setDisabled(value === '' || pcoId === '' || amountFundCurrency === 0);\r\n                break;\r\n            case 'amountFundCurrency':\r\n                setAmountFundCurrency(+value);\r\n                setNewDistribution({\r\n                    ...newDistribution,\r\n                    amountFundCurrency: +value\r\n                });\r\n                setDisabled(+value === 0 || transType === '' || pcoId === '');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const optionLabel = (option: string | PCOSummary) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.pcoName ? option.pcoName : option;\r\n        }\r\n    };\r\n\r\n    const optionLabelFund = (option: string | FundSummary) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.fundName ? option.fundName : option;\r\n        }\r\n    };\r\n\r\n    const optionLabelLP = (option: string | LP) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.name ? option.name : option;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchFunds());\r\n        dispatch(fetchPCOs());\r\n        dispatch(fetchLPs());\r\n    }, [dispatch])\r\n\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{ paddingTop: '10px' }}>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label={'Fund'}\r\n                        aria-label=\"baseCapital\"\r\n                        value={fundName}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputProps={{\r\n                            readOnly: true,\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <Autocomplete\r\n                    id={'fundsAutocomplete'}\r\n                    popupIcon={<ExpandMoreIcon />}\r\n                    size={'small'}\r\n                    autoHighlight={true}\r\n                    autoSelect={true}\r\n                    autoComplete={false}\r\n                    classes={classes}\r\n                    sx={{ marginRight: '1em', width: '400px' }}\r\n                    isOptionEqualToValue={(option, value) => option === value}\r\n                    onChange={(e, value: PCOSummary | null) => onValueChange(value ? value.id : '', 'pcoId')}\r\n                    value={selectedPCO ?? undefined}\r\n                    options={pcos && pcos.length > 0 ? pcos.slice().sort(function (a, b) {\r\n                        if (a.id.toLowerCase() < b.id.toLowerCase()) return -1;\r\n                        if (a.id.toLowerCase() > b.id.toLowerCase()) return 1;\r\n                        return 0;\r\n                    }) : []}\r\n                    getOptionLabel={(option) => optionLabel(option).toString()}\r\n                    renderInput={(params: AutocompleteRenderInputParams) => {\r\n                        params.InputProps.className = autocompleteInputClasses.textInput;\r\n                        return <TextField {...params}\r\n                            className={autocompleteInputClasses.autocomplete}\r\n                            variant=\"outlined\"\r\n                            autoComplete=\"off\"\r\n                            label={'PCO'}\r\n                            helperText={!disabled && pcoId === '' ? 'Required' : ''}\r\n                            type={'text'}\r\n                        />;\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <Autocomplete\r\n                    id={'fundsAutocomplete'}\r\n                    popupIcon={<ExpandMoreIcon />}\r\n                    size={'small'}\r\n                    autoHighlight={true}\r\n                    autoSelect={true}\r\n                    autoComplete={false}\r\n                    disableClearable\r\n                    classes={classes}\r\n                    sx={{ marginRight: '1em', width: '400px' }}\r\n                    isOptionEqualToValue={(option, value) => option === value}\r\n                    onChange={(e, value: any) => onValueChange(value, 'transType')}\r\n                    value={transType ?? ''}\r\n                    options={LPDistributionTypes?.slice()}\r\n                    renderInput={(params: AutocompleteRenderInputParams) => {\r\n                        params.InputProps.className = autocompleteInputClasses.textInput;\r\n                        return <TextField {...params}\r\n                            className={autocompleteInputClasses.autocomplete}\r\n                            variant=\"outlined\"\r\n                            autoComplete=\"off\"\r\n                            label={'Transaction Type*'}\r\n                            helperText={!disabled && transType === '' ? 'Required' : ''}\r\n                            type={'text'}\r\n                        />;\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"baseCapital\"\r\n                        value={amountFundCurrency}\r\n                        type={'number'}\r\n                        label={'Amount'}\r\n                        onChange={(e) => onValueChange(e.target.value, 'amountFundCurrency')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default AddNewFundExitComponent;","import React, { ReactElement, Ref, useState } from 'react';\r\nimport { TransitionProps } from \"@mui/material/transitions\";\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Divider, Grid, IconButton, Slide, Typography, useTheme } from \"@mui/material\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useAppDispatch } from '../../../redux/store';\r\nimport { RootState } from '../../../redux/slices/rootSlice';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { FundSummary, NewFund } from '../../../models/funds/fundModels';\r\nimport { NewInvestment, NewPCO, PCOSummary } from '../../../models/pcos/pcoModels';\r\nimport { LP, NewLP } from '../../../models/lps/lpModels';\r\nimport { NewCommitment } from '../../../models/shared/sharedModels';\r\nimport { NewTransaction } from '../../../models/transactions/transactionsModels';\r\nimport { NewCashCall } from '../../../models/cashCalls/cashCallsModels';\r\nimport { NewDistribution } from '../../../models/distributions/distributionsModels';\r\nimport AddNewPCOInvestmentComponent from './pcosAddDialogContents/AddNewPCOInvestment';\r\nimport AddNewPCOInvestmentFromLPComponent from './pcosAddDialogContents/AddNewInvestmentFromLP';\r\nimport AddNewLPCommitmentComponent from './lpsAddDialoContents/AddNewLPCommitment';\r\nimport AddNewLPToPCOinvestmentComponent from './lpsAddDialoContents/AddNewLPToPCOInvestment';\r\nimport AddNewLPExitComponent from './lpsAddDialoContents/AddNewLPExit';\r\nimport AddNewFundCommitmentComponent from './fundsAddDialogsContents/AddNewFundCommitment';\r\nimport AddNewFundToPCOinvestmentComponent from './fundsAddDialogsContents/AddNewFundToPCOInvetsment';\r\nimport AddNewFundExitComponent from './fundsAddDialogsContents/AddNewFundExit';\r\n\r\nconst transitionMethod = (props: TransitionProps & { children: ReactElement<any, any> }, ref: Ref<unknown>) => {\r\n    // eslint-disable-next-line react/jsx-props-no-spreading\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n};\r\n\r\nconst Transition = React.forwardRef(transitionMethod);\r\n\r\ninterface AddDialogComponentProps {\r\n    pageName: string,\r\n    pageTitle: string,\r\n    open: boolean,\r\n    setDialogOpen: any\r\n}\r\n\r\nexport const AddChildDialogComponent = ({ open, pageName, pageTitle, setDialogOpen }: AddDialogComponentProps) => {\r\n    const dispatch = useAppDispatch();\r\n    const [disabled, setDisabled] = useState<boolean>(true);\r\n    const theme = useTheme()\r\n    const [newFund, setNewFund] = useState<NewFund | null>(null);\r\n    const [newLP, setNewLP] = useState<NewLP | null>(null);\r\n    const [newPCO, setNewPCO] = useState<NewPCO | null>(null);\r\n    const [newCommitment, setNewCommitment] = useState<NewCommitment | null>(null);\r\n    const [newTransaction, setNewTransaction] = useState<NewTransaction | null>(null);\r\n    const [newInvestment, setNewInvestment] = useState<NewInvestment | null>(null);\r\n    const [newDistribution, setNewDistribution] = useState<NewDistribution | null>(null);\r\n\r\n    /**\r\n     * Handles the closing of the dialog\r\n     */\r\n    const handleClose = () => {\r\n        setDialogOpen(false);\r\n    };\r\n\r\n    const handleAddBtnClick = () => {\r\n        let valid = false;\r\n        if (pageName === 'fundsOverview') {\r\n            valid = newFund !== null && newFund.fundName !== '' && newFund.shortName !== '' && newFund.country !== '' && newFund.type !== '' && newFund.currency !== '';\r\n        } else if (pageName === 'lpsOverview') {\r\n            valid = newLP !== null && newLP.name !== '' && newLP.shortName !== '' && newLP.city !== '' && newLP.country !== '' && newLP.type !== '';\r\n        } else if (pageName === 'pcosOverview') {\r\n            valid = newPCO !== null && newPCO.pcoName !== '' && newPCO.shortName !== '' && newPCO.country !== '' && newPCO.sector !== '' && newPCO.currency !== '';\r\n        } else if (pageName === 'commitments') {\r\n            valid = newCommitment !== null && newCommitment.lpId !== '' && newCommitment.fundId !== '' && newCommitment.fundCurrency !== '' && newCommitment.committedAmount !== 0\r\n        } else if (pageName === 'transactions') {\r\n            valid = newTransaction !== null && newTransaction.pcoId !== '' && newTransaction.fundId !== '' && newTransaction.transType !== '' && newTransaction.securityType !== '' && newTransaction.amountFundCurrency !== 0 && (newTransaction.transType === 'Investment' && newTransaction.investmentType !== '')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Dialog open={open} TransitionComponent={Transition}\r\n            maxWidth={'xs'}\r\n            fullWidth\r\n            aria-label={'dialog extra data client'}>\r\n            <DialogTitle sx={{\r\n                cursor: 'move',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n                backgroundColor: theme.palette.mode === 'light' ? '#F5F5F5' : '#06050A'\r\n            }} id=\"form-dialog-client-data\">\r\n                <Grid container sx={{ display: 'flex', flex: 1, justifyContent: 'flex-start', height: '100%', flexDirection: 'column' }}>\r\n                    <Grid item xs={12} sx={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        alignItems: 'center'\r\n                    }}>\r\n                        <Typography style={{\r\n                            fontSize: 18,\r\n                            fontWeight: 600\r\n                        }}>{pageTitle}</Typography>\r\n                        <IconButton onClick={handleClose}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Divider sx={{ width: '100%' }} />\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </DialogTitle>\r\n            <DialogContent sx={{ display: 'flex', flex: 1, justifyContent: 'flex-start', height: '100%', backgroundColor: theme.palette.mode === 'light' ? '#F5F5F5' : '#06050A' }}>\r\n                {pageName === 'lpCommitments' || pageName === 'lpFunds' ? <AddNewLPCommitmentComponent disabled={disabled} setDisabled={setDisabled} newCommitment={newCommitment} setNewCommitment={setNewCommitment} />\r\n                    : pageName === 'lpPCOs' ? <AddNewLPToPCOinvestmentComponent disabled={disabled} setDisabled={setDisabled} newInvestment={newInvestment} setNewInvestment={setNewInvestment} />\r\n                        : pageName === 'lpExits' ? <AddNewLPExitComponent disabled={disabled} setDisabled={setDisabled} newDistribution={newDistribution} setNewDistribution={setNewDistribution} />\r\n                            : pageName === 'fundCommitments' || pageName === 'fundLPs' ? <AddNewFundCommitmentComponent disabled={disabled} setDisabled={setDisabled} newCommitment={newCommitment} setNewCommitment={setNewCommitment} />\r\n                                : pageName === 'fundPCOs' ? <AddNewFundToPCOinvestmentComponent disabled={disabled} setDisabled={setDisabled} newInvestment={newInvestment} setNewInvestment={setNewInvestment} />\r\n                                    : pageName === 'fundExits' ? <AddNewFundExitComponent disabled={disabled} setDisabled={setDisabled} newDistribution={newDistribution} setNewDistribution={setNewDistribution} />\r\n                                        : pageName === 'pcoLPs' ? <AddNewPCOInvestmentFromLPComponent disabled={disabled} setDisabled={setDisabled} newInvestment={newInvestment} setNewInvestment={setNewInvestment} />\r\n                                            : <AddNewPCOInvestmentComponent disabled={disabled} setDisabled={setDisabled} newInvestment={newInvestment} setNewInvestment={setNewInvestment} />}\r\n            </DialogContent>\r\n            <DialogActions sx={{ backgroundColor: theme.palette.mode === 'light' ? '#F5F5F5' : '#06050A' }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    sx={{ textTransform: 'none' }}\r\n                    startIcon={<AddIcon />}\r\n                    disabled={disabled}\r\n                    onClick={handleAddBtnClick}\r\n                >\r\n                    Add\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n","import { Autocomplete, AutocompleteRenderInputParams, Box, Fab, FormControlLabel, Grid, IconButton, InputAdornment, Switch, TextField, Tooltip, Typography } from '@mui/material';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Theme } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport { GridApi } from 'ag-grid-community';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { CountryList, CurrencyList, NewCommitment } from '../../../../../../models/shared/sharedModels';\r\nimport { LP } from '../../../../../../models/lps/lpModels';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../../../redux/slices/rootSlice';\r\nimport { useAppDispatch } from '../../../../../../redux/store';\r\nimport { fetchLPs } from '../../../../../../redux/thunks/lpThunk';\r\nimport { FundSummary } from '../../../../../../models/funds/fundModels';\r\nimport { setLPs, setSelectedLP } from '../../../../../../redux/slices/lps/lpsSlice';\r\nimport { setSelectedFund } from '../../../../../../redux/slices/funds/fundsSlice';\r\nimport { InvestmentType, NewTransaction, SecurityType, Transaction, TransactionType } from '../../../../../../models/transactions/transactionsModels';\r\nimport { setSelectedPCO } from '../../../../../../redux/slices/pcos/pcosSlice';\r\nimport { EditInvestment, NewInvestment, PCOSummary } from '../../../../../../models/pcos/pcoModels';\r\nimport { fetchFunds } from '../../../../../../redux/thunks/fundThunk';\r\nimport { fetchPCOs } from '../../../../../../redux/thunks/pcoThunk';\r\nimport { LPCashCallType } from '../../../../../../models/cashCalls/cashCallsModels';\r\nimport { DatePicker } from '@mui/x-date-pickers';\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport moment from 'moment';\r\nimport { amountValueFormatter } from '../../../../../../helpers/app';\r\n\r\nconst autocompleteInputStyles = makeStyles((theme: Theme) => ({\r\n    autocomplete: {\r\n        'borderRadius': 5,\r\n        'backgroundColor': theme.palette.background.paper,\r\n        '& input::placeholder': {\r\n            color: theme.palette.text.primary\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: theme.palette.text.primary,\r\n            opacity: 0.8\r\n        }\r\n    },\r\n    textInput: {\r\n        'color': theme.palette.text.primary,\r\n        'fontWeight': 800,\r\n        'fontFamily': 'Raleway',\r\n        height: '2.2em',\r\n        /* 'height': '2.5em', */\r\n        'fontSize': 10,\r\n        '& .MuiIconButton-label': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chart: {\r\n            flex: 1,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n        },\r\n        fabIcon: {\r\n            marginLeft: 10,\r\n            alignSelf: 'center',\r\n        },\r\n        searchBox: {\r\n            width: '400px',\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        datePickers: {\r\n            width: '100%',\r\n            flex: 1,\r\n        },\r\n        textField: {\r\n            width: '400px',\r\n            backgroundColor: theme.palette.background.paper,\r\n            borderColor: theme.palette.text.primary,\r\n            color: theme.palette.text.primary,\r\n            borderRadius: 5,\r\n            '& .MuiSvgIcon-root':\r\n            {\r\n                color: theme.palette.text.primary\r\n            },\r\n\r\n            '& label': {\r\n                '&.Mui-focused': {\r\n                    color: theme.palette.text.primary\r\n                }\r\n            },\r\n        },\r\n        switchField: {\r\n            '& .MuiFormControlLabel-label': {\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        textFildsSmall: {\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        inputRoot: {\r\n            height: '1em',\r\n            'borderRadius': 5,\r\n            'backgroundColor': 'transparent',\r\n            /*         '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'black'\r\n                    },*/\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.primary.main\r\n            },\r\n            /*  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'black'\r\n              }, */\r\n            '& .MuiChip-root': {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: 'transparent',\r\n                borderRadius: 5\r\n            },\r\n            '& .MuiChip-deleteIconSmall': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        option: {\r\n            'background': theme.palette.background.paper,\r\n            '&:hover': {\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 400,\r\n                fontFamily: 'Raleway'\r\n            },\r\n            '&[aria-selected=\"true\"]': {\r\n                background: theme.palette.background.paper,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 700,\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        popupIndicator: {\r\n            '&.MuiIconButton-root': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        clearIndicator: {\r\n            color: theme.palette.text.primary\r\n        },\r\n    }),\r\n);\r\n\r\nconst LPTypes = [\r\n    \"Corporate\",\r\n    \"General Partner\",\r\n    \"Individual\",\r\n    \"Institutional\",\r\n];\r\n\r\ninterface PCOInvestmentEditContentComponentProps {\r\n    disabled: boolean,\r\n    setDisabled: any,\r\n    newInvestment: EditInvestment | null,\r\n    setNewInvestment: (newState: any) => void,\r\n}\r\n\r\nconst PCOInvestmentEditContentComponent = ({ setDisabled, disabled, newInvestment, setNewInvestment }: PCOInvestmentEditContentComponentProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const theme = useTheme();\r\n    const autocompleteInputClasses = autocompleteInputStyles();\r\n    const [amountLocalCurrency, setAmountLocalCurrency] = useState<any>(newInvestment?.amountLocalCurrency ?? 0);\r\n    const [currency, setCurrency] = useState<string>('');\r\n    const { pcos, selectedPCO } = useSelector((state: RootState) => state.pcos);\r\n    const pcoId = selectedPCO?.id ?? '';\r\n    const pcoName = selectedPCO?.shortName ?? '';\r\n    const { funds, selectedFund } = useSelector((state: RootState) => state.funds);\r\n    const { lps, selectedLP } = useSelector((state: RootState) => state.lps);\r\n    const [transType, setTransType] = useState<string>('');\r\n    const [investmentType, setInvestmentType] = useState<string>('');\r\n    const [securityType, setSecurityType] = useState<string>('');\r\n    const [fundId, setFundId] = useState<string>(newInvestment?.fundId ?? '');\r\n    const [date, setDateInvestment] = useState<string>(newInvestment?.date ?? '');\r\n    const [selectedFundLocal, setSelectedFundLocal] = useState<any>(funds && newInvestment ? funds.filter(x => x.id === newInvestment?.fundId)[0] ?? null : null)\r\n    const [isFirstOpen, setIsFirstOpen] = useState<boolean>(true);\r\n\r\n    const onValueChange = (value: string, field: string) => {\r\n        setIsFirstOpen(false);\r\n        switch (field) {\r\n            case 'fundId':\r\n                setFundId(value);\r\n                setSelectedFundLocal(funds?.filter(x => x.id === value)[0] ?? null)\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    fundId: value\r\n                });\r\n                setDisabled(value === '' || investmentType === '' || amountLocalCurrency === 0);\r\n                break;\r\n            case 'investmentType':\r\n                setInvestmentType(value);\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    investmentType: value\r\n                });\r\n                setDisabled(value === '' || fundId === '' || amountLocalCurrency === 0);\r\n                break;\r\n            case 'amountLocalCurrency':\r\n                setAmountLocalCurrency(+value);\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    amountLocalCurrency: +value\r\n                });\r\n                setDisabled(+value === 0 || investmentType === '' || fundId === '');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const optionLabelFund = (option: string | FundSummary) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.fundName ? option.fundName : option;\r\n        }\r\n    };\r\n\r\n    const onDateChange = (value: any, field: string) => {\r\n        if (field === 'date') {\r\n            setDateInvestment(value);\r\n            if (selectedPCO) {\r\n                setNewInvestment({\r\n                    ...selectedPCO,\r\n                    date: value\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchFunds());\r\n    }, [dispatch])\r\n\r\n\r\n    useEffect(() => {\r\n        if (newInvestment !== null && newInvestment !== undefined && funds && isFirstOpen && InvestmentType) {\r\n            setAmountLocalCurrency(amountValueFormatter(newInvestment.amountLocalCurrency ?? 0, ''));\r\n            setDateInvestment(newInvestment.date ?? '');\r\n            setSelectedFund(funds && newInvestment ? funds.filter(x => x.id === newInvestment?.fundId)[0] ?? null : null);\r\n            setInvestmentType(InvestmentType.filter(x => x === newInvestment.invetsmentType)[0] ?? '');\r\n        }\r\n    }, [newInvestment, funds, isFirstOpen, InvestmentType]);\r\n\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{ paddingTop: '10px' }}>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <Autocomplete\r\n                        id={'fundsAutocomplete'}\r\n                        popupIcon={<ExpandMoreIcon />}\r\n                        size={'small'}\r\n                        autoHighlight={true}\r\n                        autoSelect={true}\r\n                        autoComplete={false}\r\n                        classes={classes}\r\n                        sx={{ marginRight: '1em', width: '400px' }}\r\n                        isOptionEqualToValue={(option, value) => option === value}\r\n                        onChange={(e, value: FundSummary | null) => onValueChange(value ? value.id : '', 'fundId')}\r\n                        value={selectedFundLocal ?? undefined}\r\n                        options={funds && funds.length > 0 ? funds.slice().sort(function (a, b) {\r\n                            if (a.id.toLowerCase() < b.id.toLowerCase()) return -1;\r\n                            if (a.id.toLowerCase() > b.id.toLowerCase()) return 1;\r\n                            return 0;\r\n                        }) : []}\r\n                        getOptionLabel={(option) => optionLabelFund(option).toString()}\r\n                        renderInput={(params: AutocompleteRenderInputParams) => {\r\n                            params.InputProps.className = autocompleteInputClasses.textInput;\r\n                            return <TextField {...params}\r\n                                className={autocompleteInputClasses.autocomplete}\r\n                                variant=\"outlined\"\r\n                                autoComplete=\"off\"\r\n                                label={'Fund'}\r\n                                type={'text'}\r\n                            />;\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label={'PCO'}\r\n                        aria-label=\"baseCapital\"\r\n                        value={pcoName}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputProps={{\r\n                            readOnly: true,\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item >\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <DatePicker\r\n                        className={classes.datePickers}\r\n                        inputFormat={'dd/MM/yyyy'}\r\n                        disableFuture\r\n                        value={date ? moment(new Date(date)).format('DD MMM YYYY') : null}\r\n                        onChange={(e) => onDateChange(e ?? '', 'date')}\r\n                        disableHighlightToday\r\n                        renderInput={(props: any) =>\r\n                            <TextField {...props}\r\n                                label={'Date Invested'}\r\n                                variant={'outlined'}\r\n                                size={'small'}\r\n                                className={classes.textField}\r\n                                InputLabelProps={{\r\n                                    sx: {\r\n                                        fontSize: 'small'\r\n                                    }\r\n                                }}\r\n                            />}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <Autocomplete\r\n                        id={'fundsAutocomplete'}\r\n                        popupIcon={<ExpandMoreIcon />}\r\n                        size={'small'}\r\n                        autoHighlight={true}\r\n                        autoSelect={true}\r\n                        autoComplete={false}\r\n                        disableClearable\r\n                        classes={classes}\r\n                        sx={{ marginRight: '1em', width: '400px' }}\r\n                        isOptionEqualToValue={(option, value) => option === value}\r\n                        onChange={(e, value: any) => onValueChange(value, 'investmentType')}\r\n                        value={investmentType ?? ''}\r\n                        options={InvestmentType?.slice()}\r\n                        renderInput={(params: AutocompleteRenderInputParams) => {\r\n                            params.InputProps.className = autocompleteInputClasses.textInput;\r\n                            return <TextField {...params}\r\n                                className={autocompleteInputClasses.autocomplete}\r\n                                variant=\"outlined\"\r\n                                autoComplete=\"off\"\r\n                                label={'Investment Type'}\r\n                                type={'text'}\r\n                            />;\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"baseCapital\"\r\n                        value={amountLocalCurrency}\r\n                        label={'Amount'}\r\n                        onChange={(e) => onValueChange(e.target.value, 'amountLocalCurrency')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default PCOInvestmentEditContentComponent;","\r\nimport { Autocomplete, AutocompleteRenderInputParams, Fab, FormControlLabel, Grid, IconButton, InputAdornment, Switch, TextField, Tooltip, Typography, Box } from '@mui/material';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Theme } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport { GridApi } from 'ag-grid-community';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { LP } from '../../../../../../models/lps/lpModels';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../../../redux/slices/rootSlice';\r\nimport { useAppDispatch } from '../../../../../../redux/store';\r\nimport { fetchLPs } from '../../../../../../redux/thunks/lpThunk';\r\nimport { FundSummary } from '../../../../../../models/funds/fundModels';\r\nimport { setLPs, setSelectedLP } from '../../../../../../redux/slices/lps/lpsSlice';\r\nimport { setSelectedFund } from '../../../../../../redux/slices/funds/fundsSlice';\r\nimport { InvestmentType, NewTransaction, SecurityType, Transaction, TransactionType } from '../../../../../../models/transactions/transactionsModels';\r\nimport { setSelectedPCO } from '../../../../../../redux/slices/pcos/pcosSlice';\r\nimport { EditInvestment, NewInvestment, PCOSummary } from '../../../../../../models/pcos/pcoModels';\r\nimport { fetchFunds } from '../../../../../../redux/thunks/fundThunk';\r\nimport { fetchPCOs } from '../../../../../../redux/thunks/pcoThunk';\r\nimport { LPCashCallType } from '../../../../../../models/cashCalls/cashCallsModels';\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nconst autocompleteInputStyles = makeStyles((theme: Theme) => ({\r\n    autocomplete: {\r\n        'borderRadius': 5,\r\n        'backgroundColor': theme.palette.background.paper,\r\n        '& input::placeholder': {\r\n            color: theme.palette.text.primary\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: theme.palette.text.primary,\r\n            opacity: 0.8\r\n        }\r\n    },\r\n    textInput: {\r\n        'color': theme.palette.text.primary,\r\n        'fontWeight': 800,\r\n        'fontFamily': 'Raleway',\r\n        height: '2.2em',\r\n        /* 'height': '2.5em', */\r\n        'fontSize': 10,\r\n        '& .MuiIconButton-label': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chart: {\r\n            flex: 1,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n        },\r\n        fabIcon: {\r\n            marginLeft: 10,\r\n            alignSelf: 'center',\r\n        },\r\n        searchBox: {\r\n            width: '400px',\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        switchField: {\r\n            '& .MuiFormControlLabel-label': {\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        textFildsSmall: {\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        inputRoot: {\r\n            height: '1em',\r\n            'borderRadius': 5,\r\n            'backgroundColor': 'transparent',\r\n            /*         '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'black'\r\n                    },*/\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.primary.main\r\n            },\r\n            /*  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'black'\r\n              }, */\r\n            '& .MuiChip-root': {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: 'transparent',\r\n                borderRadius: 5\r\n            },\r\n            '& .MuiChip-deleteIconSmall': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        option: {\r\n            'background': theme.palette.background.paper,\r\n            '&:hover': {\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 400,\r\n                fontFamily: 'Raleway'\r\n            },\r\n            '&[aria-selected=\"true\"]': {\r\n                background: theme.palette.background.paper,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 700,\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        popupIndicator: {\r\n            '&.MuiIconButton-root': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        clearIndicator: {\r\n            color: theme.palette.text.primary\r\n        },\r\n    }),\r\n);\r\nconst LPTypes = [\r\n    \"Corporate\",\r\n    \"General Partner\",\r\n    \"Individual\",\r\n    \"Institutional\",\r\n];\r\n\r\ninterface AddNewPCOInvestmentFromLPComponentProps {\r\n    disabled: boolean,\r\n    setDisabled: any,\r\n    newInvestment: EditInvestment | null,\r\n    setNewInvestment: (newState: any) => void\r\n}\r\n\r\nconst PCOLPEditComponent = ({ setDisabled, disabled, newInvestment, setNewInvestment }: AddNewPCOInvestmentFromLPComponentProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const autocompleteInputClasses = autocompleteInputStyles();\r\n    const theme = useTheme();\r\n    const [participationPercentage, setParticipationPercentage] = useState<any>(0);\r\n    const [currency, setCurrency] = useState<string>('');\r\n    const { pcos, selectedPCO } = useSelector((state: RootState) => state.pcos);\r\n    const pcoId = selectedPCO?.id ?? '';\r\n    const pcoName = selectedPCO?.shortName ?? '';\r\n    const [fundId, setFundId] = useState<string>('');\r\n    const { funds, selectedFund } = useSelector((state: RootState) => state.funds);\r\n    const { lps, selectedLP } = useSelector((state: RootState) => state.lps);\r\n    const [transType, setTransType] = useState<string>('');\r\n    const [investmentType, setInvestmentType] = useState<string>('');\r\n    const [securityType, setSecurityType] = useState<string>('');\r\n    const [lpId, setLPId] = useState<string>('');\r\n    const [selectedLPLocal, setSelectedLPLocal] = useState<any>(lps && newInvestment ? lps.filter(x => x.id === newInvestment?.lpId)[0] ?? null : null)\r\n    const [isFirstOpen, setIsFirstOpen] = useState<boolean>(true);\r\n\r\n    const onValueChange = (value: string, field: string) => {\r\n        setIsFirstOpen(false);\r\n        switch (field) {\r\n            case 'lpId':\r\n                setLPId(value);\r\n                setSelectedLPLocal(lps?.filter(x => x.id === value)[0] ?? null)\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    lpId: value\r\n                });\r\n                setDisabled(value === '' || investmentType === '');\r\n                break;\r\n            case 'investmentType':\r\n                setInvestmentType(value);\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    investmentType: value\r\n                });\r\n                setDisabled(value === '' || lpId === '');\r\n                break;\r\n            case 'participationPercentage':\r\n                setParticipationPercentage(+value);\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    participationPercentage: +value\r\n                });\r\n                setDisabled(+value === 0 || investmentType === '' || lpId === '');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const optionLabelLP = (option: string | LP) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.name ? option.name : option;\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchLPs());\r\n    }, [dispatch])\r\n\r\n\r\n    useEffect(() => {\r\n        if (newInvestment !== null && newInvestment !== undefined && lps && isFirstOpen && InvestmentType) {\r\n            setSelectedLPLocal(lps && newInvestment ? lps.filter(x => x.id === newInvestment?.lpId)[0] ?? null : null);\r\n            setParticipationPercentage(newInvestment.participationPercentage ? (newInvestment.participationPercentage * 100).toFixed(2) : 0)\r\n            setInvestmentType(InvestmentType.filter(x => x === newInvestment.invetsmentType)[0] ?? '');\r\n        }\r\n    }, [newInvestment, lps, isFirstOpen, InvestmentType]);\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{ paddingTop: '10px' }}>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <Autocomplete\r\n                        id={'fundsAutocomplete'}\r\n                        popupIcon={<ExpandMoreIcon />}\r\n                        size={'small'}\r\n                        autoHighlight={true}\r\n                        autoSelect={true}\r\n                        autoComplete={false}\r\n                        classes={classes}\r\n                        sx={{ marginRight: '1em', width: '400px' }}\r\n                        isOptionEqualToValue={(option, value) => option === value}\r\n                        onChange={(e, value: LP | null) => onValueChange(value ? value.id : '', 'lpId')}\r\n                        value={selectedLPLocal ?? undefined}\r\n                        options={lps && lps.length > 0 ? lps.slice().sort(function (a, b) {\r\n                            if (a.id.toLowerCase() < b.id.toLowerCase()) return -1;\r\n                            if (a.id.toLowerCase() > b.id.toLowerCase()) return 1;\r\n                            return 0;\r\n                        }) : []}\r\n                        getOptionLabel={(option) => optionLabelLP(option).toString()}\r\n                        renderInput={(params: AutocompleteRenderInputParams) => {\r\n                            params.InputProps.className = autocompleteInputClasses.textInput;\r\n                            return <TextField {...params}\r\n                                className={autocompleteInputClasses.autocomplete}\r\n                                variant=\"outlined\"\r\n                                autoComplete=\"off\"\r\n                                label={'LP'}\r\n                                type={'text'}\r\n                            />;\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label={'PCO'}\r\n                        aria-label=\"baseCapital\"\r\n                        value={pcoName}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputProps={{\r\n                            readOnly: true,\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"baseCapital\"\r\n                        value={participationPercentage}\r\n                        label={'Participation Percentage'}\r\n                        onChange={(e) => onValueChange(e.target.value, 'participationPercentage')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default PCOLPEditComponent;","\r\nimport { Autocomplete, AutocompleteRenderInputParams, Fab, FormControlLabel, Grid, IconButton, InputAdornment, Switch, TextField, Tooltip, Typography, Box } from '@mui/material';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Theme } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport { GridApi } from 'ag-grid-community';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { LP } from '../../../../../../models/lps/lpModels';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../../../redux/slices/rootSlice';\r\nimport { useAppDispatch } from '../../../../../../redux/store';\r\nimport { fetchLPs } from '../../../../../../redux/thunks/lpThunk';\r\nimport { FundSummary } from '../../../../../../models/funds/fundModels';\r\nimport { setLPs, setSelectedLP } from '../../../../../../redux/slices/lps/lpsSlice';\r\nimport { setSelectedFund } from '../../../../../../redux/slices/funds/fundsSlice';\r\nimport { InvestmentType, NewTransaction, SecurityType, Transaction, TransactionType } from '../../../../../../models/transactions/transactionsModels';\r\nimport { setSelectedPCO } from '../../../../../../redux/slices/pcos/pcosSlice';\r\nimport { EditInvestment, NewInvestment, PCOSummary } from '../../../../../../models/pcos/pcoModels';\r\nimport { fetchFunds } from '../../../../../../redux/thunks/fundThunk';\r\nimport { fetchPCOs } from '../../../../../../redux/thunks/pcoThunk';\r\nimport { LPCashCallType } from '../../../../../../models/cashCalls/cashCallsModels';\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { amountValueFormatter } from '../../../../../../helpers/app';\r\n\r\nconst autocompleteInputStyles = makeStyles((theme: Theme) => ({\r\n    autocomplete: {\r\n        'borderRadius': 5,\r\n        'backgroundColor': theme.palette.background.paper,\r\n        '& input::placeholder': {\r\n            color: theme.palette.text.primary\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: theme.palette.text.primary,\r\n            opacity: 0.8\r\n        }\r\n    },\r\n    textInput: {\r\n        'color': theme.palette.text.primary,\r\n        'fontWeight': 800,\r\n        'fontFamily': 'Raleway',\r\n        height: '2.2em',\r\n        /* 'height': '2.5em', */\r\n        'fontSize': 10,\r\n        '& .MuiIconButton-label': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chart: {\r\n            flex: 1,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n        },\r\n        fabIcon: {\r\n            marginLeft: 10,\r\n            alignSelf: 'center',\r\n        },\r\n        searchBox: {\r\n            width: '400px',\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        switchField: {\r\n            '& .MuiFormControlLabel-label': {\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        textFildsSmall: {\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        inputRoot: {\r\n            height: '1em',\r\n            'borderRadius': 5,\r\n            'backgroundColor': 'transparent',\r\n            /*         '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'black'\r\n                    },*/\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.primary.main\r\n            },\r\n            /*  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'black'\r\n              }, */\r\n            '& .MuiChip-root': {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: 'transparent',\r\n                borderRadius: 5\r\n            },\r\n            '& .MuiChip-deleteIconSmall': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        option: {\r\n            'background': theme.palette.background.paper,\r\n            '&:hover': {\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 400,\r\n                fontFamily: 'Raleway'\r\n            },\r\n            '&[aria-selected=\"true\"]': {\r\n                background: theme.palette.background.paper,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 700,\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        popupIndicator: {\r\n            '&.MuiIconButton-root': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        clearIndicator: {\r\n            color: theme.palette.text.primary\r\n        },\r\n    }),\r\n);\r\nconst LPTypes = [\r\n    \"Corporate\",\r\n    \"General Partner\",\r\n    \"Individual\",\r\n    \"Institutional\",\r\n];\r\n\r\ninterface AddNewPCOInvestmentFromLPComponentProps {\r\n    disabled: boolean,\r\n    setDisabled: any,\r\n    newInvestment: EditInvestment | null,\r\n    setNewInvestment: (newState: any) => void\r\n}\r\n\r\nconst PCOFundInvestmentEditComponent = ({ setDisabled, disabled, newInvestment, setNewInvestment }: AddNewPCOInvestmentFromLPComponentProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const autocompleteInputClasses = autocompleteInputStyles();\r\n    const theme = useTheme();\r\n    const [amountInvested, setAmountInvested] = useState<any>(0);\r\n    const [currency, setCurrency] = useState<string>('');\r\n    const { pcos, selectedPCO } = useSelector((state: RootState) => state.pcos);\r\n    const pcoId = selectedPCO?.id ?? '';\r\n    const pcoName = selectedPCO?.shortName ?? '';\r\n    const [fundId, setFundId] = useState<string>('');\r\n    const { funds, selectedFund } = useSelector((state: RootState) => state.funds);\r\n    const { lps, selectedLP } = useSelector((state: RootState) => state.lps);\r\n    const [transType, setTransType] = useState<string>('');\r\n    const [investmentType, setInvestmentType] = useState<string>('');\r\n    const [securityType, setSecurityType] = useState<string>('');\r\n    const [lpId, setLPId] = useState<string>('');\r\n    const [selectedFundLocal, setSelectedFundLocal] = useState<any>(funds && newInvestment ? funds.filter(x => x.id === newInvestment?.fundId)[0] ?? null : null)\r\n    const [isFirstOpen, setIsFirstOpen] = useState<boolean>(true);\r\n\r\n    const onValueChange = (value: string, field: string) => {\r\n        setIsFirstOpen(false);\r\n        switch (field) {\r\n            case 'fundId':\r\n                setFundId(value);\r\n                setSelectedFundLocal(funds?.filter(x => x.id === value)[0] ?? null)\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    fundId: value\r\n                });\r\n                setDisabled(value === '');\r\n                break;\r\n            case 'investmentType':\r\n                setInvestmentType(value);\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    investmentType: value\r\n                });\r\n                setDisabled(value === '' || fundId === '');\r\n                break;\r\n            case 'amountInvested':\r\n                setAmountInvested(+value);\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    amountInvested: +value\r\n                });\r\n                setDisabled(+value === 0 || fundId === '');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const optionLabelFund = (option: string | FundSummary) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.shortName ? option.shortName : option;\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchFunds());\r\n    }, [dispatch])\r\n\r\n\r\n    useEffect(() => {\r\n        if (newInvestment !== null && newInvestment !== undefined && fetchFunds && isFirstOpen && InvestmentType) {\r\n            setSelectedFundLocal(funds && newInvestment ? funds.filter(x => x.id === newInvestment?.fundId)[0] ?? null : null);\r\n            setAmountInvested(newInvestment.amountInvested ? amountValueFormatter(newInvestment.amountInvested ?? 0, '') : 0)\r\n            setInvestmentType(InvestmentType.filter(x => x === newInvestment.invetsmentType)[0] ?? '');\r\n        }\r\n    }, [newInvestment, funds, isFirstOpen, InvestmentType]);\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{ paddingTop: '10px' }}>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <Autocomplete\r\n                        id={'fundsAutocomplete'}\r\n                        popupIcon={<ExpandMoreIcon />}\r\n                        size={'small'}\r\n                        autoHighlight={true}\r\n                        autoSelect={true}\r\n                        autoComplete={false}\r\n                        classes={classes}\r\n                        sx={{ marginRight: '1em', width: '400px' }}\r\n                        isOptionEqualToValue={(option, value) => option === value}\r\n                        onChange={(e, value: FundSummary | null) => onValueChange(value ? value.id : '', 'lpId')}\r\n                        value={selectedFundLocal ?? undefined}\r\n                        options={funds && funds.length > 0 ? lps.slice().sort(function (a, b) {\r\n                            if (a.id.toLowerCase() < b.id.toLowerCase()) return -1;\r\n                            if (a.id.toLowerCase() > b.id.toLowerCase()) return 1;\r\n                            return 0;\r\n                        }) : []}\r\n                        getOptionLabel={(option) => optionLabelFund(option).toString()}\r\n                        renderInput={(params: AutocompleteRenderInputParams) => {\r\n                            params.InputProps.className = autocompleteInputClasses.textInput;\r\n                            return <TextField {...params}\r\n                                className={autocompleteInputClasses.autocomplete}\r\n                                variant=\"outlined\"\r\n                                autoComplete=\"off\"\r\n                                label={'Fund'}\r\n                                type={'text'}\r\n                            />;\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label={'PCO'}\r\n                        aria-label=\"baseCapital\"\r\n                        value={pcoName}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputProps={{\r\n                            readOnly: true,\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"baseCapital\"\r\n                        value={amountInvested}\r\n                        label={'Amount Invested'}\r\n                        onChange={(e) => onValueChange(e.target.value, 'amountInvested')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default PCOFundInvestmentEditComponent;","import { Autocomplete, AutocompleteRenderInputParams, Fab, FormControlLabel, Grid, IconButton, InputAdornment, Switch, TextField, Tooltip, Typography, Box } from '@mui/material';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Theme } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport { GridApi } from 'ag-grid-community';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { CountryList, CurrencyList, EditCommitment, NewCommitment } from '../../../../../models/shared/sharedModels';\r\nimport { LP } from '../../../../../models/lps/lpModels';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../../redux/slices/rootSlice';\r\nimport { useAppDispatch } from '../../../../../redux/store';\r\nimport { fetchLPs } from '../../../../../redux/thunks/lpThunk';\r\nimport { FundSummary } from '../../../../../models/funds/fundModels';\r\nimport { setSelectedLP } from '../../../../../redux/slices/lps/lpsSlice';\r\nimport { setSelectedFund } from '../../../../../redux/slices/funds/fundsSlice';\r\nimport { fetchFunds } from '../../../../../redux/thunks/fundThunk';\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { DatePicker } from '@mui/x-date-pickers';\r\nimport moment from 'moment';\r\nimport { amountValueFormatter } from '../../../../../helpers/app';\r\n\r\nconst autocompleteInputStyles = makeStyles((theme: Theme) => ({\r\n    autocomplete: {\r\n        'borderRadius': 5,\r\n        'backgroundColor': theme.palette.background.paper,\r\n        '& input::placeholder': {\r\n            color: theme.palette.text.primary\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: theme.palette.text.primary,\r\n            opacity: 0.8\r\n        }\r\n    },\r\n    textInput: {\r\n        'color': theme.palette.text.primary,\r\n        'fontWeight': 800,\r\n        'fontFamily': 'Raleway',\r\n        height: '2.2em',\r\n        /* 'height': '2.5em', */\r\n        'fontSize': 10,\r\n        '& .MuiIconButton-label': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chart: {\r\n            flex: 1,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n        },\r\n        fabIcon: {\r\n            marginLeft: 10,\r\n            alignSelf: 'center',\r\n        },\r\n        searchBox: {\r\n            width: '400px',\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        switchField: {\r\n            '& .MuiFormControlLabel-label': {\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        datePickers: {\r\n            width: '100%',\r\n            flex: 1,\r\n        },\r\n        textField: {\r\n            width: '400px',\r\n            backgroundColor: theme.palette.background.paper,\r\n            borderColor: theme.palette.text.primary,\r\n            color: theme.palette.text.primary,\r\n            borderRadius: 5,\r\n            '& .MuiSvgIcon-root':\r\n            {\r\n                color: theme.palette.text.primary\r\n            },\r\n\r\n            '& label': {\r\n                '&.Mui-focused': {\r\n                    color: theme.palette.text.primary\r\n                }\r\n            },\r\n        },\r\n        textFildsSmall: {\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        inputRoot: {\r\n            height: '1em',\r\n            'borderRadius': 5,\r\n            'backgroundColor': 'transparent',\r\n            /*         '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'black'\r\n                    },*/\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.primary.main\r\n            },\r\n            /*  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'black'\r\n              }, */\r\n            '& .MuiChip-root': {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: 'transparent',\r\n                borderRadius: 5\r\n            },\r\n            '& .MuiChip-deleteIconSmall': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        option: {\r\n            'background': theme.palette.background.paper,\r\n            '&:hover': {\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 400,\r\n                fontFamily: 'Raleway'\r\n            },\r\n            '&[aria-selected=\"true\"]': {\r\n                background: theme.palette.background.paper,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 700,\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        popupIndicator: {\r\n            '&.MuiIconButton-root': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        clearIndicator: {\r\n            color: theme.palette.text.primary\r\n        },\r\n    }),\r\n);\r\nconst LPTypes = [\r\n    \"Corporate\",\r\n    \"General Partner\",\r\n    \"Individual\",\r\n    \"Institutional\",\r\n];\r\n\r\ninterface AddNewLPCommitmentComponentProps {\r\n    disabled: boolean,\r\n    setDisabled: any,\r\n    newCommitment: EditCommitment | null,\r\n    setNewCommitment: (newState: any) => void\r\n}\r\n\r\nconst LPCommitmentEditContentComponent = ({ setDisabled, disabled, newCommitment, setNewCommitment }: AddNewLPCommitmentComponentProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const theme = useTheme();\r\n    const autocompleteInputClasses = autocompleteInputStyles();\r\n    const [committedAmount, setCommittedAmount] = useState<any>(0);\r\n    const [currency, setCurrency] = useState<string>('');\r\n    const { lps, selectedLP } = useSelector((state: RootState) => state.lps);\r\n    const lpId = selectedLP?.id ?? '';\r\n    const lpName = selectedLP?.shortName ?? '';\r\n    const [transfered, setTransfered] = useState<boolean>(false);\r\n    const [fundId, setFundId] = useState<string>('');\r\n    const { funds, selectedFund } = useSelector((state: RootState) => state.funds);\r\n    const [date, setDateInvestment] = useState<string>(newCommitment?.date ?? '');\r\n    const [selectedFundLocal, setSelectedFundLocal] = useState<any>(funds && newCommitment ? funds.filter(x => x.id === newCommitment?.fundId)[0] ?? null : null)\r\n    const [isFirstOpen, setIsFirstOpen] = useState<boolean>(true);\r\n\r\n    const onValueChange = (value: string, field: string) => {\r\n        setIsFirstOpen(false);\r\n        switch (field) {\r\n            case 'fundId':\r\n                setFundId(value);\r\n                setSelectedFundLocal(funds?.filter(x => x.id === value)[0] ?? null)\r\n                setNewCommitment({\r\n                    ...newCommitment,\r\n                    fundId: value\r\n                });\r\n                setDisabled(value === '' || currency === '' || committedAmount === 0);\r\n                break;\r\n            case 'currency':\r\n                setCurrency(value);\r\n                setNewCommitment({\r\n                    ...newCommitment,\r\n                    currency: value\r\n                });\r\n                setDisabled(value === '' || fundId === '' || committedAmount === 0);\r\n                break;\r\n            case 'committedAmount':\r\n                setCommittedAmount(+value);\r\n                setNewCommitment({\r\n                    ...newCommitment,\r\n                    committedAmount: +value\r\n                });\r\n                setDisabled(currency === '' || fundId === '' || +value === 0);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const optionLabel = (option: string | LP) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.name ? option.name : option;\r\n        }\r\n    };\r\n\r\n    const optionLabelFund = (option: string | FundSummary) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.fundName ? option.fundName : option;\r\n        }\r\n    };\r\n\r\n    const handleSwitchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setTransfered(event.target.checked);\r\n        setNewCommitment({\r\n            ...newCommitment,\r\n            transfered: event.target.checked\r\n        });\r\n        setDisabled(lpId === '' || currency === '' || fundId === '' || committedAmount === 0);\r\n    };\r\n\r\n    const onDateChange = (value: any, field: string) => {\r\n        if (field === 'date') {\r\n            setDateInvestment(value);\r\n            if (newCommitment) {\r\n                setNewCommitment({\r\n                    ...newCommitment,\r\n                    date: value\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchFunds());\r\n    }, [dispatch])\r\n\r\n\r\n    useEffect(() => {\r\n        if (newCommitment !== null && newCommitment !== undefined && funds && isFirstOpen) {\r\n            setCommittedAmount(amountValueFormatter(newCommitment.committedAmount ?? 0, ''));\r\n            setDateInvestment(newCommitment.date ?? '');\r\n            setSelectedFundLocal(funds && newCommitment ? funds.filter(x => x.id === newCommitment?.fundId)[0] ?? null : null);\r\n            setTransfered(newCommitment.transfered ?? false);\r\n        }\r\n    }, [newCommitment, funds, isFirstOpen]);\r\n\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{ paddingTop: '10px' }}>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label={'LP'}\r\n                        aria-label=\"baseCapital\"\r\n                        value={lpName}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputProps={{\r\n                            readOnly: true,\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <Autocomplete\r\n                        id={'fundsAutocomplete'}\r\n                        popupIcon={<ExpandMoreIcon />}\r\n                        size={'small'}\r\n                        autoHighlight={true}\r\n                        autoSelect={true}\r\n                        autoComplete={false}\r\n                        classes={classes}\r\n                        sx={{ marginRight: '1em', width: '400px' }}\r\n                        isOptionEqualToValue={(option, value) => option === value}\r\n                        onChange={(e, value: FundSummary | null) => onValueChange(value ? value.id : '', 'fundId')}\r\n                        value={selectedFundLocal ?? undefined}\r\n                        options={funds && funds.length > 0 ? funds.slice().sort(function (a, b) {\r\n                            if (a.id.toLowerCase() < b.id.toLowerCase()) return -1;\r\n                            if (a.id.toLowerCase() > b.id.toLowerCase()) return 1;\r\n                            return 0;\r\n                        }) : []}\r\n                        getOptionLabel={(option) => optionLabelFund(option).toString()}\r\n                        renderInput={(params: AutocompleteRenderInputParams) => {\r\n                            params.InputProps.className = autocompleteInputClasses.textInput;\r\n                            return <TextField {...params}\r\n                                className={autocompleteInputClasses.autocomplete}\r\n                                variant=\"outlined\"\r\n                                autoComplete=\"off\"\r\n                                label={'Fund*'}\r\n                                type={'text'}\r\n                            />;\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item >\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <DatePicker\r\n                        className={classes.datePickers}\r\n                        inputFormat={'dd/MM/yyyy'}\r\n                        disableFuture\r\n                        value={date ? moment(new Date(date)).format('DD MMM YYYY') : null}\r\n                        onChange={(e) => onDateChange(e ?? '', 'date')}\r\n                        disableHighlightToday\r\n                        renderInput={(props: any) =>\r\n                            <TextField {...props}\r\n                                label={'Date Invested'}\r\n                                variant={'outlined'}\r\n                                size={'small'}\r\n                                className={classes.textField}\r\n                                InputLabelProps={{\r\n                                    sx: {\r\n                                        fontSize: 'small'\r\n                                    }\r\n                                }}\r\n                            />}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"baseCapital\"\r\n                        value={committedAmount}\r\n                        label={'Amount*'}\r\n                        onChange={(e) => onValueChange(e.target.value, 'committedAmount')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Typography variant='body2'>Transfer</Typography>\r\n                <Tooltip title={'Is transfer from one fund to another'}>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch color=\"primary\" checked={transfered} onChange={handleSwitchChange} />}\r\n                        label={''}\r\n                        className={classes.switchField}\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </Tooltip>\r\n            </Grid>\r\n\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default LPCommitmentEditContentComponent;","import { Autocomplete, AutocompleteRenderInputParams, Fab, FormControlLabel, Grid, IconButton, InputAdornment, Switch, TextField, Tooltip, Typography,Box } from '@mui/material';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Theme } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport { GridApi } from 'ag-grid-community';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { LP } from '../../../../../models/lps/lpModels';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../../redux/slices/rootSlice';\r\nimport { useAppDispatch } from '../../../../../redux/store';\r\nimport { fetchLPs } from '../../../../../redux/thunks/lpThunk';\r\nimport { FundSummary } from '../../../../../models/funds/fundModels';\r\nimport { setSelectedLP } from '../../../../../redux/slices/lps/lpsSlice';\r\nimport { setSelectedFund } from '../../../../../redux/slices/funds/fundsSlice';\r\nimport { fetchFunds } from '../../../../../redux/thunks/fundThunk';\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { CountryList, CurrencyList, EditCommitment, NewCommitment } from '../../../../../models/shared/sharedModels';\r\nimport { amountValueFormatter } from '../../../../../helpers/app';\r\n\r\nconst autocompleteInputStyles = makeStyles((theme: Theme) => ({\r\n    autocomplete: {\r\n        'borderRadius': 5,\r\n        'backgroundColor': theme.palette.background.paper,\r\n        '& input::placeholder': {\r\n            color: theme.palette.text.primary\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: theme.palette.text.primary,\r\n            opacity: 0.8\r\n        }\r\n    },\r\n    textInput: {\r\n        'color': theme.palette.text.primary,\r\n        'fontWeight': 800,\r\n        'fontFamily': 'Raleway',\r\n        height: '2.2em',\r\n        /* 'height': '2.5em', */\r\n        'fontSize': 10,\r\n        '& .MuiIconButton-label': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chart: {\r\n            flex: 1,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n        },\r\n        fabIcon: {\r\n            marginLeft: 10,\r\n            alignSelf: 'center',\r\n        },\r\n        searchBox: {\r\n            width: '400px',\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        switchField: {\r\n            '& .MuiFormControlLabel-label': {\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        textFildsSmall: {\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        inputRoot: {\r\n            height: '1em',\r\n            'borderRadius': 5,\r\n            'backgroundColor': 'transparent',\r\n            /*         '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'black'\r\n                    },*/\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.primary.main\r\n            },\r\n            /*  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'black'\r\n              }, */\r\n            '& .MuiChip-root': {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: 'transparent',\r\n                borderRadius: 5\r\n            },\r\n            '& .MuiChip-deleteIconSmall': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        option: {\r\n            'background': theme.palette.background.paper,\r\n            '&:hover': {\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 400,\r\n                fontFamily: 'Raleway'\r\n            },\r\n            '&[aria-selected=\"true\"]': {\r\n                background: theme.palette.background.paper,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 700,\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        popupIndicator: {\r\n            '&.MuiIconButton-root': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        clearIndicator: {\r\n            color: theme.palette.text.primary\r\n        },\r\n    }),\r\n);\r\nconst LPTypes = [\r\n    \"Corporate\",\r\n    \"General Partner\",\r\n    \"Individual\",\r\n    \"Institutional\",\r\n];\r\n\r\ninterface AddNewLPCommitmentComponentProps {\r\n    disabled: boolean,\r\n    setDisabled: any,\r\n    newCommitment: EditCommitment | null,\r\n    setNewCommitment: (newState: any) => void\r\n}\r\n\r\nconst LPFundsEditContentComponent = ({ setDisabled, disabled, newCommitment, setNewCommitment }: AddNewLPCommitmentComponentProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const theme = useTheme();\r\n    const autocompleteInputClasses = autocompleteInputStyles();\r\n    const [committedAmount, setCommittedAmount] = useState<any>(0);\r\n    const [currency, setCurrency] = useState<string>('');\r\n    const { lps, selectedLP } = useSelector((state: RootState) => state.lps);\r\n    const lpId = selectedLP?.id ?? '';\r\n    const lpName = selectedLP?.shortName ?? '';\r\n    const [transfered, setTransfered] = useState<boolean>(false);\r\n    const [fundId, setFundId] = useState<string>('');\r\n    const { funds, selectedFund } = useSelector((state: RootState) => state.funds);\r\n    const [selectedFundLocal, setSelectedFundLocal] = useState<any>(funds && newCommitment ? funds.filter(x => x.id === newCommitment?.fundId)[0] ?? null : null)\r\n    const [isFirstOpen, setIsFirstOpen] = useState<boolean>(true);\r\n\r\n    const onValueChange = (value: string, field: string) => {\r\n        switch (field) {\r\n            case 'fundId':\r\n                setFundId(value);\r\n                setSelectedFundLocal(funds?.filter(x => x.id === value)[0] ?? null)\r\n                setNewCommitment({\r\n                    ...newCommitment,\r\n                    fundId: value\r\n                });\r\n                setDisabled(value === '' || currency === '' || committedAmount === 0);\r\n                break;\r\n            case 'currency':\r\n                setCurrency(value);\r\n                setNewCommitment({\r\n                    ...newCommitment,\r\n                    currency: value\r\n                });\r\n                setDisabled(value === '' || fundId === '' || committedAmount === 0);\r\n                break;\r\n            case 'committedAmount':\r\n                setCommittedAmount(+value);\r\n                setNewCommitment({\r\n                    ...newCommitment,\r\n                    committedAmount: +value\r\n                });\r\n                setDisabled(currency === '' || fundId === '' || +value === 0);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const optionLabel = (option: string | LP) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.name ? option.name : option;\r\n        }\r\n    };\r\n\r\n    const optionLabelFund = (option: string | FundSummary) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.fundName ? option.fundName : option;\r\n        }\r\n    };\r\n\r\n    const handleSwitchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setTransfered(event.target.checked);\r\n        setNewCommitment({\r\n            ...newCommitment,\r\n            transfered: event.target.checked\r\n        });\r\n        setDisabled(lpId === '' || currency === '' || fundId === '' || committedAmount === 0);\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchFunds());\r\n    }, [dispatch])\r\n\r\n\r\n    useEffect(() => {\r\n        if (newCommitment !== null && newCommitment !== undefined && funds && isFirstOpen) {\r\n            setCommittedAmount(amountValueFormatter(newCommitment.committedAmount ?? 0, ''));\r\n            setSelectedFundLocal(funds && newCommitment ? funds.filter(x => x.id === newCommitment?.fundId)[0] ?? null : null);\r\n            setTransfered(newCommitment.transfered ?? false);\r\n        }\r\n    }, [newCommitment, funds, isFirstOpen]);\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{paddingTop:'10px'}}>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <TextField\r\n                    className={classes.searchBox}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={'LP'}\r\n                    aria-label=\"baseCapital\"\r\n                    value={lpName}\r\n                    inputProps={{\r\n                        style: { height: '1em' },\r\n                    }}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <Autocomplete\r\n                    id={'fundsAutocomplete'}\r\n                    popupIcon={<ExpandMoreIcon />}\r\n                    size={'small'}\r\n                    autoHighlight={true}\r\n                    autoSelect={true}\r\n                    autoComplete={false}\r\n                    classes={classes}\r\n                    sx={{ marginRight: '1em', width: '400px' }}\r\n                    isOptionEqualToValue={(option, value) => option === value}\r\n                    onChange={(e, value: FundSummary | null) => onValueChange(value ? value.id : '', 'fundId')}\r\n                    value={selectedFundLocal ?? undefined}\r\n                    options={funds && funds.length > 0 ? funds.slice().sort(function (a, b) {\r\n                        if (a.id.toLowerCase() < b.id.toLowerCase()) return -1;\r\n                        if (a.id.toLowerCase() > b.id.toLowerCase()) return 1;\r\n                        return 0;\r\n                    }) : []}\r\n                    getOptionLabel={(option) => optionLabelFund(option).toString()}\r\n                    renderInput={(params: AutocompleteRenderInputParams) => {\r\n                        params.InputProps.className = autocompleteInputClasses.textInput;\r\n                        return <TextField {...params}\r\n                            className={autocompleteInputClasses.autocomplete}\r\n                            variant=\"outlined\"\r\n                            autoComplete=\"off\"\r\n                            label={'Fund*'}\r\n                            type={'text'}\r\n                        />;\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <TextField\r\n                    className={classes.searchBox}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    aria-label=\"baseCapital\"\r\n                    value={committedAmount}\r\n                    label={'Amount*'}\r\n                    onChange={(e) => onValueChange(e.target.value, 'committedAmount')}\r\n                    inputProps={{\r\n                        style: { height: '1em' },\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Typography variant='body2'>Transfer</Typography>\r\n                <Tooltip title={'Is transfer from one fund to another'}>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch color=\"primary\" checked={transfered} onChange={handleSwitchChange} />}\r\n                        label={''}\r\n                        className={classes.switchField}\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </Tooltip>\r\n            </Grid>\r\n\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default LPFundsEditContentComponent;","import { Autocomplete, AutocompleteRenderInputParams, Fab, FormControlLabel, Grid, IconButton, InputAdornment, Switch, TextField, Tooltip, Typography, Box } from '@mui/material';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Theme } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport { GridApi } from 'ag-grid-community';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { CountryList, CurrencyList } from '../../../../../models/shared/sharedModels';\r\nimport { LP } from '../../../../../models/lps/lpModels';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../../redux/slices/rootSlice';\r\nimport { useAppDispatch } from '../../../../../redux/store';\r\nimport { fetchLPs } from '../../../../../redux/thunks/lpThunk';\r\nimport { FundSummary } from '../../../../../models/funds/fundModels';\r\nimport { setSelectedLP } from '../../../../../redux/slices/lps/lpsSlice';\r\nimport { setSelectedFund } from '../../../../../redux/slices/funds/fundsSlice';\r\nimport { fetchFunds } from '../../../../../redux/thunks/fundThunk';\r\nimport { fetchPCOs } from '../../../../../redux/thunks/pcoThunk';\r\nimport { EditInvestment, NewInvestment, PCOSummary } from '../../../../../models/pcos/pcoModels';\r\nimport { InvestmentType } from '../../../../../models/transactions/transactionsModels';\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nconst autocompleteInputStyles = makeStyles((theme: Theme) => ({\r\n    autocomplete: {\r\n        'borderRadius': 5,\r\n        'backgroundColor': theme.palette.background.paper,\r\n        '& input::placeholder': {\r\n            color: theme.palette.text.primary\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: theme.palette.text.primary,\r\n            opacity: 0.8\r\n        }\r\n    },\r\n    textInput: {\r\n        'color': theme.palette.text.primary,\r\n        'fontWeight': 800,\r\n        'fontFamily': 'Raleway',\r\n        height: '2.2em',\r\n        /* 'height': '2.5em', */\r\n        'fontSize': 10,\r\n        '& .MuiIconButton-label': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chart: {\r\n            flex: 1,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n        },\r\n        fabIcon: {\r\n            marginLeft: 10,\r\n            alignSelf: 'center',\r\n        },\r\n        searchBox: {\r\n            width: '400px',\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        switchField: {\r\n            '& .MuiFormControlLabel-label': {\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        textFildsSmall: {\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        inputRoot: {\r\n            height: '1em',\r\n            'borderRadius': 5,\r\n            'backgroundColor': 'transparent',\r\n            /*         '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'black'\r\n                    },*/\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.primary.main\r\n            },\r\n            /*  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'black'\r\n              }, */\r\n            '& .MuiChip-root': {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: 'transparent',\r\n                borderRadius: 5\r\n            },\r\n            '& .MuiChip-deleteIconSmall': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        option: {\r\n            'background': theme.palette.background.paper,\r\n            '&:hover': {\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 400,\r\n                fontFamily: 'Raleway'\r\n            },\r\n            '&[aria-selected=\"true\"]': {\r\n                background: theme.palette.background.paper,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 700,\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        popupIndicator: {\r\n            '&.MuiIconButton-root': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        clearIndicator: {\r\n            color: theme.palette.text.primary\r\n        },\r\n    }),\r\n);\r\nconst LPTypes = [\r\n    \"Corporate\",\r\n    \"General Partner\",\r\n    \"Individual\",\r\n    \"Institutional\",\r\n];\r\n\r\ninterface AddNewLPToPCOinvestmentComponentProps {\r\n    disabled: boolean,\r\n    setDisabled: any,\r\n    newInvestment: EditInvestment | null,\r\n    setNewInvestment: (newState: any) => void\r\n}\r\n\r\nconst LPPCOsEditContentComponent = ({ setDisabled, disabled, newInvestment, setNewInvestment }: AddNewLPToPCOinvestmentComponentProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const autocompleteInputClasses = autocompleteInputStyles();\r\n    const theme = useTheme();\r\n    const [amount, setAmount] = useState<number>(0);\r\n    const [currency, setCurrency] = useState<string>('');\r\n    const { lps, selectedLP } = useSelector((state: RootState) => state.lps);\r\n    const lpId = selectedLP?.id ?? '';\r\n    const lpName = selectedLP?.shortName ?? '';\r\n    const [transfered, setTransfered] = useState<boolean>(false);\r\n    const [pcoId, setPcoId] = useState<string>('');\r\n    const { pcos, selectedPCO } = useSelector((state: RootState) => state.pcos);\r\n    const [investmentType, setInvestmentType] = useState<string>('');\r\n    const [participationPercentage, setParticipationPercentage] = useState<any>(0);\r\n    const [selectedPCOLocal, setSelectedPCOLocal] = useState<any>(pcos && newInvestment ? pcos.filter(x => x.id === newInvestment?.pcoId)[0] ?? null : null)\r\n    const [isFirstOpen, setIsFirstOpen] = useState<boolean>(true);\r\n\r\n    const onValueChange = (value: string, field: string) => {\r\n        switch (field) {\r\n            case 'pcoId':\r\n                setPcoId(value);\r\n                setSelectedPCOLocal(pcos?.filter(x => x.id === value)[0] ?? null);\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    pcoId: value\r\n                });\r\n                setDisabled(value === '' || currency === '' || amount === 0);\r\n                break;\r\n            case 'currency':\r\n                setCurrency(value);\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    currency: value\r\n                });\r\n                setDisabled(value === '' || pcoId === '' || amount === 0);\r\n                break;\r\n            case 'investmentType':\r\n                setInvestmentType(value);\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    investmentType: value\r\n                });\r\n                setDisabled(value === '' || pcoId === '' || amount === 0);\r\n                break;\r\n            case 'participationPercentage':\r\n                setParticipationPercentage(+value);\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    participationPercentage: +value\r\n                });\r\n                setDisabled(+value === 0 || investmentType === '' || lpId === '');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const optionLabel = (option: string | PCOSummary) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.pcoName ? option.pcoName : option;\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        dispatch(fetchPCOs());\r\n    }, [dispatch])\r\n\r\n\r\n    useEffect(() => {\r\n        if (newInvestment !== null && newInvestment !== undefined && pcos && isFirstOpen) {\r\n            setSelectedPCOLocal(pcos && newInvestment ? pcos.filter(x => x.id === newInvestment?.pcoId)[0] ?? null : null);\r\n            setParticipationPercentage(newInvestment.participationPercentage ? (newInvestment.participationPercentage * 100).toFixed(2) : 0)\r\n        }\r\n    }, [newInvestment, pcos, isFirstOpen]);\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{ paddingTop: '10px' }}>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label={'LP'}\r\n                        aria-label=\"baseCapital\"\r\n                        value={lpName}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputProps={{\r\n                            readOnly: true,\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <Autocomplete\r\n                        id={'fundsAutocomplete'}\r\n                        popupIcon={<ExpandMoreIcon />}\r\n                        size={'small'}\r\n                        autoHighlight={true}\r\n                        autoSelect={true}\r\n                        autoComplete={false}\r\n                        classes={classes}\r\n                        sx={{ marginRight: '1em', width: '400px' }}\r\n                        isOptionEqualToValue={(option, value) => option === value}\r\n                        onChange={(e, value: PCOSummary | null) => onValueChange(value ? value.id : '', 'pcoId')}\r\n                        value={selectedPCOLocal ?? undefined}\r\n                        options={pcos && pcos.length > 0 ? pcos.slice().sort(function (a, b) {\r\n                            if (a.id.toLowerCase() < b.id.toLowerCase()) return -1;\r\n                            if (a.id.toLowerCase() > b.id.toLowerCase()) return 1;\r\n                            return 0;\r\n                        }) : []}\r\n                        getOptionLabel={(option) => optionLabel(option).toString()}\r\n                        renderInput={(params: AutocompleteRenderInputParams) => {\r\n                            params.InputProps.className = autocompleteInputClasses.textInput;\r\n                            return <TextField {...params}\r\n                                className={autocompleteInputClasses.autocomplete}\r\n                                variant=\"outlined\"\r\n                                autoComplete=\"off\"\r\n                                label={'PCO'}\r\n                                type={'text'}\r\n                            />;\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"baseCapital\"\r\n                        value={participationPercentage}\r\n                        label={'Participation Percentage'}\r\n                        type={'number'}\r\n                        onChange={(e) => onValueChange(e.target.value, 'participationPercentage')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default LPPCOsEditContentComponent;","import { Autocomplete, AutocompleteRenderInputParams, Box, Fab, FormControlLabel, Grid, IconButton, InputAdornment, Switch, TextField, Tooltip, Typography } from '@mui/material';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Theme } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport { GridApi } from 'ag-grid-community';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { CountryList, CurrencyList, NewCommitment } from '../../../../../models/shared/sharedModels';\r\nimport { EditExit, LP } from '../../../../../models/lps/lpModels';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../../redux/slices/rootSlice';\r\nimport { useAppDispatch } from '../../../../../redux/store';\r\nimport { fetchLPs } from '../../../../../redux/thunks/lpThunk';\r\nimport { FundSummary } from '../../../../../models/funds/fundModels';\r\nimport { setLPs, setSelectedLP } from '../../../../../redux/slices/lps/lpsSlice';\r\nimport { setSelectedFund } from '../../../../../redux/slices/funds/fundsSlice';\r\nimport { InvestmentType, NewTransaction, SecurityType, Transaction, TransactionType } from '../../../../../models/transactions/transactionsModels';\r\nimport { setSelectedPCO } from '../../../../../redux/slices/pcos/pcosSlice';\r\nimport { PCOSummary } from '../../../../../models/pcos/pcoModels';\r\nimport { fetchFunds } from '../../../../../redux/thunks/fundThunk';\r\nimport { fetchPCOs } from '../../../../../redux/thunks/pcoThunk';\r\nimport { LPDistributionTypes, NewDistribution } from '../../../../../models/distributions/distributionsModels';\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { DatePicker } from '@mui/x-date-pickers';\r\nimport moment from 'moment';\r\nimport { amountValueFormatter } from '../../../../../helpers/app';\r\n\r\nconst autocompleteInputStyles = makeStyles((theme: Theme) => ({\r\n    autocomplete: {\r\n        'borderRadius': 5,\r\n        'backgroundColor': theme.palette.background.paper,\r\n        '& input::placeholder': {\r\n            color: theme.palette.text.primary\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: theme.palette.text.primary,\r\n            opacity: 0.8\r\n        }\r\n    },\r\n    textInput: {\r\n        'color': theme.palette.text.primary,\r\n        'fontWeight': 800,\r\n        'fontFamily': 'Raleway',\r\n        height: '2.2em',\r\n        /* 'height': '2.5em', */\r\n        'fontSize': 10,\r\n        '& .MuiIconButton-label': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chart: {\r\n            flex: 1,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n        },\r\n        fabIcon: {\r\n            marginLeft: 10,\r\n            alignSelf: 'center',\r\n        },\r\n        searchBox: {\r\n            width: '400px',\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        switchField: {\r\n            '& .MuiFormControlLabel-label': {\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        datePickers: {\r\n            width: '100%',\r\n            flex: 1,\r\n        },\r\n        textField: {\r\n            width: '400px',\r\n            backgroundColor: theme.palette.background.paper,\r\n            borderColor: theme.palette.text.primary,\r\n            color: theme.palette.text.primary,\r\n            borderRadius: 5,\r\n            '& .MuiSvgIcon-root':\r\n            {\r\n                color: theme.palette.text.primary\r\n            },\r\n\r\n            '& label': {\r\n                '&.Mui-focused': {\r\n                    color: theme.palette.text.primary\r\n                }\r\n            },\r\n        },\r\n        textFildsSmall: {\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        inputRoot: {\r\n            height: '1em',\r\n            'borderRadius': 5,\r\n            'backgroundColor': 'transparent',\r\n            /*         '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'black'\r\n                    },*/\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.primary.main\r\n            },\r\n            /*  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'black'\r\n              }, */\r\n            '& .MuiChip-root': {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: 'transparent',\r\n                borderRadius: 5\r\n            },\r\n            '& .MuiChip-deleteIconSmall': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        option: {\r\n            'background': theme.palette.background.paper,\r\n            '&:hover': {\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 400,\r\n                fontFamily: 'Raleway'\r\n            },\r\n            '&[aria-selected=\"true\"]': {\r\n                background: theme.palette.background.paper,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 700,\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        popupIndicator: {\r\n            '&.MuiIconButton-root': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        clearIndicator: {\r\n            color: theme.palette.text.primary\r\n        },\r\n    }),\r\n);\r\nconst LPTypes = [\r\n    \"Corporate\",\r\n    \"General Partner\",\r\n    \"Individual\",\r\n    \"Institutional\",\r\n];\r\n\r\ninterface AddNewLPExitComponentProps {\r\n    disabled: boolean,\r\n    setDisabled: any,\r\n    newDistribution: EditExit | null,\r\n    setNewDistribution: (newState: any) => void\r\n}\r\n\r\nconst LPExitsEditContentCmponent = ({ setDisabled, disabled, newDistribution, setNewDistribution }: AddNewLPExitComponentProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const autocompleteInputClasses = autocompleteInputStyles();\r\n    const theme = useTheme();\r\n    const [amountGained, setAmountGained] = useState<any>(0);\r\n    const [currency, setCurrency] = useState<string>('');\r\n    const [pcoId, setPCOId] = useState<string>('');\r\n    const { pcos, selectedPCO } = useSelector((state: RootState) => state.pcos);\r\n    const [fundId, setFundId] = useState<string>('');\r\n    const { funds, selectedFund } = useSelector((state: RootState) => state.funds);\r\n    const { lps, selectedLP } = useSelector((state: RootState) => state.lps);\r\n    const [transType, setTransType] = useState<string>('');\r\n    const [investmentType, setInvestmentType] = useState<string>('');\r\n    const [securityType, setSecurityType] = useState<string>('');\r\n    const lpId = selectedLP?.id ?? '';\r\n    const lpName = selectedLP?.shortName ?? '';\r\n    const [date, setDateExit] = useState<string>(newDistribution?.date ?? '');\r\n    const [selectedPCOLocal, setSelectedPCOLocal] = useState<any>(pcos && newDistribution ? pcos.filter(x => x.id === newDistribution?.pcoId)[0] ?? null : null)\r\n    const [isFirstOpen, setIsFirstOpen] = useState<boolean>(true);\r\n\r\n    const onValueChange = (value: string, field: string) => {\r\n        setIsFirstOpen(false);\r\n        switch (field) {\r\n            case 'pcoId':\r\n                setPCOId(value);\r\n                setSelectedPCOLocal(pcos?.filter(x => x.id === value)[0] ?? null);\r\n                setNewDistribution({\r\n                    ...newDistribution,\r\n                    pcoId: value\r\n                });\r\n                setDisabled(value === '');\r\n                break;\r\n            case 'transType':\r\n                setTransType(value);\r\n                setNewDistribution({\r\n                    ...newDistribution,\r\n                    transType: value\r\n                });\r\n                setDisabled(value === '' || pcoId === '');\r\n                break;\r\n            case 'amountGained':\r\n                setAmountGained(+value);\r\n                setNewDistribution({\r\n                    ...newDistribution,\r\n                    amountGained: +value\r\n                });\r\n                setDisabled(+value === 0 || pcoId === '');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const optionLabel = (option: string | PCOSummary) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.pcoName ? option.pcoName : option;\r\n        }\r\n    };\r\n\r\n    const optionLabelFund = (option: string | FundSummary) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.fundName ? option.fundName : option;\r\n        }\r\n    };\r\n\r\n    const optionLabelLP = (option: string | LP) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.name ? option.name : option;\r\n        }\r\n    };\r\n\r\n    const onDateChange = (value: any, field: string) => {\r\n        if (field === 'date') {\r\n            setDateExit(value);\r\n            if (newDistribution) {\r\n                setNewDistribution({\r\n                    ...newDistribution,\r\n                    date: value\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchFunds());\r\n        dispatch(fetchPCOs());\r\n        dispatch(fetchLPs());\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (newDistribution !== null && newDistribution !== undefined && pcos && isFirstOpen) {\r\n            setSelectedPCOLocal(pcos && newDistribution ? pcos.filter(x => x.id === newDistribution?.pcoId)[0] ?? null : null);\r\n            setAmountGained(amountValueFormatter(newDistribution.amountGained ?? 0, ''));\r\n            setDateExit(newDistribution.date ?? '');\r\n        }\r\n    }, [newDistribution, pcos, isFirstOpen]);\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{ paddingTop: '10px' }}>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label={'LP'}\r\n                        aria-label=\"baseCapital\"\r\n                        value={lpName}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputProps={{\r\n                            readOnly: true,\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <Autocomplete\r\n                        id={'fundsAutocomplete'}\r\n                        popupIcon={<ExpandMoreIcon />}\r\n                        size={'small'}\r\n                        autoHighlight={true}\r\n                        autoSelect={true}\r\n                        autoComplete={false}\r\n                        classes={classes}\r\n                        sx={{ marginRight: '1em', width: '400px' }}\r\n                        isOptionEqualToValue={(option, value) => option === value}\r\n                        onChange={(e, value: PCOSummary | null) => onValueChange(value ? value.id : '', 'pcoId')}\r\n                        value={selectedPCOLocal ?? undefined}\r\n                        options={pcos && pcos.length > 0 ? pcos.slice().sort(function (a, b) {\r\n                            if (a.id.toLowerCase() < b.id.toLowerCase()) return -1;\r\n                            if (a.id.toLowerCase() > b.id.toLowerCase()) return 1;\r\n                            return 0;\r\n                        }) : []}\r\n                        getOptionLabel={(option) => optionLabel(option).toString()}\r\n                        renderInput={(params: AutocompleteRenderInputParams) => {\r\n                            params.InputProps.className = autocompleteInputClasses.textInput;\r\n                            return <TextField {...params}\r\n                                className={autocompleteInputClasses.autocomplete}\r\n                                variant=\"outlined\"\r\n                                autoComplete=\"off\"\r\n                                label={'PCO'}\r\n                                type={'text'}\r\n                            />;\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item >\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <DatePicker\r\n                        className={classes.datePickers}\r\n                        inputFormat={'dd/MM/yyyy'}\r\n                        disableFuture\r\n                        value={date ? moment(new Date(date)).format('DD MMM YYYY') : null}\r\n                        onChange={(e) => onDateChange(e ?? '', 'date')}\r\n                        disableHighlightToday\r\n                        renderInput={(props: any) =>\r\n                            <TextField {...props}\r\n                                label={'Date Exit'}\r\n                                variant={'outlined'}\r\n                                size={'small'}\r\n                                className={classes.textField}\r\n                                InputLabelProps={{\r\n                                    sx: {\r\n                                        fontSize: 'small'\r\n                                    }\r\n                                }}\r\n                            />}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"baseCapital\"\r\n                        value={amountGained}\r\n                        label={'Amount'}\r\n                        onChange={(e) => onValueChange(e.target.value, 'amountGained')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default LPExitsEditContentCmponent;","import { Autocomplete, AutocompleteRenderInputParams, Fab, FormControlLabel, Grid, IconButton, InputAdornment, Switch, TextField, Tooltip, Typography, Box } from '@mui/material';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Theme } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport { GridApi } from 'ag-grid-community';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { CountryList, CurrencyList, EditCommitment, NewCommitment } from '../../../../../models/shared/sharedModels';\r\nimport { LP } from '../../../../../models/lps/lpModels';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../../redux/slices/rootSlice';\r\nimport { useAppDispatch } from '../../../../../redux/store';\r\nimport { fetchLPs } from '../../../../../redux/thunks/lpThunk';\r\nimport { FundSummary } from '../../../../../models/funds/fundModels';\r\nimport { setSelectedLP } from '../../../../../redux/slices/lps/lpsSlice';\r\nimport { setSelectedFund } from '../../../../../redux/slices/funds/fundsSlice';\r\nimport { fetchFunds } from '../../../../../redux/thunks/fundThunk';\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { DatePicker } from '@mui/x-date-pickers';\r\nimport moment from 'moment';\r\nimport { amountValueFormatter } from '../../../../../helpers/app';\r\n\r\nconst autocompleteInputStyles = makeStyles((theme: Theme) => ({\r\n    autocomplete: {\r\n        'borderRadius': 5,\r\n        'backgroundColor': theme.palette.background.paper,\r\n        '& input::placeholder': {\r\n            color: theme.palette.text.primary\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: theme.palette.text.primary,\r\n            opacity: 0.8\r\n        }\r\n    },\r\n    textInput: {\r\n        'color': theme.palette.text.primary,\r\n        'fontWeight': 800,\r\n        'fontFamily': 'Raleway',\r\n        height: '2.2em',\r\n        /* 'height': '2.5em', */\r\n        'fontSize': 10,\r\n        '& .MuiIconButton-label': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chart: {\r\n            flex: 1,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n        },\r\n        fabIcon: {\r\n            marginLeft: 10,\r\n            alignSelf: 'center',\r\n        },\r\n        searchBox: {\r\n            width: '400px',\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        switchField: {\r\n            '& .MuiFormControlLabel-label': {\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        datePickers: {\r\n            width: '100%',\r\n            flex: 1,\r\n        },\r\n        textField: {\r\n            width: '400px',\r\n            backgroundColor: theme.palette.background.paper,\r\n            borderColor: theme.palette.text.primary,\r\n            color: theme.palette.text.primary,\r\n            borderRadius: 5,\r\n            '& .MuiSvgIcon-root':\r\n            {\r\n                color: theme.palette.text.primary\r\n            },\r\n\r\n            '& label': {\r\n                '&.Mui-focused': {\r\n                    color: theme.palette.text.primary\r\n                }\r\n            },\r\n        },\r\n        textFildsSmall: {\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        inputRoot: {\r\n            height: '1em',\r\n            'borderRadius': 5,\r\n            'backgroundColor': 'transparent',\r\n            /*         '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'black'\r\n                    },*/\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.primary.main\r\n            },\r\n            /*  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'black'\r\n              }, */\r\n            '& .MuiChip-root': {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: 'transparent',\r\n                borderRadius: 5\r\n            },\r\n            '& .MuiChip-deleteIconSmall': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        option: {\r\n            'background': theme.palette.background.paper,\r\n            '&:hover': {\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 400,\r\n                fontFamily: 'Raleway'\r\n            },\r\n            '&[aria-selected=\"true\"]': {\r\n                background: theme.palette.background.paper,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 700,\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        popupIndicator: {\r\n            '&.MuiIconButton-root': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        clearIndicator: {\r\n            color: theme.palette.text.primary\r\n        },\r\n    }),\r\n);\r\nconst LPTypes = [\r\n    \"Corporate\",\r\n    \"General Partner\",\r\n    \"Individual\",\r\n    \"Institutional\",\r\n];\r\n\r\ninterface AddNewLPCommitmentComponentProps {\r\n    disabled: boolean,\r\n    setDisabled: any,\r\n    newCommitment: EditCommitment | null,\r\n    setNewCommitment: (newState: any) => void\r\n}\r\n\r\nconst FundCommitmentEditContentComponent = ({ setDisabled, disabled, newCommitment, setNewCommitment }: AddNewLPCommitmentComponentProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const theme = useTheme();\r\n    const autocompleteInputClasses = autocompleteInputStyles();\r\n    const [committedAmount, setCommittedAmount] = useState<any>(0);\r\n    const [currency, setCurrency] = useState<string>('');\r\n    const { lps, selectedLP } = useSelector((state: RootState) => state.lps);\r\n    const { funds, selectedFund } = useSelector((state: RootState) => state.funds);\r\n    const fundName = selectedFund?.shortName ?? '';\r\n    const [transfered, setTransfered] = useState<boolean>(false);\r\n    const [lpId, setLPId] = useState<string>('');\r\n    const [date, setDateInvestment] = useState<string>(newCommitment?.date ?? '');\r\n    const [selectedLPLocal, setSelectedLPLocal] = useState<any>(lps && newCommitment ? lps.filter(x => x.id === newCommitment?.lpId)[0] ?? null : null)\r\n    const [isFirstOpen, setIsFirstOpen] = useState<boolean>(true);\r\n\r\n    const onValueChange = (value: string, field: string) => {\r\n        setIsFirstOpen(false);\r\n        switch (field) {\r\n            case 'lpId':\r\n                setLPId(value);\r\n                setSelectedLPLocal(lps?.filter(x => x.id === value)[0] ?? null)\r\n                setNewCommitment({\r\n                    ...newCommitment,\r\n                    fundId: value\r\n                });\r\n                setDisabled(value === '');\r\n                break;\r\n            case 'currency':\r\n                setCurrency(value);\r\n                setNewCommitment({\r\n                    ...newCommitment,\r\n                    currency: value\r\n                });\r\n                setDisabled(value === '' || lpId === '');\r\n                break;\r\n            case 'committedAmount':\r\n                setCommittedAmount(+value);\r\n                setNewCommitment({\r\n                    ...newCommitment,\r\n                    committedAmount: +value\r\n                });\r\n                setDisabled(lpId === '' || +value === 0);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const optionLabel = (option: string | LP) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.name ? option.name : option;\r\n        }\r\n    };\r\n\r\n    const optionLabelFund = (option: string | FundSummary) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.fundName ? option.fundName : option;\r\n        }\r\n    };\r\n\r\n    const handleSwitchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setTransfered(event.target.checked);\r\n        setNewCommitment({\r\n            ...newCommitment,\r\n            transfered: event.target.checked\r\n        });\r\n        setDisabled( lpId === '' || committedAmount === 0);\r\n    };\r\n\r\n    const onDateChange = (value: any, field: string) => {\r\n        if (field === 'date') {\r\n            setDateInvestment(value);\r\n            if (newCommitment) {\r\n                setNewCommitment({\r\n                    ...newCommitment,\r\n                    date: value\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchLPs());\r\n    }, [dispatch])\r\n\r\n\r\n    useEffect(() => {\r\n        if (newCommitment !== null && newCommitment !== undefined && lps && isFirstOpen) {\r\n            setCommittedAmount(amountValueFormatter(newCommitment.committedAmount ?? 0, ''));\r\n            setDateInvestment(newCommitment.date ?? '');\r\n            setSelectedLP(lps && newCommitment ? lps.filter(x => x.id === newCommitment?.lpId)[0] ?? null : null);\r\n            setTransfered(newCommitment.transfered ?? false);\r\n        }\r\n    }, [newCommitment, lps, isFirstOpen]);\r\n\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{ paddingTop: '10px' }}>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label={'Fund'}\r\n                        aria-label=\"baseCapital\"\r\n                        value={fundName}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputProps={{\r\n                            readOnly: true,\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <Autocomplete\r\n                        id={'fundsAutocomplete'}\r\n                        popupIcon={<ExpandMoreIcon />}\r\n                        size={'small'}\r\n                        autoHighlight={true}\r\n                        autoSelect={true}\r\n                        autoComplete={false}\r\n                        classes={classes}\r\n                        sx={{ marginRight: '1em', width: '400px' }}\r\n                        isOptionEqualToValue={(option, value) => option === value}\r\n                        onChange={(e, value: LP | null) => onValueChange(value ? value.id : '', 'fundId')}\r\n                        value={selectedLPLocal ?? undefined}\r\n                        options={lps && lps.length > 0 ? lps.slice().sort(function (a, b) {\r\n                            if (a.id.toLowerCase() < b.id.toLowerCase()) return -1;\r\n                            if (a.id.toLowerCase() > b.id.toLowerCase()) return 1;\r\n                            return 0;\r\n                        }) : []}\r\n                        getOptionLabel={(option) => optionLabel(option).toString()}\r\n                        renderInput={(params: AutocompleteRenderInputParams) => {\r\n                            params.InputProps.className = autocompleteInputClasses.textInput;\r\n                            return <TextField {...params}\r\n                                className={autocompleteInputClasses.autocomplete}\r\n                                variant=\"outlined\"\r\n                                autoComplete=\"off\"\r\n                                label={'LP*'}\r\n                                type={'text'}\r\n                            />;\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item >\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <DatePicker\r\n                        className={classes.datePickers}\r\n                        inputFormat={'dd/MM/yyyy'}\r\n                        disableFuture\r\n                        value={date ? moment(new Date(date)).format('DD MMM YYYY') : null}\r\n                        onChange={(e) => onDateChange(e ?? '', 'date')}\r\n                        disableHighlightToday\r\n                        renderInput={(props: any) =>\r\n                            <TextField {...props}\r\n                                label={'Date Invested'}\r\n                                variant={'outlined'}\r\n                                size={'small'}\r\n                                className={classes.textField}\r\n                                InputLabelProps={{\r\n                                    sx: {\r\n                                        fontSize: 'small'\r\n                                    }\r\n                                }}\r\n                            />}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"baseCapital\"\r\n                        value={committedAmount}\r\n                        label={'Amount*'}\r\n                        onChange={(e) => onValueChange(e.target.value, 'committedAmount')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Typography variant='body2'>Transfer</Typography>\r\n                <Tooltip title={'Is transfer from one fund to another'}>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch color=\"primary\" checked={transfered} onChange={handleSwitchChange} />}\r\n                        label={''}\r\n                        className={classes.switchField}\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </Tooltip>\r\n            </Grid>\r\n\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default FundCommitmentEditContentComponent;","import { Autocomplete, AutocompleteRenderInputParams, Fab, FormControlLabel, Grid, IconButton, InputAdornment, Switch, TextField, Tooltip, Typography,Box } from '@mui/material';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Theme } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport { GridApi } from 'ag-grid-community';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { LP } from '../../../../../models/lps/lpModels';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../../redux/slices/rootSlice';\r\nimport { useAppDispatch } from '../../../../../redux/store';\r\nimport { fetchLPs } from '../../../../../redux/thunks/lpThunk';\r\nimport { FundSummary } from '../../../../../models/funds/fundModels';\r\nimport { setSelectedLP } from '../../../../../redux/slices/lps/lpsSlice';\r\nimport { setSelectedFund } from '../../../../../redux/slices/funds/fundsSlice';\r\nimport { fetchFunds } from '../../../../../redux/thunks/fundThunk';\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { CountryList, CurrencyList, EditCommitment, NewCommitment } from '../../../../../models/shared/sharedModels';\r\nimport { amountValueFormatter } from '../../../../../helpers/app';\r\n\r\nconst autocompleteInputStyles = makeStyles((theme: Theme) => ({\r\n    autocomplete: {\r\n        'borderRadius': 5,\r\n        'backgroundColor': theme.palette.background.paper,\r\n        '& input::placeholder': {\r\n            color: theme.palette.text.primary\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: theme.palette.text.primary,\r\n            opacity: 0.8\r\n        }\r\n    },\r\n    textInput: {\r\n        'color': theme.palette.text.primary,\r\n        'fontWeight': 800,\r\n        'fontFamily': 'Raleway',\r\n        height: '2.2em',\r\n        /* 'height': '2.5em', */\r\n        'fontSize': 10,\r\n        '& .MuiIconButton-label': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chart: {\r\n            flex: 1,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n        },\r\n        fabIcon: {\r\n            marginLeft: 10,\r\n            alignSelf: 'center',\r\n        },\r\n        searchBox: {\r\n            width: '400px',\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        switchField: {\r\n            '& .MuiFormControlLabel-label': {\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        textFildsSmall: {\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        inputRoot: {\r\n            height: '1em',\r\n            'borderRadius': 5,\r\n            'backgroundColor': 'transparent',\r\n            /*         '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'black'\r\n                    },*/\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.primary.main\r\n            },\r\n            /*  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'black'\r\n              }, */\r\n            '& .MuiChip-root': {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: 'transparent',\r\n                borderRadius: 5\r\n            },\r\n            '& .MuiChip-deleteIconSmall': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        option: {\r\n            'background': theme.palette.background.paper,\r\n            '&:hover': {\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 400,\r\n                fontFamily: 'Raleway'\r\n            },\r\n            '&[aria-selected=\"true\"]': {\r\n                background: theme.palette.background.paper,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 700,\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        popupIndicator: {\r\n            '&.MuiIconButton-root': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        clearIndicator: {\r\n            color: theme.palette.text.primary\r\n        },\r\n    }),\r\n);\r\nconst LPTypes = [\r\n    \"Corporate\",\r\n    \"General Partner\",\r\n    \"Individual\",\r\n    \"Institutional\",\r\n];\r\n\r\ninterface AddNewLPCommitmentComponentProps {\r\n    disabled: boolean,\r\n    setDisabled: any,\r\n    newCommitment: EditCommitment | null,\r\n    setNewCommitment: (newState: any) => void\r\n}\r\n\r\nconst FundLPsEditContentComponent = ({ setDisabled, disabled, newCommitment, setNewCommitment }: AddNewLPCommitmentComponentProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const theme = useTheme();\r\n    const autocompleteInputClasses = autocompleteInputStyles();\r\n    const [committedAmount, setCommittedAmount] = useState<any>(0);\r\n    const [currency, setCurrency] = useState<string>('');\r\n    const { lps, selectedLP } = useSelector((state: RootState) => state.lps);\r\n    const [transfered, setTransfered] = useState<boolean>(false);\r\n    const [lpId, setLPId] = useState<string>('');\r\n    const { funds, selectedFund } = useSelector((state: RootState) => state.funds);\r\n    const fundName = selectedFund?.shortName ?? '';\r\n    const [selectedLPLocal, setSelectedLPLocal] = useState<any>(lps && newCommitment ? lps.filter(x => x.id === newCommitment?.lpId)[0] ?? null : null)\r\n    const [isFirstOpen, setIsFirstOpen] = useState<boolean>(true);\r\n\r\n    const onValueChange = (value: string, field: string) => {\r\n        switch (field) {\r\n            case 'lpId':\r\n                setLPId(value);\r\n                setSelectedLPLocal(lps?.filter(x => x.id === value)[0] ?? null)\r\n                setNewCommitment({\r\n                    ...newCommitment,\r\n                    fundId: value\r\n                });\r\n                setDisabled(value === '' );\r\n                break;\r\n            case 'currency':\r\n                setCurrency(value);\r\n                setNewCommitment({\r\n                    ...newCommitment,\r\n                    currency: value\r\n                });\r\n                setDisabled(value === '' || lpId === '');\r\n                break;\r\n            case 'committedAmount':\r\n                setCommittedAmount(+value);\r\n                setNewCommitment({\r\n                    ...newCommitment,\r\n                    committedAmount: +value\r\n                });\r\n                setDisabled( lpId === '' || +value === 0);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const optionLabel = (option: string | LP) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.name ? option.name : option;\r\n        }\r\n    };\r\n\r\n    const optionLabelFund = (option: string | FundSummary) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.fundName ? option.fundName : option;\r\n        }\r\n    };\r\n\r\n    const handleSwitchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setTransfered(event.target.checked);\r\n        setNewCommitment({\r\n            ...newCommitment,\r\n            transfered: event.target.checked\r\n        });\r\n        setDisabled(lpId === '');\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchLPs());\r\n    }, [dispatch])\r\n\r\n\r\n    useEffect(() => {\r\n        if (newCommitment !== null && newCommitment !== undefined && lps && isFirstOpen) {\r\n            setCommittedAmount(amountValueFormatter(newCommitment.committedAmount ?? 0, ''));\r\n            setSelectedLP(lps && newCommitment ? lps.filter(x => x.id === newCommitment?.lpId)[0] ?? null : null);\r\n            setTransfered(newCommitment.transfered ?? false);\r\n        }\r\n    }, [newCommitment, lps, isFirstOpen]);\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{paddingTop:'10px'}}>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <TextField\r\n                    className={classes.searchBox}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={'Fund'}\r\n                    aria-label=\"baseCapital\"\r\n                    value={fundName}\r\n                    inputProps={{\r\n                        style: { height: '1em' },\r\n                    }}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <Autocomplete\r\n                    id={'fundsAutocomplete'}\r\n                    popupIcon={<ExpandMoreIcon />}\r\n                    size={'small'}\r\n                    autoHighlight={true}\r\n                    autoSelect={true}\r\n                    autoComplete={false}\r\n                    classes={classes}\r\n                    sx={{ marginRight: '1em', width: '400px' }}\r\n                    isOptionEqualToValue={(option, value) => option === value}\r\n                    onChange={(e, value: LP | null) => onValueChange(value ? value.id : '', 'fundId')}\r\n                    value={selectedLPLocal ?? undefined}\r\n                    options={lps && lps.length > 0 ? lps.slice().sort(function (a, b) {\r\n                        if (a.id.toLowerCase() < b.id.toLowerCase()) return -1;\r\n                        if (a.id.toLowerCase() > b.id.toLowerCase()) return 1;\r\n                        return 0;\r\n                    }) : []}\r\n                    getOptionLabel={(option) => optionLabel(option).toString()}\r\n                    renderInput={(params: AutocompleteRenderInputParams) => {\r\n                        params.InputProps.className = autocompleteInputClasses.textInput;\r\n                        return <TextField {...params}\r\n                            className={autocompleteInputClasses.autocomplete}\r\n                            variant=\"outlined\"\r\n                            autoComplete=\"off\"\r\n                            label={'LP*'}\r\n                            type={'text'}\r\n                        />;\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n            <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                <TextField\r\n                    className={classes.searchBox}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    aria-label=\"baseCapital\"\r\n                    value={committedAmount}\r\n                    label={'Amount*'}\r\n                    onChange={(e) => onValueChange(e.target.value, 'committedAmount')}\r\n                    inputProps={{\r\n                        style: { height: '1em' },\r\n                    }}\r\n                />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Typography variant='body2'>Transfer</Typography>\r\n                <Tooltip title={'Is transfer from one fund to another'}>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch color=\"primary\" checked={transfered} onChange={handleSwitchChange} />}\r\n                        label={''}\r\n                        className={classes.switchField}\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </Tooltip>\r\n            </Grid>\r\n\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default FundLPsEditContentComponent;","import { Autocomplete, AutocompleteRenderInputParams, Fab, FormControlLabel, Grid, IconButton, InputAdornment, Switch, TextField, Tooltip, Typography, Box } from '@mui/material';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Theme } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport { GridApi } from 'ag-grid-community';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { CountryList, CurrencyList } from '../../../../../models/shared/sharedModels';\r\nimport { LP } from '../../../../../models/lps/lpModels';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../../redux/slices/rootSlice';\r\nimport { useAppDispatch } from '../../../../../redux/store';\r\nimport { fetchLPs } from '../../../../../redux/thunks/lpThunk';\r\nimport { FundSummary } from '../../../../../models/funds/fundModels';\r\nimport { setSelectedLP } from '../../../../../redux/slices/lps/lpsSlice';\r\nimport { setSelectedFund } from '../../../../../redux/slices/funds/fundsSlice';\r\nimport { fetchFunds } from '../../../../../redux/thunks/fundThunk';\r\nimport { fetchPCOs } from '../../../../../redux/thunks/pcoThunk';\r\nimport { EditInvestment, NewInvestment, PCOSummary } from '../../../../../models/pcos/pcoModels';\r\nimport { InvestmentType } from '../../../../../models/transactions/transactionsModels';\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { amountValueFormatter } from '../../../../../helpers/app';\r\n\r\nconst autocompleteInputStyles = makeStyles((theme: Theme) => ({\r\n    autocomplete: {\r\n        'borderRadius': 5,\r\n        'backgroundColor': theme.palette.background.paper,\r\n        '& input::placeholder': {\r\n            color: theme.palette.text.primary\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: theme.palette.text.primary,\r\n            opacity: 0.8\r\n        }\r\n    },\r\n    textInput: {\r\n        'color': theme.palette.text.primary,\r\n        'fontWeight': 800,\r\n        'fontFamily': 'Raleway',\r\n        height: '2.2em',\r\n        /* 'height': '2.5em', */\r\n        'fontSize': 10,\r\n        '& .MuiIconButton-label': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chart: {\r\n            flex: 1,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n        },\r\n        fabIcon: {\r\n            marginLeft: 10,\r\n            alignSelf: 'center',\r\n        },\r\n        searchBox: {\r\n            width: '400px',\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        switchField: {\r\n            '& .MuiFormControlLabel-label': {\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        textFildsSmall: {\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        inputRoot: {\r\n            height: '1em',\r\n            'borderRadius': 5,\r\n            'backgroundColor': 'transparent',\r\n            /*         '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'black'\r\n                    },*/\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.primary.main\r\n            },\r\n            /*  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'black'\r\n              }, */\r\n            '& .MuiChip-root': {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: 'transparent',\r\n                borderRadius: 5\r\n            },\r\n            '& .MuiChip-deleteIconSmall': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        option: {\r\n            'background': theme.palette.background.paper,\r\n            '&:hover': {\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 400,\r\n                fontFamily: 'Raleway'\r\n            },\r\n            '&[aria-selected=\"true\"]': {\r\n                background: theme.palette.background.paper,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 700,\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        popupIndicator: {\r\n            '&.MuiIconButton-root': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        clearIndicator: {\r\n            color: theme.palette.text.primary\r\n        },\r\n    }),\r\n);\r\nconst LPTypes = [\r\n    \"Corporate\",\r\n    \"General Partner\",\r\n    \"Individual\",\r\n    \"Institutional\",\r\n];\r\n\r\ninterface AddNewLPToPCOinvestmentComponentProps {\r\n    disabled: boolean,\r\n    setDisabled: any,\r\n    newInvestment: EditInvestment | null,\r\n    setNewInvestment: (newState: any) => void\r\n}\r\n\r\nconst FundPCOsEditContentComponent = ({ setDisabled, disabled, newInvestment, setNewInvestment }: AddNewLPToPCOinvestmentComponentProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const autocompleteInputClasses = autocompleteInputStyles();\r\n    const theme = useTheme();\r\n    const [amount, setAmount] = useState<number>(0);\r\n    const [currency, setCurrency] = useState<string>('');\r\n    const { funds, selectedFund } = useSelector((state: RootState) => state.funds);\r\n    const fundId = selectedFund?.id ?? '';\r\n    const fundName = selectedFund?.shortName ?? '';\r\n    const [transfered, setTransfered] = useState<boolean>(false);\r\n    const [pcoId, setPcoId] = useState<string>('');\r\n    const { pcos, selectedPCO } = useSelector((state: RootState) => state.pcos);\r\n    const [investmentType, setInvestmentType] = useState<string>('');\r\n    const [amountInvested, setAmountInvested] = useState<any>(0);\r\n    const [selectedPCOLocal, setSelectedPCOLocal] = useState<any>(pcos && newInvestment ? pcos.filter(x => x.id === newInvestment?.pcoId)[0] ?? null : null)\r\n    const [isFirstOpen, setIsFirstOpen] = useState<boolean>(true);\r\n\r\n    const onValueChange = (value: string, field: string) => {\r\n        switch (field) {\r\n            case 'pcoId':\r\n                setPcoId(value);\r\n                setSelectedPCOLocal(pcos?.filter(x => x.id === value)[0] ?? null);\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    pcoId: value\r\n                });\r\n                setDisabled(value === '');\r\n                break;\r\n            case 'currency':\r\n                setCurrency(value);\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    currency: value\r\n                });\r\n                setDisabled(value === '' || pcoId === '');\r\n                break;\r\n            case 'investmentType':\r\n                setInvestmentType(value);\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    investmentType: value\r\n                });\r\n                setDisabled(value === '' || pcoId === '');\r\n                break;\r\n            case 'amountInvested':\r\n                setAmountInvested(+value);\r\n                setNewInvestment({\r\n                    ...newInvestment,\r\n                    amountInvested: +value\r\n                });\r\n                setDisabled(+value === 0 || pcoId === '');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const optionLabel = (option: string | PCOSummary) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.pcoName ? option.pcoName : option;\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        dispatch(fetchPCOs());\r\n    }, [dispatch])\r\n\r\n\r\n    useEffect(() => {\r\n        if (newInvestment !== null && newInvestment !== undefined && pcos && isFirstOpen) {\r\n            setSelectedPCOLocal(pcos && newInvestment ? pcos.filter(x => x.id === newInvestment?.pcoId)[0] ?? null : null);\r\n            setAmountInvested(amountValueFormatter(newInvestment.amountInvested ?? 0, ''))\r\n        }\r\n    }, [newInvestment, pcos, isFirstOpen]);\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{ paddingTop: '10px' }}>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label={'Fund'}\r\n                        aria-label=\"baseCapital\"\r\n                        value={fundName}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputProps={{\r\n                            readOnly: true,\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <Autocomplete\r\n                        id={'fundsAutocomplete'}\r\n                        popupIcon={<ExpandMoreIcon />}\r\n                        size={'small'}\r\n                        autoHighlight={true}\r\n                        autoSelect={true}\r\n                        autoComplete={false}\r\n                        classes={classes}\r\n                        sx={{ marginRight: '1em', width: '400px' }}\r\n                        isOptionEqualToValue={(option, value) => option === value}\r\n                        onChange={(e, value: PCOSummary | null) => onValueChange(value ? value.id : '', 'pcoId')}\r\n                        value={selectedPCOLocal ?? undefined}\r\n                        options={pcos && pcos.length > 0 ? pcos.slice().sort(function (a, b) {\r\n                            if (a.id.toLowerCase() < b.id.toLowerCase()) return -1;\r\n                            if (a.id.toLowerCase() > b.id.toLowerCase()) return 1;\r\n                            return 0;\r\n                        }) : []}\r\n                        getOptionLabel={(option) => optionLabel(option).toString()}\r\n                        renderInput={(params: AutocompleteRenderInputParams) => {\r\n                            params.InputProps.className = autocompleteInputClasses.textInput;\r\n                            return <TextField {...params}\r\n                                className={autocompleteInputClasses.autocomplete}\r\n                                variant=\"outlined\"\r\n                                autoComplete=\"off\"\r\n                                label={'PCO'}\r\n                                type={'text'}\r\n                            />;\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"baseCapital\"\r\n                        value={amountInvested}\r\n                        label={'Amount'}\r\n                        onChange={(e) => onValueChange(e.target.value, 'amountInvested')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default FundPCOsEditContentComponent;","import { Autocomplete, AutocompleteRenderInputParams, Fab, FormControlLabel, Grid, IconButton, InputAdornment, Switch, TextField, Tooltip, Typography, Box } from '@mui/material';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Theme } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport { GridApi } from 'ag-grid-community';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { CountryList, CurrencyList, NewCommitment } from '../../../../../models/shared/sharedModels';\r\nimport { EditExit, LP } from '../../../../../models/lps/lpModels';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../../redux/slices/rootSlice';\r\nimport { useAppDispatch } from '../../../../../redux/store';\r\nimport { fetchLPs } from '../../../../../redux/thunks/lpThunk';\r\nimport { FundSummary } from '../../../../../models/funds/fundModels';\r\nimport { setLPs, setSelectedLP } from '../../../../../redux/slices/lps/lpsSlice';\r\nimport { setSelectedFund } from '../../../../../redux/slices/funds/fundsSlice';\r\nimport { InvestmentType, NewTransaction, SecurityType, Transaction, TransactionType } from '../../../../../models/transactions/transactionsModels';\r\nimport { setSelectedPCO } from '../../../../../redux/slices/pcos/pcosSlice';\r\nimport { PCOSummary } from '../../../../../models/pcos/pcoModels';\r\nimport { fetchFunds } from '../../../../../redux/thunks/fundThunk';\r\nimport { fetchPCOs } from '../../../../../redux/thunks/pcoThunk';\r\nimport { LPDistributionTypes, NewDistribution } from '../../../../../models/distributions/distributionsModels';\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { amountValueFormatter } from '../../../../../helpers/app';\r\nimport moment from 'moment';\r\nimport { DatePicker } from '@mui/x-date-pickers';\r\n\r\nconst autocompleteInputStyles = makeStyles((theme: Theme) => ({\r\n    autocomplete: {\r\n        'borderRadius': 5,\r\n        'backgroundColor': theme.palette.background.paper,\r\n        '& input::placeholder': {\r\n            color: theme.palette.text.primary\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: theme.palette.text.primary,\r\n            opacity: 0.8\r\n        }\r\n    },\r\n    textInput: {\r\n        'color': theme.palette.text.primary,\r\n        'fontWeight': 800,\r\n        'fontFamily': 'Raleway',\r\n        height: '2.2em',\r\n        /* 'height': '2.5em', */\r\n        'fontSize': 10,\r\n        '& .MuiIconButton-label': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chart: {\r\n            flex: 1,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n        },\r\n        fabIcon: {\r\n            marginLeft: 10,\r\n            alignSelf: 'center',\r\n        },\r\n        searchBox: {\r\n            width: '400px',\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        switchField: {\r\n            '& .MuiFormControlLabel-label': {\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        datePickers: {\r\n            width: '100%',\r\n            flex: 1,\r\n        },\r\n        textField: {\r\n            width: '400px',\r\n            backgroundColor: theme.palette.background.paper,\r\n            borderColor: theme.palette.text.primary,\r\n            color: theme.palette.text.primary,\r\n            borderRadius: 5,\r\n            '& .MuiSvgIcon-root':\r\n            {\r\n                color: theme.palette.text.primary\r\n            },\r\n\r\n            '& label': {\r\n                '&.Mui-focused': {\r\n                    color: theme.palette.text.primary\r\n                }\r\n            },\r\n        },\r\n        textFildsSmall: {\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        inputRoot: {\r\n            height: '1em',\r\n            'borderRadius': 5,\r\n            'backgroundColor': 'transparent',\r\n            /*         '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'black'\r\n                    },*/\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.primary.main\r\n            },\r\n            /*  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'black'\r\n              }, */\r\n            '& .MuiChip-root': {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: 'transparent',\r\n                borderRadius: 5\r\n            },\r\n            '& .MuiChip-deleteIconSmall': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        option: {\r\n            'background': theme.palette.background.paper,\r\n            '&:hover': {\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 400,\r\n                fontFamily: 'Raleway'\r\n            },\r\n            '&[aria-selected=\"true\"]': {\r\n                background: theme.palette.background.paper,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 700,\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        popupIndicator: {\r\n            '&.MuiIconButton-root': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        clearIndicator: {\r\n            color: theme.palette.text.primary\r\n        },\r\n    }),\r\n);\r\nconst LPTypes = [\r\n    \"Corporate\",\r\n    \"General Partner\",\r\n    \"Individual\",\r\n    \"Institutional\",\r\n];\r\n\r\ninterface AddNewFundExitComponentProps {\r\n    disabled: boolean,\r\n    setDisabled: any,\r\n    newDistribution: EditExit | null,\r\n    setNewDistribution: (newState: any) => void\r\n}\r\n\r\nconst FundsExitEditContentComponent = ({ setDisabled, disabled, newDistribution, setNewDistribution }: AddNewFundExitComponentProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const autocompleteInputClasses = autocompleteInputStyles();\r\n    const theme = useTheme();\r\n    const [amountGained, setAmountGained] = useState<any>(0);\r\n    const [currency, setCurrency] = useState<string>('');\r\n    const [pcoId, setPCOId] = useState<string>('');\r\n    const { pcos, selectedPCO } = useSelector((state: RootState) => state.pcos);\r\n    const { funds, selectedFund } = useSelector((state: RootState) => state.funds);\r\n    const { lps, selectedLP } = useSelector((state: RootState) => state.lps);\r\n    const [transType, setTransType] = useState<string>('');\r\n    const [investmentType, setInvestmentType] = useState<string>('');\r\n    const [securityType, setSecurityType] = useState<string>('');\r\n    const fundId = selectedFund?.id ?? '';\r\n    const fundName = selectedFund?.shortName ?? '';\r\n    const [selectedPCOLocal, setSelectedPCOLocal] = useState<any>(pcos && newDistribution ? pcos.filter(x => x.id === newDistribution?.pcoId)[0] ?? null : null);\r\n    const [isFirstOpen, setIsFirstOpen] = useState<boolean>(true);\r\n    const [date, setDateExit] = useState<string>(newDistribution?.date ?? '');\r\n\r\n    const onValueChange = (value: string, field: string) => {\r\n        switch (field) {\r\n            case 'pcoId':\r\n                setPCOId(value);\r\n                setSelectedPCOLocal(pcos?.filter(x => x.id === value)[0] ?? null)\r\n                setNewDistribution({\r\n                    ...newDistribution,\r\n                    pcoId: value\r\n                });\r\n                setDisabled(value === '');\r\n                break;\r\n            case 'transType':\r\n                setTransType(value);\r\n                setNewDistribution({\r\n                    ...newDistribution,\r\n                    transType: value\r\n                });\r\n                setDisabled(value === '' || pcoId === '');\r\n                break;\r\n            case 'amountGained':\r\n                setAmountGained(+value);\r\n                setNewDistribution({\r\n                    ...newDistribution,\r\n                    amountGained: +value\r\n                });\r\n                setDisabled(+value === 0 || pcoId === '');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const optionLabel = (option: string | PCOSummary) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.pcoName ? option.pcoName : option;\r\n        }\r\n    };\r\n\r\n    const optionLabelFund = (option: string | FundSummary) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.fundName ? option.fundName : option;\r\n        }\r\n    };\r\n\r\n    const optionLabelLP = (option: string | LP) => {\r\n        if (typeof (option) === 'string') {\r\n            return option;\r\n        } else {\r\n            return option.name ? option.name : option;\r\n        }\r\n    };\r\n\r\n    const onDateChange = (value: any, field: string) => {\r\n        if (field === 'date') {\r\n            setDateExit(value);\r\n            if (newDistribution) {\r\n                setNewDistribution({\r\n                    ...newDistribution,\r\n                    date: value\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchFunds());\r\n        dispatch(fetchPCOs());\r\n        dispatch(fetchLPs());\r\n    }, [dispatch])\r\n\r\n\r\n    useEffect(() => {\r\n        if (newDistribution !== null && newDistribution !== undefined && pcos && isFirstOpen) {\r\n            setSelectedPCOLocal(pcos && newDistribution ? pcos.filter(x => x.id === newDistribution?.pcoId)[0] ?? null : null);\r\n            setAmountGained(amountValueFormatter(newDistribution.amountGained ?? 0, ''));\r\n            setDateExit(newDistribution.date ?? '');\r\n        }\r\n    }, [newDistribution, pcos, isFirstOpen]);\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{ paddingTop: '10px' }}>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label={'Fund'}\r\n                        aria-label=\"baseCapital\"\r\n                        value={fundName}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputProps={{\r\n                            readOnly: true,\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <Autocomplete\r\n                        id={'fundsAutocomplete'}\r\n                        popupIcon={<ExpandMoreIcon />}\r\n                        size={'small'}\r\n                        autoHighlight={true}\r\n                        autoSelect={true}\r\n                        autoComplete={false}\r\n                        classes={classes}\r\n                        sx={{ marginRight: '1em', width: '400px' }}\r\n                        isOptionEqualToValue={(option, value) => option === value}\r\n                        onChange={(e, value: PCOSummary | null) => onValueChange(value ? value.id : '', 'pcoId')}\r\n                        value={selectedPCOLocal ?? undefined}\r\n                        options={pcos && pcos.length > 0 ? pcos.slice().sort(function (a, b) {\r\n                            if (a.id.toLowerCase() < b.id.toLowerCase()) return -1;\r\n                            if (a.id.toLowerCase() > b.id.toLowerCase()) return 1;\r\n                            return 0;\r\n                        }) : []}\r\n                        getOptionLabel={(option) => optionLabel(option).toString()}\r\n                        renderInput={(params: AutocompleteRenderInputParams) => {\r\n                            params.InputProps.className = autocompleteInputClasses.textInput;\r\n                            return <TextField {...params}\r\n                                className={autocompleteInputClasses.autocomplete}\r\n                                variant=\"outlined\"\r\n                                autoComplete=\"off\"\r\n                                label={'PCO'}\r\n                                type={'text'}\r\n                            />;\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item >\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '400px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <DatePicker\r\n                        className={classes.datePickers}\r\n                        inputFormat={'dd/MM/yyyy'}\r\n                        disableFuture\r\n                        value={date ? moment(new Date(date)).format('DD MMM YYYY') : null}\r\n                        onChange={(e) => onDateChange(e ?? '', 'date')}\r\n                        disableHighlightToday\r\n                        renderInput={(props: any) =>\r\n                            <TextField {...props}\r\n                                label={'Date Exit'}\r\n                                variant={'outlined'}\r\n                                size={'small'}\r\n                                className={classes.textField}\r\n                                InputLabelProps={{\r\n                                    sx: {\r\n                                        fontSize: 'small'\r\n                                    }\r\n                                }}\r\n                            />}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"baseCapital\"\r\n                        value={amountGained}\r\n                        label={'Amount'}\r\n                        onChange={(e) => onValueChange(e.target.value, 'amountGained')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default FundsExitEditContentComponent;","import React, { ReactElement, Ref, useState } from 'react';\r\nimport { TransitionProps } from \"@mui/material/transitions\";\r\nimport { Button, darken, Dialog, DialogActions, DialogContent, DialogTitle, Divider, Grid, IconButton, Slide, Theme, Typography, useTheme } from \"@mui/material\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useAppDispatch } from '../../../redux/store';\r\nimport { RootState } from '../../../redux/slices/rootSlice';\r\nimport { setEditChildDiaogOpen, setEditDiaogOpen } from '../../../redux/slices/appSlice';\r\nimport EditRoundedIcon from '@mui/icons-material/EditRounded';\r\nimport { FundSummary, NewFund } from '../../../models/funds/fundModels';\r\nimport { EditInvestment, NewInvestment, NewPCO, PCOSummary } from '../../../models/pcos/pcoModels';\r\nimport { EditExit, LP, NewLP } from '../../../models/lps/lpModels';\r\nimport { EditCommitment, NewCommitment } from '../../../models/shared/sharedModels';\r\nimport { NewTransaction } from '../../../models/transactions/transactionsModels';\r\nimport { NewCashCall } from '../../../models/cashCalls/cashCallsModels';\r\nimport { NewDistribution } from '../../../models/distributions/distributionsModels';\r\nimport LPBasicEditContentComponent from './lpsEditDialogContents/basic/LPBasicEditContent';\r\nimport { makeStyles } from '@mui/styles';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\r\nimport FundBasicEditContentComponent from './fundsEditDialogContents/basic/FundBasicEditContent';\r\nimport PCOBasicEditContentComponent from './pcosEditDialogContents/basic/PCOBasicEditContent';\r\nimport PCOInvestmentEditContentComponent from './pcosEditDialogContents/basic/commitmnetsChildEdit/PCOInvestmentEditContent';\r\nimport PCOLPEditComponent from './pcosEditDialogContents/basic/commitmnetsChildEdit/PCOLPEditContent';\r\nimport PCOFundInvestmentEditComponent from './pcosEditDialogContents/basic/commitmnetsChildEdit/PCOFundCInvestmentEditContent';\r\nimport LPCommitmentEditContentComponent from './lpsEditDialogContents/commitmentsChildEdit/LPCommitmentEditContent';\r\nimport LPFundsEditContentComponent from './lpsEditDialogContents/commitmentsChildEdit/LPFundsEditContent';\r\nimport LPPCOsEditContentComponent from './lpsEditDialogContents/commitmentsChildEdit/LPPCOsEditContent';\r\nimport LPExitsEditContentCmponent from './lpsEditDialogContents/commitmentsChildEdit/LPExitsEditContent';\r\nimport FundCommitmentEditContentComponent from './fundsEditDialogContents/commitmentsChildEdit/FundCommitmentsEditContent';\r\nimport FundLPsEditContentComponent from './fundsEditDialogContents/commitmentsChildEdit/FundLPsEditContent';\r\nimport FundPCOsEditContentComponent from './fundsEditDialogContents/commitmentsChildEdit/FundPCOsEditContent';\r\nimport FundExitsStepContentTable from './fundsEditDialogContents/basic/FundExitsStepContentTable';\r\nimport FundsExitEditContentComponent from './fundsEditDialogContents/commitmentsChildEdit/FundExitsEditContent';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.default\r\n    },\r\n    nextBtn: {\r\n        'marginRight': theme.spacing(1),\r\n        'backgroundColor': '#7F201C',\r\n        'color': 'white',\r\n        'borderRadius': 0,\r\n        'borderColor': '#7F201C',\r\n        'fontSize': 13,\r\n        'textTransform': 'none',\r\n        'fontFamily': 'IBM Plex Sans',\r\n        '&:hover': {\r\n            backgroundColor: '#FF563F',\r\n            borderColor: '#FF563F',\r\n            color: 'white'\r\n        }\r\n\r\n    },\r\n    backBtn: {\r\n        'fontFamily': 'IBM Plex Sans',\r\n        'textTransform': 'none',\r\n        'fontSize': 13,\r\n        'height': '2em',\r\n        'marginRight': '3.5em',\r\n        'color': darken(theme.palette.text.primary, .2),\r\n        '&:hover': {\r\n            color: theme.palette.text.primary,\r\n            backgroundColor: theme.palette.background.default,\r\n            textDecorationLine: 'underline'\r\n\r\n        }\r\n    },\r\n    actions: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginBottom: 20,\r\n        marginTop: '2em'\r\n    },\r\n    stepper: {\r\n        backgroundColor: theme.palette.background.default,\r\n        cursor: 'pointer'\r\n    }\r\n}));\r\n\r\nconst transitionMethod = (props: TransitionProps & { children: ReactElement<any, any> }, ref: Ref<unknown>) => {\r\n    // eslint-disable-next-line react/jsx-props-no-spreading\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n};\r\n\r\nconst Transition = React.forwardRef(transitionMethod);\r\n\r\nconst getLPSteps = () => {\r\n    return ['General Information', 'Commitments', 'LP Financials', 'KPIs & IRR'];\r\n};\r\n\r\nconst getFundSteps = () => {\r\n    return ['General Information', 'Commitments', 'Fund Financials', 'KPIs & IRR'];\r\n};\r\n\r\nconst getStepsPCO = () => {\r\n    return ['General Information', 'Investments', 'PCO Financials'];\r\n};\r\n\r\ninterface EditChildDialogComponentProps {\r\n    pageName: string,\r\n    pageTitle: string,\r\n    open: boolean,\r\n}\r\n\r\nexport const EditChildDialogComponent = ({ open, pageName, pageTitle }: EditChildDialogComponentProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const { editChildDialogOpen } = useSelector((state: RootState) => state.app);\r\n    const [disabled, setDisabled] = useState<boolean>(false);\r\n    const theme = useTheme()\r\n    const [newFund, setNewFund] = useState<NewFund | null>(null);\r\n    const [newLP, setNewLP] = useState<NewLP | null>(null);\r\n    const [newPCO, setNewPCO] = useState<NewPCO | null>(null);\r\n    const [newCommitment, setNewCommitment] = useState<NewCommitment | null>(null);\r\n    const [newTransaction, setNewTransaction] = useState<NewTransaction | null>(null);\r\n    const [newCashCall, setNewCashCall] = useState<NewCashCall | null>(null);\r\n    const [newDistribution, setNewDistribution] = useState<NewDistribution | null>(null);\r\n    const stepsLP: string[] = getLPSteps();\r\n    const stepsFund: string[] = getFundSteps();\r\n    const stepsPCO: string[] = getStepsPCO();\r\n    const [activeStepLP, setActiveStepLP] = useState<number>(0);\r\n    const [activeStepFund, setActiveStepFund] = useState<number>(0);\r\n    const [activeStepPCO, setActiveStepPCO] = useState<number>(0);\r\n    const { selectedFund } = useSelector((state: RootState) => state.funds);\r\n    const [selectedFundLocal, setSelectedFundLocal] = useState<FundSummary | null>(selectedFund ?? null)\r\n    const { selectedLP, selectedCommitment, selectedExit } = useSelector((state: RootState) => state.lps);\r\n    const [selectedLPLocal, setSelectedLPLocal] = useState<LP | null>(selectedLP ?? null);\r\n    const { selectedPCO, selectedInvestment } = useSelector((state: RootState) => state.pcos);\r\n    const [selectedPCOLocal, setSelectedPCOLocal] = useState<PCOSummary | null>(selectedPCO ?? null);\r\n    const [selectedInvetsmentLocal, setSelecetdInvestmentLocal] = useState<EditInvestment | null>(selectedInvestment ? selectedInvestment : null);\r\n    const [selectedCommitmentLocal, setSelectedCommitmentLocal] = useState<EditCommitment | null>(selectedCommitment ? selectedCommitment : null);\r\n    const [selectedExitLocal, setSelectedExitLocal] = useState<EditExit | null>(selectedExit ? selectedExit : null);\r\n\r\n    /**\r\n     * Handles the closing of the dialog\r\n     */\r\n    const handleClose = () => {\r\n        setSelectedFundLocal(selectedFund);\r\n        setSelectedLPLocal(selectedLP);\r\n        setSelectedPCOLocal(selectedPCO);\r\n        setActiveStepLP(0);\r\n        setActiveStepFund(0);\r\n        setActiveStepPCO(0);\r\n        dispatch(setEditChildDiaogOpen(false));\r\n    };\r\n\r\n    const handleEditBtnClick = () => {\r\n        let valid = false;\r\n        if (pageName === 'fundsOverview') {\r\n            valid = newFund !== null && newFund.fundName !== '' && newFund.shortName !== '' && newFund.country !== '' && newFund.type !== '' && newFund.currency !== '';\r\n        } else if (pageName === 'lpsOverview') {\r\n            valid = newLP !== null && newLP.name !== '' && newLP.shortName !== '' && newLP.city !== '' && newLP.country !== '' && newLP.type !== '';\r\n        } else if (pageName === 'pcosOverview') {\r\n            valid = newPCO !== null && newPCO.pcoName !== '' && newPCO.shortName !== '' && newPCO.country !== '' && newPCO.sector !== '' && newPCO.currency !== '';\r\n        } else if (pageName === 'commitments') {\r\n            valid = newCommitment !== null && newCommitment.lpId !== '' && newCommitment.fundId !== '' && newCommitment.fundCurrency !== '' && newCommitment.committedAmount !== 0\r\n        } else if (pageName === 'transactions') {\r\n            valid = newTransaction !== null && newTransaction.pcoId !== '' && newTransaction.fundId !== '' && newTransaction.transType !== '' && newTransaction.securityType !== '' && newTransaction.amountFundCurrency !== 0 && (newTransaction.transType === 'Investment' && newTransaction.investmentType !== '')\r\n        }\r\n    }\r\n\r\n    /**\r\n* Event triggered when click on next arrow\r\n*/\r\n    const handleNext = (pageName: string) => {\r\n        if (pageName === 'lpBasic') {\r\n            setActiveStepLP((prevActiveStep) => prevActiveStep + 1);\r\n        } else if (pageName === 'fundBasic') {\r\n            setActiveStepFund((prevActiveStep) => prevActiveStep + 1);\r\n        } else if (pageName === 'pcoBasic') {\r\n            setActiveStepPCO((prevActiveStep) => prevActiveStep + 1);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event triggered when click on back arrow\r\n     */\r\n    const handleBack = (pageName: string) => {\r\n        if (pageName === 'lpBasic') {\r\n            setActiveStepLP((prevActiveStep) => prevActiveStep - 1);\r\n        } else if (pageName === 'fundBasic') {\r\n            setActiveStepFund((prevActiveStep) => prevActiveStep - 1);\r\n        } else if (pageName === 'pcoBasic') {\r\n            setActiveStepPCO((prevActiveStep) => prevActiveStep - 1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog open={editChildDialogOpen} TransitionComponent={Transition}\r\n            maxWidth={'xs'}\r\n            fullWidth\r\n            aria-label={'dialog extra data client'}>\r\n            <DialogTitle sx={{\r\n                cursor: 'move',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n                backgroundColor: theme.palette.mode === 'light' ? '#F5F5F5' : '#06050A'\r\n            }} id=\"form-dialog-client-data\">\r\n                <Grid container sx={{ display: 'flex', flex: 1, justifyContent: 'flex-start', height: '100%', flexDirection: 'column' }}>\r\n                    <Grid item xs={12} sx={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        alignItems: 'center'\r\n                    }}>\r\n                        <Typography style={{\r\n                            fontSize: 18,\r\n                            fontWeight: 600\r\n                        }}>{pageTitle}</Typography>\r\n                        <IconButton onClick={handleClose}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Divider sx={{ width: '100%' }} />\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </DialogTitle>\r\n            <DialogContent sx={{ display: 'flex', flex: 1, justifyContent: 'flex-start', height: '100%', backgroundColor: theme.palette.mode === 'light' ? '#F5F5F5' : '#06050A' }}>\r\n                {open && pageName === 'investments' ? <PCOInvestmentEditContentComponent disabled={disabled} setDisabled={setDisabled} newInvestment={selectedInvetsmentLocal} setNewInvestment={setSelecetdInvestmentLocal} />\r\n                    : pageName === 'pcoFunds' ? <PCOFundInvestmentEditComponent disabled={disabled} setDisabled={setDisabled} newInvestment={selectedInvetsmentLocal} setNewInvestment={setSelecetdInvestmentLocal} />\r\n                        : pageName === 'pcoLPs' ? <PCOLPEditComponent disabled={disabled} setDisabled={setDisabled} newInvestment={selectedInvetsmentLocal} setNewInvestment={setSelecetdInvestmentLocal} />\r\n                            : pageName === 'lpCommitments' ? <LPCommitmentEditContentComponent disabled={disabled} setDisabled={setDisabled} newCommitment={selectedCommitmentLocal} setNewCommitment={setSelectedCommitmentLocal} />\r\n                                : pageName === 'lpFunds' ? <LPFundsEditContentComponent disabled={disabled} setDisabled={setDisabled} newCommitment={selectedCommitmentLocal} setNewCommitment={setSelectedCommitmentLocal} />\r\n                                    : pageName === 'lpPCOs' ? <LPPCOsEditContentComponent disabled={disabled} setDisabled={setDisabled} newInvestment={selectedInvetsmentLocal} setNewInvestment={setSelecetdInvestmentLocal} />\r\n                                        : pageName === 'lpExits' ? <LPExitsEditContentCmponent disabled={disabled} setDisabled={setDisabled} newDistribution={selectedExitLocal} setNewDistribution={setSelectedExitLocal} />\r\n                                            : pageName === 'fundCommitments' ? <FundCommitmentEditContentComponent disabled={disabled} setDisabled={setDisabled} newCommitment={selectedCommitmentLocal} setNewCommitment={setSelectedCommitmentLocal} />\r\n                                                : pageName === 'fundLPs' ? <FundLPsEditContentComponent disabled={disabled} setDisabled={setDisabled} newCommitment={selectedCommitmentLocal} setNewCommitment={setSelectedCommitmentLocal} />\r\n                                                    : pageName === 'fundPCOs' ? <FundPCOsEditContentComponent disabled={disabled} setDisabled={setDisabled} newInvestment={selectedInvetsmentLocal} setNewInvestment={setSelecetdInvestmentLocal} />\r\n                                                        : pageName==='fundExits'? <FundsExitEditContentComponent disabled={disabled} setDisabled={setDisabled} newDistribution={selectedExitLocal} setNewDistribution={setSelectedExitLocal} />\r\n                                                        : null}\r\n            </DialogContent>\r\n            <DialogActions sx={{ backgroundColor: theme.palette.mode === 'light' ? '#F5F5F5' : '#06050A' }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    sx={{ textTransform: 'none' }}\r\n                    startIcon={<EditRoundedIcon />}\r\n                    disabled={disabled}\r\n                    onClick={handleEditBtnClick}\r\n                >\r\n                    Edit\r\n                </Button>\r\n\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n","import { Accordion, AccordionDetails, AccordionSummary, Autocomplete, AutocompleteRenderInputParams, Box, Divider, Fab, Grid, IconButton, InputAdornment, TextField, Tooltip, Typography } from '@mui/material';\r\nimport { useCallback, useState } from 'react';\r\nimport { Theme } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport { GridApi } from 'ag-grid-community';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { CountryList } from '../../../../../models/shared/sharedModels';\r\nimport { LP, NewLP } from '../../../../../models/lps/lpModels';\r\nimport { darken, useTheme } from \"@mui/material/styles\";\r\nimport { DatePicker } from '@mui/x-date-pickers';\r\nimport { minHeight } from '@mui/system';\r\nimport AddRoundedIcon from '@mui/icons-material/AddRounded';\r\nimport LPCommitmentsStepContentTable from './LPCommitmentsStepContentTable';\r\nimport LPFundsStepContentTable from './LPFundsStepContentTable';\r\nimport LPPCOsStepContentTable from './LPPCOsStepContentTable';\r\nimport LPExitsStepContentTable from './LPExitsStepContentTable';\r\nimport { AddChildDialogComponent } from '../../../addPopup/AddChildDialog';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../../redux/slices/rootSlice';\r\nimport { EditChildDialogComponent } from '../../EditChildDialog';\r\n\r\nconst autocompleteInputStyles = makeStyles((theme: Theme) => ({\r\n    autocomplete: {\r\n        'borderRadius': 5,\r\n        'backgroundColor': theme.palette.background.paper,\r\n        '& input::placeholder': {\r\n            color: theme.palette.text.primary\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: theme.palette.text.primary,\r\n            opacity: 0.8\r\n        }\r\n    },\r\n    textInput: {\r\n        'color': theme.palette.text.primary,\r\n        'fontWeight': 800,\r\n        'fontFamily': 'Raleway',\r\n        height: '2.2em',\r\n        /* 'height': '2.5em', */\r\n        'fontSize': 10,\r\n        '& .MuiIconButton-label': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chart: {\r\n            flex: 1,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n        },\r\n        fabIcon: {\r\n            marginLeft: 10,\r\n            alignSelf: 'center',\r\n        },\r\n        searchBox: {\r\n            width: '435px',\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        datePickers: {\r\n            width: '100%',\r\n            flex: 1,\r\n        },\r\n        textField: {\r\n            width: '435px',\r\n            backgroundColor: theme.palette.background.paper,\r\n            borderColor: theme.palette.text.primary,\r\n            color: theme.palette.text.primary,\r\n            borderRadius: 5,\r\n            '& .MuiSvgIcon-root':\r\n            {\r\n                color: theme.palette.text.primary\r\n            },\r\n\r\n            '& label': {\r\n                '&.Mui-focused': {\r\n                    color: theme.palette.text.primary\r\n                }\r\n            },\r\n        },\r\n        textFildsSmall: {\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        inputRoot: {\r\n            height: '1em',\r\n            'borderRadius': 5,\r\n            'backgroundColor': 'transparent',\r\n            /*         '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'black'\r\n                    },*/\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.primary.main\r\n            },\r\n            /*  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'black'\r\n              }, */\r\n            '& .MuiChip-root': {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: 'transparent',\r\n                borderRadius: 5\r\n            },\r\n            '& .MuiChip-deleteIconSmall': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        option: {\r\n            'background': theme.palette.background.paper,\r\n            '&:hover': {\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 400,\r\n                fontFamily: 'Raleway'\r\n            },\r\n            '&[aria-selected=\"true\"]': {\r\n                background: theme.palette.background.paper,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 700,\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        popupIndicator: {\r\n            '&.MuiIconButton-root': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        clearIndicator: {\r\n            color: theme.palette.text.primary\r\n        },\r\n    }),\r\n);\r\nconst LPTypes = [\r\n    \"Corporate\",\r\n    \"General Partner\",\r\n    \"Individual\",\r\n    \"Institutional\",\r\n];\r\n\r\ninterface CommitmentsStepContentProps {\r\n    selectedLP: LP | null,\r\n    setSelectedLP: React.Dispatch<React.SetStateAction<LP | null>>,\r\n    disabled: boolean,\r\n    setDisabled: any\r\n}\r\n\r\nconst CommitmentsStepContentComponent = ({ selectedLP, setSelectedLP, disabled, setDisabled }: CommitmentsStepContentProps) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [commitmentsExpanded, setCommitmentsExpanded] = useState<boolean>(false);\r\n    const [fundsExpanded, setFundsExpanded] = useState<boolean>(false);\r\n    const [pcosExpanded, setPCOsExpanded] = useState<boolean>(false);\r\n    const [exitsExpanded, setExitsExpanded] = useState<boolean>(false);\r\n    const [addChildDialogOpen, setAddChildDialogOpen] = useState<boolean>(false);\r\n    const [pageName, setPageName] = useState<string>('');\r\n    const { editChildDialogOpen } = useSelector((state: RootState) => state.app);\r\n    const [editPageName, setEditPageName] = useState<string>('');\r\n\r\n    const handleAccordionExp = (expanded: boolean, cardName: string) => {\r\n        if (cardName === 'commitments') {\r\n            setCommitmentsExpanded(!commitmentsExpanded);\r\n        } else if (cardName === 'funds') {\r\n            setFundsExpanded(!fundsExpanded);\r\n        } else if (cardName === 'pcos') {\r\n            setPCOsExpanded(!pcosExpanded);\r\n        } else {\r\n            setExitsExpanded(!exitsExpanded);\r\n        }\r\n    };\r\n\r\n    const handleOpenChildDialog = (accordion: string) => {\r\n        setPageName(accordion);\r\n        setAddChildDialogOpen(!addChildDialogOpen);\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{ flex: 1, width: '100%', display: 'flex', justifyContent: 'start', marginTop: '0.2em' }}>\r\n            <Grid item xs={12} md={12} sx={{ display: 'flex', justifyContent: 'space-between', flex: 1, width: '100%', flexDirection: 'row', minWidth: '400px' }}>\r\n                <Grid item xs={10}>\r\n                    <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '390px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                        <Accordion\r\n                            key={`card-commitments`}\r\n                            expanded={commitmentsExpanded}\r\n                            onChange={(event, expanded: boolean) => handleAccordionExp(expanded, 'commitments')}\r\n                            sx={{ marginBottom: '0.5em', backgroundColor: theme.palette.background.paper, width: '390px', borderLeft: `1px solid rgba(133, 133, 133,0.5)`, borderRight: `1px solid rgba(133, 133, 133,0.5)`, borderTop: `1px solid rgba(133, 133, 133,0.5)`, borderBottom: 'none' }}\r\n                        >\r\n                            <AccordionSummary\r\n                                sx={{ height: '40px' }}\r\n                                /* sx={{\r\n                                    'cursor': 'pointer',\r\n                                    'width': '100%',\r\n                                    'minHeight': '68px !important',\r\n                                    'paddingTop': 0,\r\n                                    'backgroundColor': theme.palette.background.paper,\r\n                                   \r\n                                }} */\r\n                                expandIcon={\r\n                                    <IconButton>\r\n                                        <ExpandMoreIcon\r\n                                            sx={{ pointerEvents: 'auto', cursor: 'pointer' }} />\r\n                                    </IconButton>\r\n                                }\r\n                            >\r\n                                <Grid container\r\n                                    sx={{ display: 'flex', flex: 1, height: '100%', width: '100%', alignItems: 'center' }}>\r\n                                    <Grid container>\r\n                                        <Typography variant='body1' sx={{ color: theme.palette.text.primary, fontWeight: 600 }}>Commitments</Typography>\r\n                                    </Grid>\r\n                                    <Grid container>\r\n                                        <Typography variant='body2' sx={{ color: theme.palette.mode === 'light' ? 'rgba(69, 69, 69, 0.7)' : darken(theme.palette.text.primary, 0.4), fontWeight: 400, fontSize: '14px' }}>{`${selectedLP?.commitments?.length} Commitments`}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails\r\n                                sx={{\r\n                                    backgroundColor: theme.palette.background.paper,\r\n                                    width: '100%', padding: '0.1em', display: 'flex', height: '100%', pointerEvents: 'auto'\r\n                                }}>\r\n                                {commitmentsExpanded && <LPCommitmentsStepContentTable setEditPageName={setEditPageName}/>}\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={2} sx={{ display: 'flex', justifyContent: 'end', flex: 1, marginLeft: '2em', alignItems: 'start', marginTop: '0.6em' }}>\r\n                    <Tooltip title={\"Add a new commitment\"}>\r\n                        <Box\r\n                            sx={{\r\n                                width: '30px',\r\n                                height: '30px',\r\n                                bgcolor: theme.palette.primary.main,\r\n                                color: 'white',\r\n                                borderRadius: '50%',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.4)',\r\n                                transition: 'box-shadow 0.2s ease-in-out',\r\n                                '&:hover': {\r\n                                    cursor: 'pointer',\r\n                                    boxShadow: '0px 6px 12px rgba(0, 0, 0, 0.6)',\r\n                                    backgroundColor: darken(theme.palette.primary.main, 0.2)\r\n                                }\r\n                            }}\r\n                            onClick={() => { handleOpenChildDialog('lpCommitments') }}\r\n                        >\r\n                            <AddRoundedIcon fontSize='small' sx={{ height: 20, width: 20 }} />\r\n                        </Box>\r\n                        {/* <span>\r\n                        <Fab\r\n                            color={'primary'}\r\n                            size=\"small\"\r\n                            sx={{ boxShadow: 'none', height:10,width:30 }}\r\n                            aria-label=\"AddBtn\"\r\n                            onFocus={(e: any) => (e.target.blur())}\r\n                            className={classes.fabIcon}>\r\n                            <AddRoundedIcon  fontSize='small' sx={{height:10,width:10}}/>\r\n                        </Fab>\r\n                    </span> */}\r\n                    </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} md={12} sx={{ display: 'flex', justifyContent: 'space-between', flex: 1, width: '100%', flexDirection: 'row', minWidth: '400px' }}>\r\n                <Grid item xs={10}>\r\n                    <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '390px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                        <Accordion\r\n                            key={`card-funds`}\r\n                            expanded={fundsExpanded}\r\n                            onChange={(event, expanded: boolean) => handleAccordionExp(expanded, 'funds')}\r\n                            sx={{ marginBottom: '0.5em', backgroundColor: theme.palette.background.paper, width: '390px', borderLeft: `1px solid rgba(133, 133, 133,0.5)`, borderRight: `1px solid rgba(133, 133, 133,0.5)`, borderTop: `1px solid rgba(133, 133, 133,0.5)`, borderBottom: 'none' }}\r\n                        >\r\n                            <AccordionSummary\r\n                                sx={{ height: '40px' }}\r\n                                /* sx={{\r\n                                    'cursor': 'pointer',\r\n                                    'width': '100%',\r\n                                    'minHeight': '68px !important',\r\n                                    'paddingTop': 0,\r\n                                    'backgroundColor': theme.palette.background.paper,\r\n                                   \r\n                                }} */\r\n                                expandIcon={\r\n                                    <IconButton>\r\n                                        <ExpandMoreIcon\r\n                                            sx={{ pointerEvents: 'auto', cursor: 'pointer' }} />\r\n                                    </IconButton>\r\n                                }\r\n                            >\r\n                                <Grid container\r\n                                    sx={{ display: 'flex', flex: 1, height: '100%', width: '100%', alignItems: 'center' }}>\r\n                                    <Grid container>\r\n                                        <Typography variant='body1' sx={{ color: theme.palette.text.primary, fontWeight: 600 }}>Funds</Typography>\r\n                                    </Grid>\r\n                                    <Grid container>\r\n                                        <Typography variant='body2' sx={{ color: theme.palette.mode === 'light' ? 'rgba(69, 69, 69, 0.7)' : darken(theme.palette.text.primary, 0.4), fontWeight: 400, fontSize: '14px' }}>{`${selectedLP?.funds?.length} Funds`}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails\r\n                                sx={{\r\n                                    backgroundColor: theme.palette.background.paper,\r\n                                    width: '100%', padding: '0.1em', display: 'flex', height: '100%', pointerEvents: 'auto'\r\n                                }}>\r\n                                {fundsExpanded && <LPFundsStepContentTable setEditPageName={setEditPageName} />}\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={2} sx={{ display: 'flex', justifyContent: 'end', flex: 1, marginLeft: '2em', alignItems: 'start', marginTop: '0.6em' }}>\r\n                    <Tooltip title={\"Add a new commitment to a fund\"}>\r\n                        <Box\r\n                            sx={{\r\n                                width: '30px',\r\n                                height: '30px',\r\n                                bgcolor: theme.palette.primary.main,\r\n                                color: 'white',\r\n                                borderRadius: '50%',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.4)',\r\n                                transition: 'box-shadow 0.2s ease-in-out',\r\n                                '&:hover': {\r\n                                    cursor: 'pointer',\r\n                                    boxShadow: '0px 6px 12px rgba(0, 0, 0, 0.6)',\r\n                                    backgroundColor: darken(theme.palette.primary.main, 0.2)\r\n                                }\r\n                            }}\r\n                            onClick={() => { handleOpenChildDialog('lpFunds') }}\r\n                        >\r\n                            <AddRoundedIcon fontSize='small' sx={{ height: 20, width: 20 }} />\r\n                        </Box>\r\n                    </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} md={12} sx={{ display: 'flex', justifyContent: 'space-between', flex: 1, width: '100%', flexDirection: 'row', minWidth: '400px' }}>\r\n                <Grid item xs={10}>\r\n                    <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '390px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                        <Accordion\r\n                            key={`card-pcos`}\r\n                            expanded={pcosExpanded}\r\n                            onChange={(event, expanded: boolean) => handleAccordionExp(expanded, 'pcos')}\r\n                            sx={{ marginBottom: '0.5em', backgroundColor: theme.palette.background.paper, width: '390px', borderLeft: `1px solid rgba(133, 133, 133,0.5)`, borderRight: `1px solid rgba(133, 133, 133,0.5)`, borderTop: `1px solid rgba(133, 133, 133,0.5)`, borderBottom: 'none' }}\r\n                        >\r\n                            <AccordionSummary\r\n                                sx={{ height: '40px' }}\r\n                                /* sx={{\r\n                                    'cursor': 'pointer',\r\n                                    'width': '100%',\r\n                                    'minHeight': '68px !important',\r\n                                    'paddingTop': 0,\r\n                                    'backgroundColor': theme.palette.background.paper,\r\n                                   \r\n                                }} */\r\n                                expandIcon={\r\n                                    <IconButton>\r\n                                        <ExpandMoreIcon\r\n                                            sx={{ pointerEvents: 'auto', cursor: 'pointer' }} />\r\n                                    </IconButton>\r\n                                }\r\n                            >\r\n                                <Grid container\r\n                                    sx={{ display: 'flex', flex: 1, height: '100%', width: '100%', alignItems: 'center' }}>\r\n                                    <Grid container>\r\n                                        <Typography variant='body1' sx={{ color: theme.palette.text.primary, fontWeight: 600 }}>PCOs</Typography>\r\n                                    </Grid>\r\n                                    <Grid container>\r\n                                        <Typography variant='body2' sx={{ color: theme.palette.mode === 'light' ? 'rgba(69, 69, 69, 0.7)' : darken(theme.palette.text.primary, 0.4), fontWeight: 400, fontSize: '14px' }}>{`${selectedLP?.pcos?.length} PCOs`}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails\r\n                                sx={{\r\n                                    backgroundColor: theme.palette.background.paper,\r\n                                    width: '100%', padding: '0.1em', display: 'flex', height: '100%', pointerEvents: 'auto'\r\n                                }}>\r\n                                {pcosExpanded && <LPPCOsStepContentTable setEditPageName={setEditPageName}/>}\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={2} sx={{ display: 'flex', justifyContent: 'end', flex: 1, marginLeft: '2em', alignItems: 'start', marginTop: '0.6em' }}>\r\n                    <Tooltip title={\"Add a new investment to a PCO\"}>\r\n                        <Box\r\n                            sx={{\r\n                                width: '30px',\r\n                                height: '30px',\r\n                                bgcolor: theme.palette.primary.main,\r\n                                color: 'white',\r\n                                borderRadius: '50%',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.4)',\r\n                                transition: 'box-shadow 0.2s ease-in-out',\r\n                                '&:hover': {\r\n                                    cursor: 'pointer',\r\n                                    boxShadow: '0px 6px 12px rgba(0, 0, 0, 0.6)',\r\n                                    backgroundColor: darken(theme.palette.primary.main, 0.2)\r\n                                }\r\n                            }}\r\n                            onClick={() => { handleOpenChildDialog('lpPCOs') }}\r\n                        >\r\n                            <AddRoundedIcon fontSize='small' sx={{ height: 20, width: 20 }} />\r\n                        </Box>\r\n                    </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} md={12} sx={{ display: 'flex', justifyContent: 'space-between', flex: 1, width: '100%', flexDirection: 'row', minWidth: '400px' }}>\r\n                <Grid item xs={10}>\r\n                    <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '390px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                        <Accordion\r\n                            key={`card-exits`}\r\n                            expanded={exitsExpanded}\r\n                            onChange={(event, expanded: boolean) => handleAccordionExp(expanded, 'exits')}\r\n                            sx={{ marginBottom: '0.5em', backgroundColor: theme.palette.background.paper, width: '390px', borderLeft: `1px solid rgba(133, 133, 133,0.5)`, borderRight: `1px solid rgba(133, 133, 133,0.5)`, borderTop: `1px solid rgba(133, 133, 133,0.5)`, borderBottom: 'none' }}\r\n                        >\r\n                            <AccordionSummary\r\n                                sx={{ height: '40px' }}\r\n                                /* sx={{\r\n                                    'cursor': 'pointer',\r\n                                    'width': '100%',\r\n                                    'minHeight': '68px !important',\r\n                                    'paddingTop': 0,\r\n                                    'backgroundColor': theme.palette.background.paper,\r\n                                   \r\n                                }} */\r\n                                expandIcon={\r\n                                    <IconButton>\r\n                                        <ExpandMoreIcon\r\n                                            sx={{ pointerEvents: 'auto', cursor: 'pointer' }} />\r\n                                    </IconButton>\r\n                                }\r\n                            >\r\n                                <Grid container\r\n                                    sx={{ display: 'flex', flex: 1, height: '100%', width: '100%', alignItems: 'center' }}>\r\n                                    <Grid container>\r\n                                        <Typography variant='body1' sx={{ color: theme.palette.text.primary, fontWeight: 600 }}>Exits</Typography>\r\n                                    </Grid>\r\n                                    <Grid container>\r\n                                        <Typography variant='body2' sx={{ color: theme.palette.mode === 'light' ? 'rgba(69, 69, 69, 0.7)' : darken(theme.palette.text.primary, 0.4), fontWeight: 400, fontSize: '14px' }}>{`${selectedLP?.exits?.length} Exits`}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails\r\n                                sx={{\r\n                                    backgroundColor: theme.palette.background.paper,\r\n                                    width: '100%', padding: '0.1em', display: 'flex', height: '100%', pointerEvents: 'auto'\r\n                                }}>\r\n                                {exitsExpanded && <LPExitsStepContentTable setEditPageName={setEditPageName}/>}\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={2} sx={{ display: 'flex', justifyContent: 'end', flex: 1, marginLeft: '2em', alignItems: 'start', marginTop: '0.6em' }}>\r\n                    <Tooltip title={\"Add a new exit\"}>\r\n                        <Box\r\n                            sx={{\r\n                                width: '30px',\r\n                                height: '30px',\r\n                                bgcolor: theme.palette.primary.main,\r\n                                color: 'white',\r\n                                borderRadius: '50%',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.4)',\r\n                                transition: 'box-shadow 0.2s ease-in-out',\r\n                                '&:hover': {\r\n                                    cursor: 'pointer',\r\n                                    boxShadow: '0px 6px 12px rgba(0, 0, 0, 0.6)',\r\n                                    backgroundColor: darken(theme.palette.primary.main, 0.2)\r\n                                }\r\n                            }}\r\n                            onClick={() => { handleOpenChildDialog('lpExits') }}\r\n                        >\r\n                            <AddRoundedIcon fontSize='small' sx={{ height: 20, width: 20 }} />\r\n                        </Box>\r\n                    </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n            {addChildDialogOpen && <AddChildDialogComponent open={addChildDialogOpen} pageName={pageName} pageTitle={pageName === 'lpCommitments' ? 'Add New Commitment' : pageName === 'lpFunds' ? 'Add New Comitment To Fund' : pageName === 'lpPCOs' ? 'Add New Investment To PCO' : 'Add New Exit'} setDialogOpen={setAddChildDialogOpen} />}\r\n            {editChildDialogOpen && <EditChildDialogComponent open={editChildDialogOpen} pageName={editPageName} pageTitle={editPageName === 'lpCommitments' ? 'Edit Commitment' : editPageName === 'lpFunds' ? 'Edit Commitment To Fund' : editPageName === 'lpPCOs' ? 'Edit Investment To PCO' : 'Edit Exit'}  />}\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default CommitmentsStepContentComponent;","import { Grid, Step, StepConnector, StepContent, StepLabel, Stepper, Typography } from '@mui/material';\r\nimport { useState } from 'react';\r\nimport { withStyles } from '@mui/styles';\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Check } from '@mui/icons-material';\r\nimport GeneralInformationStepContentComponent from './GeneralInformationStepContent';\r\nimport LPFinancialsStepContentComponent from './LPFinancialsStepContent';\r\nimport KPIAndIRRStepContentComponent from './KPIAndIRRStepContent';\r\nimport CommitmentsStepContentComponent from './CommitmentsStepContent';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../../redux/slices/rootSlice';\r\nimport { LP } from '../../../../../models/lps/lpModels';\r\n\r\nconst CustomStepConnector = withStyles({\r\n    alternativeLabel: {\r\n        top: 50,\r\n        left: 'calc(-50% + 16px)',\r\n        right: 'calc(50% + 16px)',\r\n    },\r\n    active: {\r\n        '& $line': {\r\n            borderColor: '#004A00',\r\n        },\r\n    },\r\n    completed: {\r\n        '& $line': {\r\n            borderColor: '#008000',\r\n        },\r\n    },\r\n    line: {\r\n        borderColor: '#ccc',\r\n        borderTopWidth: 3, // adjust this to make the line thicker\r\n        borderRadius: 1,\r\n        height: '50px',\r\n        marginLeft: '3px'\r\n    },\r\n})(StepConnector);\r\n\r\nconst CustomStepIcon = (props: any) => {\r\n    const { active, completed, icon, onClick } = props;\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <div >\r\n            {icon && <div style={{ width: '2em', height: '2em', borderRadius: '50%', backgroundColor: active ? '#454545' : completed ? theme.palette.success.main : '#ccc', cursor: 'pointer', display: 'flex', alignItems: 'center', justifyContent: 'center', }} onClick={onClick} >\r\n                {completed && <Check sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', color: 'white' }} />}\r\n            </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst getSteps = () => {\r\n    return ['General Information', 'Commitments', 'LP Financials', 'KPIs & IRR'];\r\n};\r\n\r\ninterface EditLPBasicContentProps {\r\n    steps: string[],\r\n    activeStep: number,\r\n    setActiveStep: React.Dispatch<React.SetStateAction<number>>,\r\n    selectedLP: LP | null,\r\n    setSelectedLP: React.Dispatch<React.SetStateAction<LP | null>>,\r\n    disabled: boolean,\r\n    setDisabled: any\r\n}\r\n\r\nconst LPBasicEditContentComponent = ({ steps, activeStep, setActiveStep, selectedLP, setSelectedLP, disabled, setDisabled }: EditLPBasicContentProps) => {\r\n    const theme = useTheme();\r\n    const [activeLabel, setActiveLabel] = useState<string>(steps[0]);\r\n\r\n    /**\r\n     * Changes the current active step\r\n     * @param label\r\n     */\r\n    const handleSetActiveStep = (label: string) => {\r\n        if (label) {\r\n            setActiveLabel(label);\r\n            const index = steps?.indexOf(label);\r\n            setActiveStep(index);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid container sx={{ display: 'flex', justifyContent: 'flex-start', alignItems: 'start', flexDirection: 'column' }}>\r\n            <Grid item xs={3} sx={{ marginLeft: '1em' }}>\r\n                <Stepper orientation=\"vertical\" activeStep={activeStep} connector={<CustomStepConnector />}>\r\n                    {steps.map((label, index) => (\r\n                        <Step key={label}>\r\n                            <StepLabel StepIconComponent={CustomStepIcon} onClick={() => handleSetActiveStep(label)} >\r\n                            </StepLabel>\r\n                            <Typography sx={{ fontSize: '14px', textAlign: 'center', width: '80px', marginLeft: '-1.5em', fontWeight: activeLabel === label ? 600 : 400, color: activeStep > index ? theme.palette.success.main : '#454545' }}>{label}</Typography>\r\n                            <StepContent sx={{ mt: 2, ml: 2 }}>\r\n                            </StepContent>\r\n\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n            </Grid>\r\n            <Grid item xs={9} sx={{ minWidth: '450px', marginLeft: '2.3em' }}>\r\n                {activeStep === 0 ? <GeneralInformationStepContentComponent selectedLP={selectedLP} setSelectedLP={setSelectedLP} disabled={disabled} setDisabled={setDisabled} />\r\n                    : activeStep === 1\r\n                        ? <CommitmentsStepContentComponent selectedLP={selectedLP} setSelectedLP={setSelectedLP} disabled={disabled} setDisabled={setDisabled} />\r\n                        : activeStep === 2\r\n                            ? <LPFinancialsStepContentComponent selectedLP={selectedLP} setSelectedLP={setSelectedLP} disabled={disabled} setDisabled={setDisabled} />\r\n                            : <KPIAndIRRStepContentComponent selectedLP={selectedLP} setSelectedLP={setSelectedLP} disabled={disabled} setDisabled={setDisabled} />}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default LPBasicEditContentComponent;\r\n\r\n\r\n{/* <Stepper orientation=\"vertical\" activeStep={activeStep}>\r\n                    {steps.map((label, index) => (\r\n                        <Step key={label}>\r\n                            <StepLabel StepIconComponent={CustomStepIcon} onClick={() => handleSetActiveStep(label)}>\r\n                                <div style={{display:'flex', justifyContent:'center', alignItems:'center'}}>\r\n                                    {label}\r\n                                </div>\r\n                            </StepLabel>\r\n                            <StepContent  sx={{ mt: 4, ml: 4 }}>\r\n\r\n                            </StepContent>\r\n\r\n                        </Step>\r\n                    ))}\r\n                </Stepper> */}","import { Autocomplete, AutocompleteRenderInputParams, Box, Divider, Fab, Grid, IconButton, InputAdornment, TextField, Typography } from '@mui/material';\r\nimport { useCallback, useState } from 'react';\r\nimport { Theme } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport { GridApi } from 'ag-grid-community';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { CountryList } from '../../../../../models/shared/sharedModels';\r\nimport { LP, NewLP } from '../../../../../models/lps/lpModels';\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { DatePicker } from '@mui/x-date-pickers';\r\nimport moment from 'moment';\r\nimport { FundSummary } from '../../../../../models/funds/fundModels';\r\n\r\nconst autocompleteInputStyles = makeStyles((theme: Theme) => ({\r\n    autocomplete: {\r\n        'borderRadius': 5,\r\n        'backgroundColor': theme.palette.background.paper,\r\n        '& input::placeholder': {\r\n            color: theme.palette.text.primary\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: theme.palette.text.primary,\r\n            opacity: 0.8\r\n        }\r\n    },\r\n    textInput: {\r\n        'color': theme.palette.text.primary,\r\n        'fontWeight': 800,\r\n        'fontFamily': 'Raleway',\r\n        height: '2.2em',\r\n        /* 'height': '2.5em', */\r\n        'fontSize': 10,\r\n        '& .MuiIconButton-label': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chart: {\r\n            flex: 1,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n        },\r\n        fabIcon: {\r\n            marginLeft: 10,\r\n            alignSelf: 'center',\r\n        },\r\n        searchBox: {\r\n            width: '440px',\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        datePickers: {\r\n            width: '100%',\r\n            flex: 1,\r\n        },\r\n        textField: {\r\n            width: '440px',\r\n            backgroundColor: theme.palette.background.paper,\r\n            borderColor: theme.palette.text.primary,\r\n            color: theme.palette.text.primary,\r\n            borderRadius: 5,\r\n            '& .MuiSvgIcon-root':\r\n            {\r\n                color: theme.palette.text.primary\r\n            },\r\n\r\n            '& label': {\r\n                '&.Mui-focused': {\r\n                    color: theme.palette.text.primary\r\n                }\r\n            },\r\n        },\r\n        textFildsSmall: {\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        inputRoot: {\r\n            height: '1em',\r\n            'borderRadius': 5,\r\n            'backgroundColor': 'transparent',\r\n            /*         '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'black'\r\n                    },*/\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.primary.main\r\n            },\r\n            /*  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'black'\r\n              }, */\r\n            '& .MuiChip-root': {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: 'transparent',\r\n                borderRadius: 5\r\n            },\r\n            '& .MuiChip-deleteIconSmall': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        option: {\r\n            'background': theme.palette.background.paper,\r\n            '&:hover': {\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 400,\r\n                fontFamily: 'Raleway'\r\n            },\r\n            '&[aria-selected=\"true\"]': {\r\n                background: theme.palette.background.paper,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 700,\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        popupIndicator: {\r\n            '&.MuiIconButton-root': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        clearIndicator: {\r\n            color: theme.palette.text.primary\r\n        },\r\n    }),\r\n);\r\n\r\nconst FundTypes = [\r\n    \"Flex-term\",\r\n    \"General\"\r\n];\r\n\r\ninterface GeneralInformationStepContentProps {\r\n    selectedFund: FundSummary | null,\r\n    setSelectedFund: React.Dispatch<React.SetStateAction<FundSummary | null>>,\r\n    disabled: boolean,\r\n    setDisabled: any\r\n}\r\n\r\nconst GeneralInformationStepContentComponent = ({ selectedFund, setSelectedFund, disabled, setDisabled }: GeneralInformationStepContentProps) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const autocompleteInputClasses = autocompleteInputStyles();\r\n    const [domicile, setDomicile] = useState<string | null>(selectedFund?.country ?? '');\r\n    const [investmentComitee, setInvestmentComitee] = useState<string | null>(selectedFund?.investmentComitee ?? '');\r\n    const [finalClosingDate, setFinalClosingDate] = useState<string>(selectedFund?.finalClosingDate ?? '');\r\n    const [currency, setCurrency] = useState<string>(selectedFund?.currency ?? '');\r\n    const [address, setAddress] = useState<string>(selectedFund?.address ? selectedFund.address?.split(',')[0] : '');\r\n    const [aifm, setAIFM] = useState<string | number>(selectedFund?.aifm ?? '');\r\n    const [firstClosingDate, setFirstClosingDate] = useState<string>(selectedFund?.vintage ?? '');\r\n    const [aifmContact, setAIFMContact] = useState<string>(selectedFund?.aifmContact ?? '');\r\n    const [type, setType] = useState<string | null>(selectedFund?.type ?? '');\r\n\r\n    const onValueChange = (value: string, field: string) => {\r\n        if (selectedFund) {\r\n            switch (field) {\r\n                case 'domicile':\r\n                    setDomicile(value);\r\n                    setSelectedFund({\r\n                        ...selectedFund,\r\n                        country: value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'address':\r\n                    setAddress(value);\r\n                    setSelectedFund({\r\n                        ...selectedFund,\r\n                        address: value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'investmentComitee':\r\n                    setInvestmentComitee(value);\r\n                    setSelectedFund({\r\n                        ...selectedFund,\r\n                        investmentComitee: value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'currency':\r\n                    setCurrency(value);\r\n                    setSelectedFund({\r\n                        ...selectedFund,\r\n                        currency: value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'type':\r\n                    setType(value);\r\n                    setSelectedFund({\r\n                        ...selectedFund,\r\n                        type: value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'aifm':\r\n                    setAIFM(value);\r\n                    setSelectedFund({\r\n                        ...selectedFund,\r\n                        aifm: value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'aifmContact':\r\n                    setAIFMContact(value);\r\n                    setSelectedFund({\r\n                        ...selectedFund,\r\n                        aifmContact: value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    const onDateChange = (value: any, field: string) => {\r\n        if (field === 'vintage') {\r\n            setFirstClosingDate(value);\r\n            if (selectedFund) {\r\n                setSelectedFund({\r\n                    ...selectedFund,\r\n                    ['vintage']: value\r\n                });\r\n            }\r\n        } else {\r\n            setFinalClosingDate(value);\r\n            if (selectedFund) {\r\n                setSelectedFund({\r\n                    ...selectedFund,\r\n                    finalClosingDate: value\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{ flex: 1, width: '100%', marginTop: '0.2em' }}>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label='Domicile'\r\n                        aria-label=\"name\"\r\n                        value={domicile}\r\n                        onChange={(e) => onValueChange(e.target.value, 'domicile')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label='Address'\r\n                        aria-label=\"name\"\r\n                        value={address}\r\n                        onChange={(e) => onValueChange(e.target.value, 'address')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label='Investment Comittee'\r\n                        aria-label=\"name\"\r\n                        value={investmentComitee}\r\n                        onChange={(e) => onValueChange(e.target.value, 'investmentComitee')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Divider sx={{ marginTop: '1.5em', marginBottom: '0.5em', marginLeft: '1em', minWidth: '440px' }} />\r\n            <Grid item >\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '440px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <DatePicker\r\n                        className={classes.datePickers}\r\n                        inputFormat={'dd/MM/yyyy'}\r\n                        disableFuture\r\n                        value={firstClosingDate ? moment(new Date(firstClosingDate)).format('DD MMM YYYY') : null}\r\n                        disableHighlightToday\r\n                        onChange={(e) => onDateChange(e ?? '', 'vintage')}\r\n                        renderInput={(props: any) =>\r\n                            <TextField {...props}\r\n                                label={'First Closing Date'}\r\n                                variant={'outlined'}\r\n                                size={'small'}\r\n                                className={classes.textField}\r\n                                InputLabelProps={{\r\n                                    sx: {\r\n                                        fontSize: 'small'\r\n                                    }\r\n                                }}\r\n                            />}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item >\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '440px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <DatePicker\r\n                        className={classes.datePickers}\r\n                        inputFormat={'dd/MM/yyyy'}\r\n                        disableFuture\r\n                        value={finalClosingDate ? moment(new Date(finalClosingDate)).format('DD MMM YYYY') : null}\r\n                        disableHighlightToday\r\n                        onChange={(e) => onDateChange(e ?? '', 'finalClosingDate')}\r\n                        renderInput={(props: any) =>\r\n                            <TextField {...props}\r\n                                label={'Final Closing Date'}\r\n                                variant={'outlined'}\r\n                                size={'small'}\r\n                                className={classes.textField}\r\n                                InputLabelProps={{\r\n                                    sx: {\r\n                                        fontSize: 'small'\r\n                                    }\r\n                                }}\r\n                            />}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"website\"\r\n                        label='Currency'\r\n                        value={currency}\r\n                        onChange={(e) => onValueChange(e.target.value, 'currency')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Divider sx={{ marginTop: '1.5em', marginBottom: '0.5em', marginLeft: '1em', minWidth: '440px' }} />\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '440px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <Autocomplete\r\n                        id={'fundsAutocomplete'}\r\n                        popupIcon={<ExpandMoreIcon />}\r\n                        size={'small'}\r\n                        autoHighlight={true}\r\n                        autoSelect={true}\r\n                        autoComplete={false}\r\n                        classes={classes}\r\n                        onChange={(e, value: any) => onValueChange(value, 'type')}\r\n                        sx={{ marginRight: '1em', width: '440px' }}\r\n                        isOptionEqualToValue={(option, value) => option === value}\r\n                        value={type ?? ''}\r\n                        options={FundTypes.slice()}\r\n                        renderInput={(params: AutocompleteRenderInputParams) => {\r\n                            params.InputProps.className = autocompleteInputClasses.textInput;\r\n                            return <TextField {...params}\r\n                                className={autocompleteInputClasses.autocomplete}\r\n                                variant=\"outlined\"\r\n                                autoComplete=\"off\"\r\n                                label='Type'\r\n                                type={'text'}\r\n                                InputLabelProps={{\r\n                                    sx: {\r\n                                        fontSize: 'small'\r\n                                    }\r\n                                }}\r\n                            />;\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"baseCapital\"\r\n                        label='AIFM'\r\n                        value={aifm}\r\n                        onChange={(e) => onValueChange(e.target.value, 'aifm')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"website\"\r\n                        label='AIFM Contact'\r\n                        value={aifmContact}\r\n                        onChange={(e) => onValueChange(e.target.value, 'aifmContact')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default GeneralInformationStepContentComponent;","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useTheme } from '@mui/material';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport { GridApi, GridOptions, GridReadyEvent } from 'ag-grid-community';\r\nimport createStyles from '@mui/styles/createStyles';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport clsx from 'clsx';\r\nimport { ColDef, ColGroupDef, ValueSetterParams } from 'ag-grid-community/dist/lib/entities/colDef';\r\nimport { RootState } from '../../../../../redux/slices/rootSlice';\r\nimport { CommitmentBasic, LP } from '../../../../../models/lps/lpModels';\r\nimport { dateValueFormatter, getGridTheme, DefaultColumnDef, DefaultStatusPanelDef, quantityValueFormatter } from '../../../../../helpers/agGrid';\r\nimport AGGridLoader from '../../../../shared/AGGridLoader';\r\nimport EditRoundedIcon from '@mui/icons-material/EditRounded';\r\nimport { useAppDispatch } from '../../../../../redux/store';\r\nimport { setSelectedCommitment } from '../../../../../redux/slices/lps/lpsSlice';\r\nimport { setEditChildDiaogOpen } from '../../../../../redux/slices/appSlice';\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            flex: 1,\r\n            overflow: 'hidden',\r\n        },\r\n        fill: {\r\n            flex: 1,\r\n            width: '100%',\r\n            height: '100%',\r\n        }\r\n    })\r\n);\r\n\r\ninterface FundLPsStepContentTableProps {\r\n    setEditPageName: any,\r\n}\r\n\r\nconst FundCommitmentsStepContentTable = ({ setEditPageName }: FundLPsStepContentTableProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const { isDarkTheme, editChildDialogOpen } = useSelector((state: RootState) => state.app);\r\n    const { lps } = useSelector((state: RootState) => state.lps);\r\n    const { selectedFund } = useSelector((state: RootState) => state.funds);\r\n    const [, setGridApi] = useState<GridApi>();\r\n    const theme = useTheme();\r\n    const [rowData, setRowData] = useState<CommitmentBasic[]>([]);\r\n    const [editCommitmentDialogOpen, setEditCommitmentDialogOpen] = useState<boolean>(false);\r\n    const [editialogOpen, setEditDialogOpen] = useState<boolean>(false);\r\n    const [selectedCommitmentLocal, setSelectedCommitmentLocal] = useState<any>(null);\r\n\r\n    const gridOptions: GridOptions = {\r\n        defaultColDef: DefaultColumnDef,\r\n        enableCellChangeFlash: true,\r\n        enableRangeSelection: true,\r\n        animateRows: true,\r\n        pagination: true,\r\n        paginationPageSize: 5,\r\n        enableCellTextSelection: true,\r\n        groupDisplayType: 'multipleColumns',\r\n        statusBar: DefaultStatusPanelDef,\r\n    };\r\n\r\n    const ButtonCellRenderer = (props: any) => {\r\n        const handleEditClick = () => {\r\n            if (props.data) {\r\n                setSelectedCommitmentLocal(props.data);\r\n                setEditPageName('fundCommitments');\r\n                setEditDialogOpen(!editChildDialogOpen);\r\n                //handleOpenEditChildDialog('investments');\r\n            }\r\n        };\r\n        return <span key={props.data.id} style={{ display: 'flex', width: '100%', justifyContent: 'center', alignItems: 'center', cursor: 'pointer' }}>\r\n            <EditRoundedIcon style={{ color: theme.palette.primary.main, width: '100%', alignSelf: 'center' }} onClick={() => handleEditClick()} />\r\n        </span>;\r\n    };\r\n\r\n    const getColumnDefs = useMemo((): (ColDef | ColGroupDef)[] => {\r\n        return [\r\n            {\r\n                headerName: 'Date',\r\n                field: 'date',\r\n                minWidth: 100,\r\n                maxWidth: 140,\r\n                enableRowGroup: true,\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n                valueFormatter: dateValueFormatter,\r\n            },\r\n            {\r\n                headerName: 'Short Name',\r\n                field: 'lpShortName',\r\n                tooltipField: 'lpShortName',\r\n                suppressFiltersToolPanel: true,\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n            },\r\n            {\r\n                headerName: 'Committed Amount',\r\n                field: 'committedAmount',\r\n                enableRowGroup: true,\r\n                type: 'numericColumn',\r\n                tooltipField: 'committedAmount',\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n                valueFormatter: quantityValueFormatter,\r\n            },\r\n            {\r\n                headerName: 'Currency',\r\n                field: 'fundCurrency',\r\n                minWidth: 90,\r\n                maxWidth: 120,\r\n                enableRowGroup: true,\r\n                valueGetter: (params) => {\r\n                    return params.data?.fundCurrency ? params.data?.fundCurrency.toUpperCase() : '';\r\n                },\r\n                valueSetter: (params) => valueSetter(params, 'fundCurrency'),\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n            },\r\n            {\r\n                headerName: '',\r\n                maxWidth: 60,\r\n                cellRenderer: 'buttonCellRenderer',\r\n                editable: false\r\n            },\r\n        ];\r\n    }, [theme]);\r\n\r\n    const onGridReady = (params: GridReadyEvent) => {\r\n        setGridApi(params?.api);\r\n    };\r\n\r\n    const valueSetter = (params: ValueSetterParams, field: string) => {\r\n        const value = params.newValue;\r\n        const data = params.data;\r\n        if (data[field] !== value) {\r\n            data[field] = value;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const loadingOverlayRendererParams = useMemo(() => {\r\n        return {\r\n            loadingMessage: 'Loading Funds Overview...',\r\n        };\r\n    }, []);\r\n\r\n    /*  const autoGroupColumnDef = useMemo<ColDef>(() => {\r\n         return {\r\n           minWidth: 300,\r\n           cellRendererParams: {\r\n             footerValueGetter: (params: any) => {\r\n               const isRootLevel = params.node.level === -1;\r\n               if (isRootLevel) {\r\n                 return 'Total';\r\n               }\r\n               else\r\n                return `Sub Total (${params.value})`;\r\n             },\r\n           },\r\n         };\r\n       }, []);\r\n \r\n       const createData: (count: number, gridApi:GridApi|null) => any[] = (\r\n         count: number,\r\n       ) => {\r\n         var result: any[] = [];\r\n         for (var i = 0; i < count; i++) {\r\n           result.push({\r\n             short: 'Total',\r\n             name: gridApi?gridApi.paginationGetRowCount():0,\r\n             totalCommitments: count,\r\n             totalInvestments:count,\r\n             reservesFees:count,\r\n           });\r\n         }\r\n         return result;\r\n       };\r\n \r\n       const pinnedBottomRowData = useMemo<any[]>(() => {\r\n         return createData(1, gridApi??null);\r\n       }, [gridApi]);\r\n  */\r\n\r\n    useEffect(() => {\r\n        if (lps && selectedFund) {\r\n            const data = lps?.flatMap((lp: LP) =>\r\n                lp?.commitments?.filter((commitment: CommitmentBasic) => commitment.fundId === selectedFund?.id)\r\n                    .map((item) => ({ lpShortName: lp.shortName, lpId: lp.id, ...item }))\r\n            );\r\n            const filteredCommitments: CommitmentBasic[] = data.filter((commitment) => commitment !== undefined) as CommitmentBasic[];\r\n            setRowData(filteredCommitments);\r\n        }\r\n    }, [lps, selectedFund])\r\n\r\n\r\n    useEffect(() => {\r\n        if (selectedCommitmentLocal && editialogOpen) {\r\n            dispatch(setSelectedCommitment(selectedCommitmentLocal));\r\n            dispatch(setEditChildDiaogOpen(!editChildDialogOpen));\r\n        }\r\n    }, [selectedCommitmentLocal, editialogOpen, dispatch])\r\n\r\n    return (\r\n        <div className={clsx(getGridTheme(isDarkTheme), classes.fill)} style={{ flex: 1 }}>\r\n            <AgGridReact gridOptions={gridOptions}\r\n                columnDefs={getColumnDefs}\r\n                rowData={rowData}\r\n                domLayout={'autoHeight'}\r\n                onGridReady={onGridReady}\r\n                loadingOverlayComponentParams={loadingOverlayRendererParams}\r\n                loadingOverlayComponent={AGGridLoader}\r\n                tooltipShowDelay={0}\r\n                tooltipHideDelay={10000}\r\n                components={{\r\n                    buttonCellRenderer: ButtonCellRenderer\r\n                }}\r\n            />\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default FundCommitmentsStepContentTable;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useTheme } from '@mui/material';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport { GridApi, GridOptions, GridReadyEvent } from 'ag-grid-community';\r\nimport createStyles from '@mui/styles/createStyles';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport clsx from 'clsx';\r\nimport { ColDef, ColGroupDef, ValueSetterParams } from 'ag-grid-community/dist/lib/entities/colDef';\r\nimport { RootState } from '../../../../../redux/slices/rootSlice';\r\nimport { LPFundsOverview } from '../../../../../models/lps/lpModels';\r\nimport { getGridTheme, DefaultColumnDef, DefaultStatusPanelDef, quantityValueFormatter } from '../../../../../helpers/agGrid';\r\nimport AGGridLoader from '../../../../shared/AGGridLoader';\r\nimport EditRoundedIcon from '@mui/icons-material/EditRounded';\r\nimport { useAppDispatch } from '../../../../../redux/store';\r\nimport { setSelectedCommitment } from '../../../../../redux/slices/lps/lpsSlice';\r\nimport { setEditChildDiaogOpen } from '../../../../../redux/slices/appSlice';\r\nimport { EditCommitment } from '../../../../../models/shared/sharedModels';\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            flex: 1,\r\n            overflow: 'hidden',\r\n        },\r\n        fill: {\r\n            flex: 1,\r\n            width: '100%',\r\n            height: '100%',\r\n        }\r\n    })\r\n);\r\n\r\ninterface FundLPsStepContentTableProps {\r\n    setEditPageName: any,\r\n}\r\n\r\n\r\nconst FundLPsStepContentTable = ({ setEditPageName }: FundLPsStepContentTableProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const { isDarkTheme, editChildDialogOpen } = useSelector((state: RootState) => state.app);\r\n    const { selectedFund } = useSelector((state: RootState) => state.funds);\r\n    const [, setGridApi] = useState<GridApi>();\r\n    const theme = useTheme();\r\n    const [rowData, setRowData] = useState<LPFundsOverview[]>([]);\r\n    const [editCommitmentDialogOpen, setEditCommitmentDialogOpen] = useState<boolean>(false);\r\n    const [editialogOpen, setEditDialogOpen] = useState<boolean>(false);\r\n    const [selectedCommitmentLocal, setSelectedCommitmentLocal] = useState<any>(null);\r\n\r\n    const gridOptions: GridOptions = {\r\n        defaultColDef: DefaultColumnDef,\r\n        enableCellChangeFlash: true,\r\n        enableRangeSelection: true,\r\n        animateRows: true,\r\n        paginationPageSize: 5,\r\n        pagination: true,\r\n        enableCellTextSelection: true,\r\n        groupDisplayType: 'multipleColumns',\r\n        statusBar: DefaultStatusPanelDef,\r\n    };\r\n\r\n\r\n    const ButtonCellRenderer = (props: any) => {\r\n        const handleEditClick = () => {\r\n            if (props.data) {\r\n                setEditPageName('fundLPs');\r\n                setEditDialogOpen(!editChildDialogOpen);\r\n                const commitment: EditCommitment = {\r\n                    fundId: selectedFund?.id,\r\n                    lpId: props.data?.id,\r\n                    committedAmount: props.data?.committedAmount\r\n                }\r\n                setSelectedCommitmentLocal(commitment);\r\n            }\r\n        };\r\n\r\n        return <span key={props.data.id} style={{ display: 'flex', width: '100%', justifyContent: 'center', alignItems: 'center', cursor: 'pointer' }}>\r\n            <EditRoundedIcon style={{ color: theme.palette.primary.main, width: '100%', alignSelf: 'center' }} onClick={() => handleEditClick()} />\r\n        </span>;\r\n    };\r\n\r\n    const getColumnDefs = useMemo((): (ColDef | ColGroupDef)[] => {\r\n        return [\r\n            {\r\n                headerName: 'Id',\r\n                field: 'id',\r\n                enableRowGroup: true,\r\n                valueGetter: (params) => {\r\n                    return params.data?.id;\r\n                },\r\n                tooltipField: 'id',\r\n                valueSetter: (params) => valueSetter(params, 'id'),\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n            },\r\n            {\r\n                headerName: 'Short Name',\r\n                field: 'shortName',\r\n                tooltipField: 'shortName',\r\n                suppressFiltersToolPanel: true,\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n            },\r\n            {\r\n                headerName: 'Committed Amount',\r\n                field: 'committedAmount',\r\n                enableRowGroup: true,\r\n                type: 'numericColumn',\r\n                tooltipField: 'committedAmount',\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n                valueFormatter: quantityValueFormatter,\r\n            },\r\n            {\r\n                headerName: 'Currency',\r\n                field: 'fundCurrency',\r\n                minWidth: 90,\r\n                maxWidth: 120,\r\n                enableRowGroup: true,\r\n                valueGetter: (params) => {\r\n                    return params.data?.fundCurrency ? params.data?.fundCurrency.toUpperCase() : '';\r\n                },\r\n                valueSetter: (params) => valueSetter(params, 'fundCurrency'),\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n            },\r\n            {\r\n                headerName: '',\r\n                maxWidth: 60,\r\n                cellRenderer: 'buttonCellRenderer',\r\n                editable: false\r\n            },\r\n        ];\r\n    }, [theme]);\r\n\r\n    const onGridReady = (params: GridReadyEvent) => {\r\n        setGridApi(params?.api);\r\n    };\r\n\r\n    const valueSetter = (params: ValueSetterParams, field: string) => {\r\n        const value = params.newValue;\r\n        const data = params.data;\r\n        if (data[field] !== value) {\r\n            data[field] = value;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const loadingOverlayRendererParams = useMemo(() => {\r\n        return {\r\n            loadingMessage: 'Loading Funds Overview...',\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setRowData(selectedFund?.lps ?? []);\r\n    }, [selectedFund])\r\n\r\n    useEffect(() => {\r\n        if (selectedCommitmentLocal && editialogOpen) {\r\n            dispatch(setSelectedCommitment(selectedCommitmentLocal));\r\n            dispatch(setEditChildDiaogOpen(!editChildDialogOpen));\r\n        }\r\n    }, [selectedCommitmentLocal, editialogOpen, dispatch])\r\n\r\n\r\n    return (\r\n        <div className={clsx(getGridTheme(isDarkTheme), classes.fill)} style={{ flex: 1 }}>\r\n            <AgGridReact gridOptions={gridOptions}\r\n                columnDefs={getColumnDefs}\r\n                rowData={rowData}\r\n                domLayout={'autoHeight'}\r\n                onGridReady={onGridReady}\r\n                loadingOverlayComponentParams={loadingOverlayRendererParams}\r\n                loadingOverlayComponent={AGGridLoader}\r\n                tooltipShowDelay={0}\r\n                tooltipHideDelay={10000}\r\n                components={{\r\n                    buttonCellRenderer: ButtonCellRenderer\r\n                }}\r\n            />\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default FundLPsStepContentTable;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useTheme } from '@mui/material';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport { GridApi, GridOptions, GridReadyEvent } from 'ag-grid-community';\r\nimport createStyles from '@mui/styles/createStyles';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport clsx from 'clsx';\r\nimport { ColDef, ColGroupDef } from 'ag-grid-community/dist/lib/entities/colDef';\r\nimport { RootState } from '../../../../../redux/slices/rootSlice';\r\nimport { PCO } from '../../../../../models/lps/lpModels';\r\nimport { getGridTheme, DefaultColumnDef, DefaultStatusPanelDef, quantityValueFormatter } from '../../../../../helpers/agGrid';\r\nimport AGGridLoader from '../../../../shared/AGGridLoader';\r\nimport EditRoundedIcon from '@mui/icons-material/EditRounded';\r\nimport { useAppDispatch } from '../../../../../redux/store';\r\nimport { EditInvestment } from '../../../../../models/pcos/pcoModels';\r\nimport { setSelectedInvestment } from '../../../../../redux/slices/pcos/pcosSlice';\r\nimport { setEditChildDiaogOpen } from '../../../../../redux/slices/appSlice';\r\n\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            flex: 1,\r\n            overflow: 'hidden',\r\n        },\r\n        fill: {\r\n            flex: 1,\r\n            width: '100%',\r\n            height: '100%',\r\n        }\r\n    })\r\n);\r\n\r\ninterface FundLPsStepContentTableProps {\r\n    setEditPageName: any,\r\n}\r\nconst FundPCOsStepContentTable = ({ setEditPageName }: FundLPsStepContentTableProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const { isDarkTheme, editChildDialogOpen } = useSelector((state: RootState) => state.app);\r\n    const { selectedFund } = useSelector((state: RootState) => state.funds);\r\n    const [, setGridApi] = useState<GridApi>();\r\n    const theme = useTheme();\r\n    const [rowData, setRowData] = useState<PCO[]>([]);\r\n    const [editCommitmentDialogOpen, setEditCommitmentDialogOpen] = useState<boolean>(false);\r\n    const [editialogOpen, setEditDialogOpen] = useState<boolean>(false);\r\n    const [selectedInvetsmentLocal, setSelectedInvetsmentLocal] = useState<any>(null);\r\n\r\n    const gridOptions: GridOptions = {\r\n        defaultColDef: DefaultColumnDef,\r\n        enableCellChangeFlash: true,\r\n        enableRangeSelection: true,\r\n        animateRows: true,\r\n        pagination: true,\r\n        paginationPageSize: 5,\r\n        enableCellTextSelection: true,\r\n        groupDisplayType: 'multipleColumns',\r\n        statusBar: DefaultStatusPanelDef,\r\n    };\r\n\r\n    const ButtonCellRenderer = (props: any) => {\r\n        const handleEditClick = () => {\r\n            if (props.data) {\r\n                setEditPageName('fundPCOs');\r\n                setEditDialogOpen(!editChildDialogOpen);\r\n                const investment: EditInvestment = {\r\n                    fundId: selectedFund?.id,\r\n                    pcoId: props.data?.id,\r\n                    amountInvested: props.data?.amountInvested\r\n                }\r\n                setSelectedInvetsmentLocal(investment);\r\n                //handleOpenEditChildDialog('investments');\r\n            }\r\n        };\r\n        return <span key={props.data.id} style={{ display: 'flex', width: '100%', justifyContent: 'center', alignItems: 'center', cursor: 'pointer' }}>\r\n            <EditRoundedIcon style={{ color: theme.palette.primary.main, width: '100%', alignSelf: 'center' }} onClick={() => handleEditClick()} />\r\n        </span>;\r\n    };\r\n\r\n    const getColumnDefs = useMemo((): (ColDef | ColGroupDef)[] => {\r\n        return [\r\n            {\r\n                headerName: 'Short Name',\r\n                field: 'shortName',\r\n                tooltipField: 'fundName',\r\n                suppressFiltersToolPanel: true,\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n            },\r\n            {\r\n                headerName: 'Amount Invested',\r\n                field: 'amountInvested',\r\n                enableRowGroup: true,\r\n                type: 'numericColumn',\r\n                tooltipField: 'amountInvested',\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n                valueFormatter: quantityValueFormatter,\r\n            },\r\n            {\r\n                headerName: '',\r\n                maxWidth: 60,\r\n                cellRenderer: 'buttonCellRenderer',\r\n                editable: false\r\n            },\r\n        ];\r\n    }, [theme]);\r\n\r\n    const onGridReady = (params: GridReadyEvent) => {\r\n        setGridApi(params?.api);\r\n    };\r\n\r\n    const loadingOverlayRendererParams = useMemo(() => {\r\n        return {\r\n            loadingMessage: 'Loading Funds Overview...',\r\n        };\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        setRowData(selectedFund?.pcos ?? []);\r\n    }, [selectedFund])\r\n\r\n\r\n    useEffect(() => {\r\n        if (selectedInvetsmentLocal && editialogOpen) {\r\n            dispatch(setSelectedInvestment(selectedInvetsmentLocal));\r\n            dispatch(setEditChildDiaogOpen(!editChildDialogOpen));\r\n        }\r\n    }, [selectedInvetsmentLocal, editialogOpen, dispatch])\r\n\r\n    return (\r\n        <div className={clsx(getGridTheme(isDarkTheme), classes.fill)} style={{ flex: 1 }}>\r\n            <AgGridReact gridOptions={gridOptions}\r\n                columnDefs={getColumnDefs}\r\n                rowData={rowData}\r\n                domLayout={'autoHeight'}\r\n                onGridReady={onGridReady}\r\n                loadingOverlayComponentParams={loadingOverlayRendererParams}\r\n                loadingOverlayComponent={AGGridLoader}\r\n                tooltipShowDelay={0}\r\n                tooltipHideDelay={10000}\r\n                components={{\r\n                    buttonCellRenderer: ButtonCellRenderer\r\n                }}\r\n            />\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default FundPCOsStepContentTable;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useTheme } from '@mui/material';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport { GridApi, GridOptions, GridReadyEvent } from 'ag-grid-community';\r\nimport createStyles from '@mui/styles/createStyles';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport clsx from 'clsx';\r\nimport { ColDef, ColGroupDef, ValueSetterParams } from 'ag-grid-community/dist/lib/entities/colDef';\r\nimport { RootState } from '../../../../../redux/slices/rootSlice';\r\nimport { EditExit, Exits } from '../../../../../models/lps/lpModels';\r\nimport { dateValueFormatter, getGridTheme, DefaultColumnDef, DefaultStatusPanelDef, quantityValueFormatter } from '../../../../../helpers/agGrid';\r\nimport AGGridLoader from '../../../../shared/AGGridLoader';\r\nimport EditRoundedIcon from '@mui/icons-material/EditRounded';\r\nimport { useAppDispatch } from '../../../../../redux/store';\r\nimport { setEditChildDiaogOpen } from '../../../../../redux/slices/appSlice';\r\nimport { setSelectedExit } from '../../../../../redux/slices/lps/lpsSlice';\r\nimport { fetchAllDistributions } from '../../../../../redux/thunks/distributionsThunk';\r\nimport { fetchPCOs } from '../../../../../redux/thunks/pcoThunk';\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            flex: 1,\r\n            overflow: 'hidden',\r\n        },\r\n        fill: {\r\n            flex: 1,\r\n            width: '100%',\r\n            height: '100%',\r\n        }\r\n    })\r\n);\r\n\r\ninterface FundLPsStepContentTableProps {\r\n    setEditPageName: any,\r\n}\r\n\r\nconst FundExitsStepContentTable = ({ setEditPageName }: FundLPsStepContentTableProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const { isDarkTheme, editChildDialogOpen } = useSelector((state: RootState) => state.app);\r\n    const { selectedFund } = useSelector((state: RootState) => state.funds);\r\n    const { distributions } = useSelector((state: RootState) => state.distributions);\r\n    const { pcos } = useSelector((state: RootState) => state.pcos);\r\n    const [, setGridApi] = useState<GridApi>();\r\n    const theme = useTheme();\r\n    const [rowData, setRowData] = useState<any[]>([]);\r\n    const [editCommitmentDialogOpen, setEditCommitmentDialogOpen] = useState<boolean>(false);\r\n    const [editialogOpen, setEditDialogOpen] = useState<boolean>(false);\r\n    const [selectedExitLocal, setSelectedExitLocal] = useState<any>(null);\r\n\r\n    const gridOptions: GridOptions = {\r\n        defaultColDef: DefaultColumnDef,\r\n        enableCellChangeFlash: true,\r\n        enableRangeSelection: true,\r\n        animateRows: true,\r\n        pagination: true,\r\n        paginationPageSize: 5,\r\n        enableCellTextSelection: true,\r\n        groupDisplayType: 'multipleColumns',\r\n        statusBar: DefaultStatusPanelDef,\r\n    };\r\n\r\n    const ButtonCellRenderer = (props: any) => {\r\n        const handleEditClick = () => {\r\n            if (props.data) {\r\n                setEditPageName('fundExits');\r\n                setEditDialogOpen(!editChildDialogOpen);\r\n                const exit: EditExit = {\r\n                    fundId: selectedFund?.id,\r\n                    pcoId: props.data.pcoId,\r\n                    amountGained: props.data.amount,\r\n                    date: props.data.distDate\r\n                }\r\n\r\n                setSelectedExitLocal(exit);\r\n                //handleOpenEditChildDialog('investments');\r\n            }\r\n        };\r\n\r\n        return <span key={props.data.id} style={{ display: 'flex', width: '100%', justifyContent: 'center', alignItems: 'center', cursor: 'pointer' }}>\r\n            <EditRoundedIcon style={{ color: theme.palette.primary.main, width: '100%', alignSelf: 'center' }} onClick={() => handleEditClick()} />\r\n        </span>;\r\n    };\r\n\r\n    const getColumnDefs = useMemo((): (ColDef | ColGroupDef)[] => {\r\n        return [\r\n            {\r\n                headerName: 'Date',\r\n                field: 'distDate',\r\n                minWidth: 100,\r\n                maxWidth: 140,\r\n                enableRowGroup: true,\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n                valueFormatter: dateValueFormatter,\r\n            },\r\n            {\r\n                headerName: 'Short Name',\r\n                field: 'pcoShortName',\r\n                tooltipField: 'shortName',\r\n                suppressFiltersToolPanel: true,\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n            },\r\n            {\r\n                headerName: 'Amount Returned',\r\n                field: 'amount',\r\n                enableRowGroup: true,\r\n                type: 'numericColumn',\r\n                tooltipField: 'amount',\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n                valueFormatter: quantityValueFormatter,\r\n            },\r\n            {\r\n                headerName: 'Currency',\r\n                field: 'fundCurrency',\r\n                minWidth: 90,\r\n                maxWidth: 120,\r\n                enableRowGroup: true,\r\n                valueGetter: (params) => {\r\n                    return params.data?.fundCurrency ? params.data?.fundCurrency.toUpperCase() : '';\r\n                },\r\n                valueSetter: (params) => valueSetter(params, 'fundCurrency'),\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n            },\r\n            {\r\n                headerName: '',\r\n                maxWidth: 60,\r\n                cellRenderer: 'buttonCellRenderer',\r\n                editable: false\r\n            },\r\n        ];\r\n    }, [theme]);\r\n\r\n    const onGridReady = (params: GridReadyEvent) => {\r\n        setGridApi(params?.api);\r\n    };\r\n\r\n    const valueSetter = (params: ValueSetterParams, field: string) => {\r\n        const value = params.newValue;\r\n        const data = params.data;\r\n        if (data[field] !== value) {\r\n            data[field] = value;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const loadingOverlayRendererParams = useMemo(() => {\r\n        return {\r\n            loadingMessage: 'Loading Funds Overview...',\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchAllDistributions());\r\n        dispatch(fetchPCOs());\r\n    }, [dispatch])\r\n\r\n\r\n    useEffect(() => {\r\n        if (selectedFund && distributions && pcos) {\r\n            const data = distributions?.filter(x => x.fundId === selectedFund.id);\r\n            const filteredData = data.map((item) => ({\r\n                ...item,\r\n                pcoShortName: selectedFund?.pcos?.filter(x => x.id === item.pcoId)[0]?.shortName ?? '',\r\n                pcoName: pcos?.filter(x => x.id === item.pcoId)[0]?.pcoName ?? '',\r\n                fundCurrency: selectedFund.currency ?? ''\r\n            }))\r\n            setRowData(filteredData ?? []);\r\n        }\r\n    }, [distributions, pcos])\r\n\r\n    useEffect(() => {\r\n        if (selectedExitLocal && editialogOpen) {\r\n            dispatch(setSelectedExit(selectedExitLocal));\r\n            dispatch(setEditChildDiaogOpen(!editChildDialogOpen));\r\n        }\r\n    }, [selectedExitLocal, editialogOpen, dispatch])\r\n\r\n    return (\r\n        <div className={clsx(getGridTheme(isDarkTheme), classes.fill)} style={{ flex: 1 }}>\r\n            <AgGridReact gridOptions={gridOptions}\r\n                columnDefs={getColumnDefs}\r\n                rowData={rowData}\r\n                domLayout={'autoHeight'}\r\n                onGridReady={onGridReady}\r\n                loadingOverlayComponentParams={loadingOverlayRendererParams}\r\n                loadingOverlayComponent={AGGridLoader}\r\n                tooltipShowDelay={0}\r\n                tooltipHideDelay={10000}\r\n                components={{\r\n                    buttonCellRenderer: ButtonCellRenderer\r\n                }}\r\n            />\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default FundExitsStepContentTable;\r\n","import { Accordion, AccordionDetails, AccordionSummary, Autocomplete, AutocompleteRenderInputParams, Box, Divider, Fab, Grid, IconButton, InputAdornment, TextField, Tooltip, Typography } from '@mui/material';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Theme } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport { GridApi } from 'ag-grid-community';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { CountryList } from '../../../../../models/shared/sharedModels';\r\nimport { CommitmentBasic, LP, NewLP } from '../../../../../models/lps/lpModels';\r\nimport { darken, useTheme } from \"@mui/material/styles\";\r\nimport { DatePicker } from '@mui/x-date-pickers';\r\nimport { minHeight } from '@mui/system';\r\nimport AddRoundedIcon from '@mui/icons-material/AddRounded';\r\nimport FundCommitmentsStepContentTable from './FundCommitmentsStepContentTable';\r\nimport FundLPsStepContentTable from './FundLPsStepContentTable';\r\nimport FundPCOsStepContentTable from './FundPCOsStepContentTable';\r\nimport FundExitsStepContentTable from './FundExitsStepContentTable';\r\nimport { FundSummary } from '../../../../../models/funds/fundModels';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../../redux/slices/rootSlice';\r\nimport { AddChildDialogComponent } from '../../../addPopup/AddChildDialog';\r\nimport { EditChildDialogComponent } from '../../EditChildDialog';\r\nimport { useAppDispatch } from '../../../../../redux/store';\r\nimport { fetchAllDistributions } from '../../../../../redux/thunks/distributionsThunk';\r\n\r\nconst autocompleteInputStyles = makeStyles((theme: Theme) => ({\r\n    autocomplete: {\r\n        'borderRadius': 5,\r\n        'backgroundColor': theme.palette.background.paper,\r\n        '& input::placeholder': {\r\n            color: theme.palette.text.primary\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: theme.palette.text.primary,\r\n            opacity: 0.8\r\n        }\r\n    },\r\n    textInput: {\r\n        'color': theme.palette.text.primary,\r\n        'fontWeight': 800,\r\n        'fontFamily': 'Raleway',\r\n        height: '2.2em',\r\n        /* 'height': '2.5em', */\r\n        'fontSize': 10,\r\n        '& .MuiIconButton-label': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chart: {\r\n            flex: 1,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n        },\r\n        fabIcon: {\r\n            marginLeft: 10,\r\n            alignSelf: 'center',\r\n        },\r\n        searchBox: {\r\n            width: '435px',\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        datePickers: {\r\n            width: '100%',\r\n            flex: 1,\r\n        },\r\n        textField: {\r\n            width: '435px',\r\n            backgroundColor: theme.palette.background.paper,\r\n            borderColor: theme.palette.text.primary,\r\n            color: theme.palette.text.primary,\r\n            borderRadius: 5,\r\n            '& .MuiSvgIcon-root':\r\n            {\r\n                color: theme.palette.text.primary\r\n            },\r\n\r\n            '& label': {\r\n                '&.Mui-focused': {\r\n                    color: theme.palette.text.primary\r\n                }\r\n            },\r\n        },\r\n        textFildsSmall: {\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        inputRoot: {\r\n            height: '1em',\r\n            'borderRadius': 5,\r\n            'backgroundColor': 'transparent',\r\n            /*         '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'black'\r\n                    },*/\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.primary.main\r\n            },\r\n            /*  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'black'\r\n              }, */\r\n            '& .MuiChip-root': {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: 'transparent',\r\n                borderRadius: 5\r\n            },\r\n            '& .MuiChip-deleteIconSmall': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        option: {\r\n            'background': theme.palette.background.paper,\r\n            '&:hover': {\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 400,\r\n                fontFamily: 'Raleway'\r\n            },\r\n            '&[aria-selected=\"true\"]': {\r\n                background: theme.palette.background.paper,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 700,\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        popupIndicator: {\r\n            '&.MuiIconButton-root': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        clearIndicator: {\r\n            color: theme.palette.text.primary\r\n        },\r\n    }),\r\n);\r\nconst LPTypes = [\r\n    \"Corporate\",\r\n    \"General Partner\",\r\n    \"Individual\",\r\n    \"Institutional\",\r\n];\r\n\r\ninterface CommitmentsStepContentProps {\r\n    selectedFund: FundSummary | null,\r\n    setSelectedFund: React.Dispatch<React.SetStateAction<FundSummary | null>>,\r\n    disabled: boolean,\r\n    setDisabled: any\r\n}\r\n\r\nconst CommitmentsStepContentComponent = ({ selectedFund, setSelectedFund, disabled, setDisabled }: CommitmentsStepContentProps) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const dispatch = useAppDispatch();\r\n    const [commitmentsExpanded, setCommitmentsExpanded] = useState<boolean>(false);\r\n    const [lpsExpanded, setLpsExpanded] = useState<boolean>(false);\r\n    const [pcosExpanded, setPCOsExpanded] = useState<boolean>(false);\r\n    const [exitsExpanded, setExitsExpanded] = useState<boolean>(false);\r\n    const [numOfCommitments, setNuberOfCommitments] = useState<number>(0);\r\n    const { lps } = useSelector((state: RootState) => state.lps);\r\n    const [addChildDialogOpen, setAddChildDialogOpen] = useState<boolean>(false);\r\n    const [pageName, setPageName] = useState<string>('');\r\n    const { editChildDialogOpen } = useSelector((state: RootState) => state.app);\r\n    const [editPageName, setEditPageName] = useState<string>('');\r\n    const { distributions } = useSelector((state: RootState) => state.distributions);\r\n    const [numExit, setNumExit] = useState<number>(0);\r\n\r\n    const handleAccordionExp = (expanded: boolean, cardName: string) => {\r\n        if (cardName === 'commitments') {\r\n            setCommitmentsExpanded(!commitmentsExpanded);\r\n        } else if (cardName === 'lps') {\r\n            setLpsExpanded(!lpsExpanded);\r\n        } else if (cardName === 'pcos') {\r\n            setPCOsExpanded(!pcosExpanded);\r\n        } else {\r\n            setExitsExpanded(!exitsExpanded);\r\n        }\r\n    };\r\n\r\n    const handleOpenChildDialog = (accordion: string) => {\r\n        setPageName(accordion);\r\n        setAddChildDialogOpen(!addChildDialogOpen);\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchAllDistributions());\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (lps && selectedFund) {\r\n            const data = lps?.flatMap((lp: LP) =>\r\n                lp?.commitments?.filter((commitment: CommitmentBasic) => commitment.fundId === selectedFund?.id)\r\n                    .map((item) => ({ lpShortName: lp.shortName, ...item }))\r\n            );\r\n            const filteredCommitments: CommitmentBasic[] = data.filter((commitment) => commitment !== undefined) as CommitmentBasic[];\r\n            setNuberOfCommitments(filteredCommitments?.length);\r\n        }\r\n    }, [lps, selectedFund])\r\n\r\n\r\n    useEffect(() => {\r\n        if (distributions && selectedFund) {\r\n            setNumExit(distributions?.filter(x => x.fundId === selectedFund.id)?.length ?? 0);\r\n        }\r\n    }, [distributions, selectedFund])\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{ flex: 1, width: '100%', display: 'flex', justifyContent: 'start', marginTop: '0.2em' }}>\r\n            <Grid item xs={12} md={12} sx={{ display: 'flex', justifyContent: 'space-between', flex: 1, width: '100%', flexDirection: 'row', minWidth: '400px' }}>\r\n                <Grid item xs={10}>\r\n                    <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '390px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                        <Accordion\r\n                            key={`card-commitments`}\r\n                            expanded={commitmentsExpanded}\r\n                            onChange={(event, expanded: boolean) => handleAccordionExp(expanded, 'commitments')}\r\n                            sx={{ marginBottom: '0.5em', backgroundColor: theme.palette.background.paper, width: '390px', borderLeft: `1px solid rgba(133, 133, 133,0.5)`, borderRight: `1px solid rgba(133, 133, 133,0.5)`, borderTop: `1px solid rgba(133, 133, 133,0.5)`, borderBottom: 'none' }}\r\n                        >\r\n                            <AccordionSummary\r\n                                sx={{ height: '40px' }}\r\n                                /* sx={{\r\n                                    'cursor': 'pointer',\r\n                                    'width': '100%',\r\n                                    'minHeight': '68px !important',\r\n                                    'paddingTop': 0,\r\n                                    'backgroundColor': theme.palette.background.paper,\r\n                                   \r\n                                }} */\r\n                                expandIcon={\r\n                                    <IconButton>\r\n                                        <ExpandMoreIcon\r\n                                            sx={{ pointerEvents: 'auto', cursor: 'pointer' }} />\r\n                                    </IconButton>\r\n                                }\r\n                            >\r\n                                <Grid container\r\n                                    sx={{ display: 'flex', flex: 1, height: '100%', width: '100%', alignItems: 'center' }}>\r\n                                    <Grid container>\r\n                                        <Typography variant='body1' sx={{ color: theme.palette.text.primary, fontWeight: 600 }}>Commitments</Typography>\r\n                                    </Grid>\r\n                                    <Grid container>\r\n                                        <Typography variant='body2' sx={{ color: theme.palette.mode === 'light' ? 'rgba(69, 69, 69, 0.7)' : darken(theme.palette.text.primary, 0.4), fontWeight: 400, fontSize: '14px' }}>{`${numOfCommitments} Commitments`}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails\r\n                                sx={{\r\n                                    backgroundColor: theme.palette.background.paper,\r\n                                    width: '100%', padding: '0.1em', display: 'flex', height: '100%', pointerEvents: 'auto'\r\n                                }}>\r\n                                {commitmentsExpanded && <FundCommitmentsStepContentTable setEditPageName={setEditPageName} />}\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={2} sx={{ display: 'flex', justifyContent: 'end', flex: 1, marginLeft: '2em', alignItems: 'start', marginTop: '0.6em' }}>\r\n                    <Tooltip title={\"Add a new commitment\"}>\r\n                        <Box\r\n                            sx={{\r\n                                width: '30px',\r\n                                height: '30px',\r\n                                bgcolor: theme.palette.primary.main,\r\n                                color: 'white',\r\n                                borderRadius: '50%',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.4)',\r\n                                transition: 'box-shadow 0.2s ease-in-out',\r\n                                '&:hover': {\r\n                                    cursor: 'pointer',\r\n                                    boxShadow: '0px 6px 12px rgba(0, 0, 0, 0.6)',\r\n                                    backgroundColor: darken(theme.palette.primary.main, 0.2)\r\n                                }\r\n                            }}\r\n                            onClick={() => { handleOpenChildDialog('fundCommitments') }}\r\n                        >\r\n                            <AddRoundedIcon fontSize='small' sx={{ height: 20, width: 20 }} />\r\n                        </Box>\r\n                        {/* <span>\r\n                        <Fab\r\n                            color={'primary'}\r\n                            size=\"small\"\r\n                            sx={{ boxShadow: 'none', height:10,width:30 }}\r\n                            aria-label=\"AddBtn\"\r\n                            onFocus={(e: any) => (e.target.blur())}\r\n                            className={classes.fabIcon}>\r\n                            <AddRoundedIcon  fontSize='small' sx={{height:10,width:10}}/>\r\n                        </Fab>\r\n                    </span> */}\r\n                    </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} md={12} sx={{ display: 'flex', justifyContent: 'space-between', flex: 1, width: '100%', flexDirection: 'row', minWidth: '400px' }}>\r\n                <Grid item xs={10}>\r\n                    <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '390px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                        <Accordion\r\n                            key={`card-lps`}\r\n                            expanded={lpsExpanded}\r\n                            onChange={(event, expanded: boolean) => handleAccordionExp(expanded, 'lps')}\r\n                            sx={{ marginBottom: '0.5em', backgroundColor: theme.palette.background.paper, width: '390px', borderLeft: `1px solid rgba(133, 133, 133,0.5)`, borderRight: `1px solid rgba(133, 133, 133,0.5)`, borderTop: `1px solid rgba(133, 133, 133,0.5)`, borderBottom: 'none' }}\r\n                        >\r\n                            <AccordionSummary\r\n                                sx={{ height: '40px' }}\r\n                                /* sx={{\r\n                                    'cursor': 'pointer',\r\n                                    'width': '100%',\r\n                                    'minHeight': '68px !important',\r\n                                    'paddingTop': 0,\r\n                                    'backgroundColor': theme.palette.background.paper,\r\n                                   \r\n                                }} */\r\n                                expandIcon={\r\n                                    <IconButton>\r\n                                        <ExpandMoreIcon\r\n                                            sx={{ pointerEvents: 'auto', cursor: 'pointer' }} />\r\n                                    </IconButton>\r\n                                }\r\n                            >\r\n                                <Grid container\r\n                                    sx={{ display: 'flex', flex: 1, height: '100%', width: '100%', alignItems: 'center' }}>\r\n                                    <Grid container>\r\n                                        <Typography variant='body1' sx={{ color: theme.palette.text.primary, fontWeight: 600 }}>LPs</Typography>\r\n                                    </Grid>\r\n                                    <Grid container>\r\n                                        <Typography variant='body2' sx={{ color: theme.palette.mode === 'light' ? 'rgba(69, 69, 69, 0.7)' : darken(theme.palette.text.primary, 0.4), fontWeight: 400, fontSize: '14px' }}>{`${selectedFund?.lps?.length} LPs`}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails\r\n                                sx={{\r\n                                    backgroundColor: theme.palette.background.paper,\r\n                                    width: '100%', padding: '0.1em', display: 'flex', height: '100%', pointerEvents: 'auto'\r\n                                }}>\r\n                                {lpsExpanded && <FundLPsStepContentTable setEditPageName={setEditPageName} />}\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={2} sx={{ display: 'flex', justifyContent: 'end', flex: 1, marginLeft: '2em', alignItems: 'start', marginTop: '0.6em' }}>\r\n                    <Tooltip title={\"Add a new commitment from an LP\"}>\r\n                        <Box\r\n                            sx={{\r\n                                width: '30px',\r\n                                height: '30px',\r\n                                bgcolor: theme.palette.primary.main,\r\n                                color: 'white',\r\n                                borderRadius: '50%',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.4)',\r\n                                transition: 'box-shadow 0.2s ease-in-out',\r\n                                '&:hover': {\r\n                                    cursor: 'pointer',\r\n                                    boxShadow: '0px 6px 12px rgba(0, 0, 0, 0.6)',\r\n                                    backgroundColor: darken(theme.palette.primary.main, 0.2)\r\n                                }\r\n                            }}\r\n                            onClick={() => { handleOpenChildDialog('fundLPs') }}\r\n                        >\r\n                            <AddRoundedIcon fontSize='small' sx={{ height: 20, width: 20 }} />\r\n                        </Box>\r\n                    </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} md={12} sx={{ display: 'flex', justifyContent: 'space-between', flex: 1, width: '100%', flexDirection: 'row', minWidth: '400px' }}>\r\n                <Grid item xs={10}>\r\n                    <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '390px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                        <Accordion\r\n                            key={`card-pcos`}\r\n                            expanded={pcosExpanded}\r\n                            onChange={(event, expanded: boolean) => handleAccordionExp(expanded, 'pcos')}\r\n                            sx={{ marginBottom: '0.5em', backgroundColor: theme.palette.background.paper, width: '390px', borderLeft: `1px solid rgba(133, 133, 133,0.5)`, borderRight: `1px solid rgba(133, 133, 133,0.5)`, borderTop: `1px solid rgba(133, 133, 133,0.5)`, borderBottom: 'none' }}\r\n                        >\r\n                            <AccordionSummary\r\n                                sx={{ height: '40px' }}\r\n                                /* sx={{\r\n                                    'cursor': 'pointer',\r\n                                    'width': '100%',\r\n                                    'minHeight': '68px !important',\r\n                                    'paddingTop': 0,\r\n                                    'backgroundColor': theme.palette.background.paper,\r\n                                   \r\n                                }} */\r\n                                expandIcon={\r\n                                    <IconButton>\r\n                                        <ExpandMoreIcon\r\n                                            sx={{ pointerEvents: 'auto', cursor: 'pointer' }} />\r\n                                    </IconButton>\r\n                                }\r\n                            >\r\n                                <Grid container\r\n                                    sx={{ display: 'flex', flex: 1, height: '100%', width: '100%', alignItems: 'center' }}>\r\n                                    <Grid container>\r\n                                        <Typography variant='body1' sx={{ color: theme.palette.text.primary, fontWeight: 600 }}>PCOs</Typography>\r\n                                    </Grid>\r\n                                    <Grid container>\r\n                                        <Typography variant='body2' sx={{ color: theme.palette.mode === 'light' ? 'rgba(69, 69, 69, 0.7)' : darken(theme.palette.text.primary, 0.4), fontWeight: 400, fontSize: '14px' }}>{`${selectedFund?.pcos?.length} PCOs`}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails\r\n                                sx={{\r\n                                    backgroundColor: theme.palette.background.paper,\r\n                                    width: '100%', padding: '0.1em', display: 'flex', height: '100%', pointerEvents: 'auto'\r\n                                }}>\r\n                                {pcosExpanded && <FundPCOsStepContentTable setEditPageName={setEditPageName} />}\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={2} sx={{ display: 'flex', justifyContent: 'end', flex: 1, marginLeft: '2em', alignItems: 'start', marginTop: '0.6em' }}>\r\n                    <Tooltip title={\"Add a new investment to a PCO\"}>\r\n                        <Box\r\n                            sx={{\r\n                                width: '30px',\r\n                                height: '30px',\r\n                                bgcolor: theme.palette.primary.main,\r\n                                color: 'white',\r\n                                borderRadius: '50%',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.4)',\r\n                                transition: 'box-shadow 0.2s ease-in-out',\r\n                                '&:hover': {\r\n                                    cursor: 'pointer',\r\n                                    boxShadow: '0px 6px 12px rgba(0, 0, 0, 0.6)',\r\n                                    backgroundColor: darken(theme.palette.primary.main, 0.2)\r\n                                }\r\n                            }}\r\n                            onClick={() => { handleOpenChildDialog('fundPCOs') }}\r\n                        >\r\n                            <AddRoundedIcon fontSize='small' sx={{ height: 20, width: 20 }} />\r\n                        </Box>\r\n                    </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} md={12} sx={{ display: 'flex', justifyContent: 'space-between', flex: 1, width: '100%', flexDirection: 'row', minWidth: '400px' }}>\r\n                <Grid item xs={10}>\r\n                    <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '390px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                        <Accordion\r\n                            key={`card-exits`}\r\n                            expanded={exitsExpanded}\r\n                            onChange={(event, expanded: boolean) => handleAccordionExp(expanded, 'exits')}\r\n                            sx={{ marginBottom: '0.5em', backgroundColor: theme.palette.background.paper, width: '390px', borderLeft: `1px solid rgba(133, 133, 133,0.5)`, borderRight: `1px solid rgba(133, 133, 133,0.5)`, borderTop: `1px solid rgba(133, 133, 133,0.5)`, borderBottom: 'none' }}\r\n                        >\r\n                            <AccordionSummary\r\n                                sx={{ height: '40px' }}\r\n                                /* sx={{\r\n                                    'cursor': 'pointer',\r\n                                    'width': '100%',\r\n                                    'minHeight': '68px !important',\r\n                                    'paddingTop': 0,\r\n                                    'backgroundColor': theme.palette.background.paper,\r\n                                   \r\n                                }} */\r\n                                expandIcon={\r\n                                    <IconButton>\r\n                                        <ExpandMoreIcon\r\n                                            sx={{ pointerEvents: 'auto', cursor: 'pointer' }} />\r\n                                    </IconButton>\r\n                                }\r\n                            >\r\n                                <Grid container\r\n                                    sx={{ display: 'flex', flex: 1, height: '100%', width: '100%', alignItems: 'center' }}>\r\n                                    <Grid container>\r\n                                        <Typography variant='body1' sx={{ color: theme.palette.text.primary, fontWeight: 600 }}>Exits</Typography>\r\n                                    </Grid>\r\n                                    <Grid container>\r\n                                        <Typography variant='body2' sx={{ color: theme.palette.mode === 'light' ? 'rgba(69, 69, 69, 0.7)' : darken(theme.palette.text.primary, 0.4), fontWeight: 400, fontSize: '14px' }}>{`${numExit} Exits`}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails\r\n                                sx={{\r\n                                    backgroundColor: theme.palette.background.paper,\r\n                                    width: '100%', padding: '0.1em', display: 'flex', height: '100%', pointerEvents: 'auto'\r\n                                }}>\r\n                                {exitsExpanded && <FundExitsStepContentTable setEditPageName={setEditPageName} />}\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={2} sx={{ display: 'flex', justifyContent: 'end', flex: 1, marginLeft: '2em', alignItems: 'start', marginTop: '0.6em' }}>\r\n                    <Tooltip title={\"Add a new exit\"}>\r\n                        <Box\r\n                            sx={{\r\n                                width: '30px',\r\n                                height: '30px',\r\n                                bgcolor: theme.palette.primary.main,\r\n                                color: 'white',\r\n                                borderRadius: '50%',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.4)',\r\n                                transition: 'box-shadow 0.2s ease-in-out',\r\n                                '&:hover': {\r\n                                    cursor: 'pointer',\r\n                                    boxShadow: '0px 6px 12px rgba(0, 0, 0, 0.6)',\r\n                                    backgroundColor: darken(theme.palette.primary.main, 0.2)\r\n                                }\r\n                            }}\r\n                            onClick={() => { handleOpenChildDialog('fundExits') }}\r\n                        >\r\n                            <AddRoundedIcon fontSize='small' sx={{ height: 20, width: 20 }} />\r\n                        </Box>\r\n                    </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n            {addChildDialogOpen && <AddChildDialogComponent open={addChildDialogOpen} pageName={pageName} pageTitle={pageName === 'fundCommitments' ? 'Add New Commitment' : pageName === 'fundLPs' ? 'Add New Comitment From LP' : pageName === 'fundPCOs' ? 'Add New Investment To PCO' : 'Add New Exit'} setDialogOpen={setAddChildDialogOpen} />}\r\n            {editChildDialogOpen && <EditChildDialogComponent open={editChildDialogOpen} pageName={editPageName} pageTitle={editPageName === 'fundCommitments' ? 'Edit Commitment' : editPageName === 'fundLPS' ? 'Edit Commitment From LP' : editPageName === 'fundPCOs' ? 'Edit Investment To PCO' : 'Edit Exit'} />}\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default CommitmentsStepContentComponent;","import { Autocomplete, AutocompleteRenderInputParams, Box, Divider, Fab, Grid, IconButton, InputAdornment, TextField, Typography } from '@mui/material';\r\nimport { useCallback, useState } from 'react';\r\nimport { Theme } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport { GridApi } from 'ag-grid-community';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { CountryList } from '../../../../../models/shared/sharedModels';\r\nimport { LP, NewLP } from '../../../../../models/lps/lpModels';\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { DatePicker } from '@mui/x-date-pickers';\r\nimport { amountValueFormatter } from '../../../../../helpers/app';\r\nimport { FundSummary } from '../../../../../models/funds/fundModels';\r\n\r\nconst autocompleteInputStyles = makeStyles((theme: Theme) => ({\r\n    autocomplete: {\r\n        'borderRadius': 5,\r\n        'backgroundColor': theme.palette.background.paper,\r\n        '& input::placeholder': {\r\n            color: theme.palette.text.primary\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: theme.palette.text.primary,\r\n            opacity: 0.8\r\n        }\r\n    },\r\n    textInput: {\r\n        'color': theme.palette.text.primary,\r\n        'fontWeight': 800,\r\n        'fontFamily': 'Raleway',\r\n        height: '2.2em',\r\n        /* 'height': '2.5em', */\r\n        'fontSize': 10,\r\n        '& .MuiIconButton-label': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chart: {\r\n            flex: 1,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n        },\r\n        fabIcon: {\r\n            marginLeft: 10,\r\n            alignSelf: 'center',\r\n        },\r\n        searchBox: {\r\n            width: '440px',\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        datePickers: {\r\n            width: '100%',\r\n            flex: 1,\r\n        },\r\n        textField: {\r\n            width: '435px',\r\n            backgroundColor: theme.palette.background.paper,\r\n            borderColor: theme.palette.text.primary,\r\n            color: theme.palette.text.primary,\r\n            borderRadius: 5,\r\n            '& .MuiSvgIcon-root':\r\n            {\r\n                color: theme.palette.text.primary\r\n            },\r\n\r\n            '& label': {\r\n                '&.Mui-focused': {\r\n                    color: theme.palette.text.primary\r\n                }\r\n            },\r\n        },\r\n        textFildsSmall: {\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        inputRoot: {\r\n            height: '1em',\r\n            'borderRadius': 5,\r\n            'backgroundColor': 'transparent',\r\n            /*         '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'black'\r\n                    },*/\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.primary.main\r\n            },\r\n            /*  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'black'\r\n              }, */\r\n            '& .MuiChip-root': {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: 'transparent',\r\n                borderRadius: 5\r\n            },\r\n            '& .MuiChip-deleteIconSmall': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        option: {\r\n            'background': theme.palette.background.paper,\r\n            '&:hover': {\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 400,\r\n                fontFamily: 'Raleway'\r\n            },\r\n            '&[aria-selected=\"true\"]': {\r\n                background: theme.palette.background.paper,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 700,\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        popupIndicator: {\r\n            '&.MuiIconButton-root': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        clearIndicator: {\r\n            color: theme.palette.text.primary\r\n        },\r\n    }),\r\n);\r\nconst LPTypes = [\r\n    \"Corporate\",\r\n    \"General Partner\",\r\n    \"Individual\",\r\n    \"Institutional\",\r\n];\r\n\r\ninterface FundFinancialsStepContentProps {\r\n    selectedFund: FundSummary | null,\r\n    setSelectedFund: React.Dispatch<React.SetStateAction<FundSummary | null>>,\r\n    disabled: boolean,\r\n    setDisabled: any\r\n}\r\n\r\nconst FundFinancialsStepContentComponent = ({ selectedFund, setSelectedFund, disabled, setDisabled }: FundFinancialsStepContentProps) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const autocompleteInputClasses = autocompleteInputStyles();\r\n    const [commitedCapital, setCommittesCapital] = useState<number | null>(selectedFund?.sumCommittedAmountFundCcy ?? null);\r\n    const [baseCapital, setBaseCapital] = useState<number | null>(selectedFund?.sumBaseAmountFundCccy ?? null);\r\n    const [terminatedCommited, setTerminatedCommited] = useState<number | null>(selectedFund?.terminatedCommitedCapital ?? null);\r\n    const [terminatedBase, setTerminatedBase] = useState<number | null>(selectedFund?.terminatedBaseCapital ?? null);\r\n    const [currency, setCurrency] = useState<string>(selectedFund?.currency ?? '');\r\n\r\n    const onValueChange = (value: string, field: string) => {\r\n        if (selectedFund) {\r\n            switch (field) {\r\n                case 'commitedCapital':\r\n                    setCommittesCapital(+value);\r\n                    setSelectedFund({\r\n                        ...selectedFund,\r\n                        sumCommittedAmountFundCcy: +value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'baseCapital':\r\n                    setBaseCapital(+value);\r\n                    setSelectedFund({\r\n                        ...selectedFund,\r\n                        sumBaseAmountFundCccy: +value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'terminatedCommited':\r\n                    setTerminatedCommited(+value);\r\n                    setSelectedFund({\r\n                        ...selectedFund,\r\n                        terminatedCommitedCapital: +value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'terminatedBase':\r\n                    setTerminatedBase(+value);\r\n                    setSelectedFund({\r\n                        ...selectedFund,\r\n                        terminatedBaseCapital: +value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'currency':\r\n                    setCurrency(value);\r\n                    setSelectedFund({\r\n                        ...selectedFund,\r\n                        currency: value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{ flex: 1, width: '100%', marginTop: '0.2em' }}>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label='Committed Capital'\r\n                        aria-label=\"name\"\r\n                        value={commitedCapital ? amountValueFormatter(commitedCapital, '') : null}\r\n                        onChange={(e) => onValueChange(e.target.value, 'commitedCapital')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label='Base Capital'\r\n                        aria-label=\"name\"\r\n                        value={baseCapital ? amountValueFormatter(baseCapital, '') : null}\r\n                        onChange={(e) => onValueChange(e.target.value, 'baseCapital')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"website\"\r\n                        label='Of which terminated (Commited Capital)'\r\n                        value={terminatedCommited ? amountValueFormatter(terminatedCommited, '') : null}\r\n                        onChange={(e) => onValueChange(e.target.value, 'terminatedCommited')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label='Of which terminated (Base Capital)'\r\n                        aria-label=\"name\"\r\n                        value={terminatedBase ? amountValueFormatter(terminatedBase, '') : null}\r\n                        onChange={(e) => onValueChange(e.target.value, 'terminatedBase')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"website\"\r\n                        label='Fund Currency'\r\n                        value={currency ?? null}\r\n                        onChange={(e) => onValueChange(e.target.value, 'currency')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default FundFinancialsStepContentComponent;","import { Autocomplete, AutocompleteRenderInputParams, Box, Divider, Fab, Grid, IconButton, InputAdornment, TextField, Typography } from '@mui/material';\r\nimport { useCallback, useState } from 'react';\r\nimport { Theme } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport { GridApi } from 'ag-grid-community';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { CountryList } from '../../../../../models/shared/sharedModels';\r\nimport { LP, NewLP } from '../../../../../models/lps/lpModels';\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { DatePicker } from '@mui/x-date-pickers';\r\nimport { FundSummary } from '../../../../../models/funds/fundModels';\r\n\r\nconst autocompleteInputStyles = makeStyles((theme: Theme) => ({\r\n    autocomplete: {\r\n        'borderRadius': 5,\r\n        'backgroundColor': theme.palette.background.paper,\r\n        '& input::placeholder': {\r\n            color: theme.palette.text.primary\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: theme.palette.text.primary,\r\n            opacity: 0.8\r\n        }\r\n    },\r\n    textInput: {\r\n        'color': theme.palette.text.primary,\r\n        'fontWeight': 800,\r\n        'fontFamily': 'Raleway',\r\n        height: '2.2em',\r\n        /* 'height': '2.5em', */\r\n        'fontSize': 10,\r\n        '& .MuiIconButton-label': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chart: {\r\n            flex: 1,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n        },\r\n        fabIcon: {\r\n            marginLeft: 10,\r\n            alignSelf: 'center',\r\n        },\r\n        searchBox: {\r\n            width: '440px',\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        datePickers: {\r\n            width: '100%',\r\n            flex: 1,\r\n        },\r\n        textField: {\r\n            width: '435px',\r\n            backgroundColor: theme.palette.background.paper,\r\n            borderColor: theme.palette.text.primary,\r\n            color: theme.palette.text.primary,\r\n            borderRadius: 5,\r\n            '& .MuiSvgIcon-root':\r\n            {\r\n                color: theme.palette.text.primary\r\n            },\r\n\r\n            '& label': {\r\n                '&.Mui-focused': {\r\n                    color: theme.palette.text.primary\r\n                }\r\n            },\r\n        },\r\n        textFildsSmall: {\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        inputRoot: {\r\n            height: '1em',\r\n            'borderRadius': 5,\r\n            'backgroundColor': 'transparent',\r\n            /*         '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'black'\r\n                    },*/\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.primary.main\r\n            },\r\n            /*  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'black'\r\n              }, */\r\n            '& .MuiChip-root': {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: 'transparent',\r\n                borderRadius: 5\r\n            },\r\n            '& .MuiChip-deleteIconSmall': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        option: {\r\n            'background': theme.palette.background.paper,\r\n            '&:hover': {\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 400,\r\n                fontFamily: 'Raleway'\r\n            },\r\n            '&[aria-selected=\"true\"]': {\r\n                background: theme.palette.background.paper,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 700,\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        popupIndicator: {\r\n            '&.MuiIconButton-root': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        clearIndicator: {\r\n            color: theme.palette.text.primary\r\n        },\r\n    }),\r\n);\r\nconst LPTypes = [\r\n    \"Corporate\",\r\n    \"General Partner\",\r\n    \"Individual\",\r\n    \"Institutional\",\r\n];\r\n\r\ninterface KPIAndIRRStepContentProps {\r\n    selectedFund: FundSummary | null,\r\n    setSelectedFund: React.Dispatch<React.SetStateAction<FundSummary | null>>,\r\n    disabled: boolean,\r\n    setDisabled: any\r\n}\r\n\r\nconst KPIAndIRRStepContentComponent = ({ selectedFund, setSelectedFund, disabled, setDisabled }: KPIAndIRRStepContentProps) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const autocompleteInputClasses = autocompleteInputStyles();\r\n    const [netDPI, setNetDPI] = useState<number | null>(selectedFund?.kpis?.netDPI ? selectedFund?.kpis?.netDPI : null);\r\n    const [grossDPI, setGrossDPI] = useState<number | null>(selectedFund?.kpis?.grossDPI ? selectedFund?.kpis?.grossDPI : null);\r\n    const [netTVPI, setNetTVPI] = useState<number | null>(selectedFund?.kpis?.netTVPI ? selectedFund?.kpis?.netTVPI : null);\r\n    const [grossTVPI, setGrossTVPI] = useState<number | null>(selectedFund?.kpis?.grossTVPI ? selectedFund?.kpis?.grossTVPI : null);\r\n    const [netIRR, setNetIRR] = useState<number | null>(selectedFund?.kpis?.netIRR ? selectedFund?.kpis?.netIRR : null);\r\n    const [grossIRR, setGrossIRR] = useState<number | null>(selectedFund?.kpis?.grossIRR ? selectedFund?.kpis?.grossIRR : null);\r\n\r\n    const onValueChange = (value: string, field: string) => {\r\n        if (selectedFund) {\r\n            switch (field) {\r\n                case 'netDPI':\r\n                    setNetDPI(+value);\r\n                    setSelectedFund({\r\n                        ...selectedFund,\r\n                        kpis: {\r\n                            ...selectedFund.kpis,\r\n                            netDPI: +value\r\n                        }\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'grossDPI':\r\n                    setGrossDPI(+value);\r\n                    setSelectedFund({\r\n                        ...selectedFund,\r\n                        kpis: {\r\n                            ...selectedFund.kpis,\r\n                            grossDPI: +value\r\n                        }\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'netTVPI':\r\n                    setNetTVPI(+value);\r\n                    setSelectedFund({\r\n                        ...selectedFund,\r\n                        kpis: {\r\n                            ...selectedFund.kpis,\r\n                            netTVPI: +value\r\n                        }\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'grossTVPI':\r\n                    setGrossTVPI(+value);\r\n                    setSelectedFund({\r\n                        ...selectedFund,\r\n                        kpis: {\r\n                            ...selectedFund.kpis,\r\n                            grossTVPI: +value\r\n                        }\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'netIRR':\r\n                    setNetIRR(+value);\r\n                    setSelectedFund({\r\n                        ...selectedFund,\r\n                        kpis: {\r\n                            ...selectedFund.kpis,\r\n                            netIRR: +value\r\n                        }\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'grossIRR':\r\n                    setGrossIRR(+value);\r\n                    setSelectedFund({\r\n                        ...selectedFund,\r\n                        kpis: {\r\n                            ...selectedFund.kpis,\r\n                            grossIRR: +value\r\n                        }\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{ flex: 1, width: '100%', marginTop: '0.2em' }}>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label='Net DPI'\r\n                        aria-label=\"name\"\r\n                        value={netDPI}\r\n                        onChange={(e) => onValueChange(e.target.value, 'netDPI')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label='Gross DPI'\r\n                        aria-label=\"name\"\r\n                        value={grossDPI}\r\n                        onChange={(e) => onValueChange(e.target.value, 'grossDPI')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item style={{ paddingTop: '3em' }}>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"website\"\r\n                        label='Net TVPI'\r\n                        value={netTVPI}\r\n                        onChange={(e) => onValueChange(e.target.value, 'netTVPI')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item style={{ paddingBottom: '2em' }}>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"baseCapital\"\r\n                        label='Gross TVPI'\r\n                        value={grossTVPI}\r\n                        onChange={(e) => onValueChange(e.target.value, 'grossTVPI')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"website\"\r\n                        label='Net IRR'\r\n                        value={netIRR ? (netIRR * 100).toFixed(2) : null}\r\n                        onChange={(e) => onValueChange(e.target.value, 'netIRR')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"website\"\r\n                        label='Gross IRR'\r\n                        value={grossIRR}\r\n                        onChange={(e) => onValueChange(e.target.value, 'grossIRR')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default KPIAndIRRStepContentComponent;","import { Grid, Step, StepConnector, StepContent, StepLabel, Stepper, Typography } from '@mui/material';\r\nimport { useState } from 'react';\r\nimport { withStyles } from '@mui/styles';\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Check } from '@mui/icons-material';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../../redux/slices/rootSlice';\r\nimport GeneralInformationStepContentComponent from './GeneralInformationStepContent';\r\nimport CommitmentsStepContentComponent from './CommitmentsStepContent';\r\nimport FundFinancialsStepContentComponent from './FundFinancialsStepContent';\r\nimport KPIAndIRRStepContentComponent from './KPIAndIRRStepContent';\r\nimport { FundSummary } from '../../../../../models/funds/fundModels';\r\n\r\nconst CustomStepConnector = withStyles({\r\n    alternativeLabel: {\r\n        top: 50,\r\n        left: 'calc(-50% + 16px)',\r\n        right: 'calc(50% + 16px)',\r\n    },\r\n    active: {\r\n        '& $line': {\r\n            borderColor: '#004A00',\r\n        },\r\n    },\r\n    completed: {\r\n        '& $line': {\r\n            borderColor: '#008000',\r\n        },\r\n    },\r\n    line: {\r\n        borderColor: '#ccc',\r\n        borderTopWidth: 3, // adjust this to make the line thicker\r\n        borderRadius: 1,\r\n        height: '50px',\r\n        marginLeft: '3px'\r\n    },\r\n})(StepConnector);\r\n\r\nconst CustomStepIcon = (props: any) => {\r\n    const { active, completed, icon, onClick } = props;\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <div >\r\n            {icon && <div style={{ width: '2em', height: '2em', borderRadius: '50%', backgroundColor: active ? '#454545' : completed ? theme.palette.success.main : '#ccc', cursor: 'pointer', display: 'flex', alignItems: 'center', justifyContent: 'center', }} onClick={onClick} >\r\n                {completed && <Check sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', color: 'white' }} />}\r\n            </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst getSteps = () => {\r\n    return ['General Information', 'Commitments', 'Fund Financials', 'KPIs & IRR'];\r\n};\r\n\r\ninterface EditFundBasicContentProps {\r\n    steps: string[],\r\n    activeStep: number,\r\n    setActiveStep: React.Dispatch<React.SetStateAction<number>>,\r\n    selectedFund: FundSummary | null,\r\n    setSelectedFund: React.Dispatch<React.SetStateAction<FundSummary | null>>,\r\n    disabled: boolean,\r\n    setDisabled: any\r\n}\r\n\r\nconst FundBasicEditContentComponent = ({ steps, activeStep, setActiveStep, selectedFund, setSelectedFund, disabled, setDisabled }: EditFundBasicContentProps) => {\r\n    const theme = useTheme();\r\n    const [activeLabel, setActiveLabel] = useState<string>(steps[0]);\r\n\r\n    /**\r\n     * Changes the current active step\r\n     * @param label\r\n     */\r\n    const handleSetActiveStep = (label: string) => {\r\n        if (label) {\r\n            setActiveLabel(label);\r\n            const index = steps?.indexOf(label);\r\n            setActiveStep(index);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid container sx={{ display: 'flex', justifyContent: 'flex-start', alignItems: 'start', flexDirection: 'column' }}>\r\n            <Grid item xs={3} sx={{ marginLeft: '1em' }}>\r\n                <Stepper orientation=\"vertical\" activeStep={activeStep} connector={<CustomStepConnector />}>\r\n                    {steps.map((label, index) => (\r\n                        <Step key={label}>\r\n                            <StepLabel StepIconComponent={CustomStepIcon} onClick={() => handleSetActiveStep(label)} >\r\n                            </StepLabel>\r\n                            <Typography sx={{ fontSize: '14px', textAlign: 'center', width: '80px', marginLeft: '-1.5em', fontWeight: activeLabel === label ? 600 : 400, color: activeStep > index ? theme.palette.success.main : '#454545' }}>{label}</Typography>\r\n                            <StepContent sx={{ mt: 2, ml: 2 }}>\r\n                            </StepContent>\r\n\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n            </Grid>\r\n            <Grid item xs={9} sx={{ minWidth: '450px', marginLeft: '2.3em' }}>\r\n                {activeStep === 0 ? <GeneralInformationStepContentComponent selectedFund={selectedFund} setSelectedFund={setSelectedFund} disabled={disabled} setDisabled={setDisabled}/>\r\n                    : activeStep === 1\r\n                        ? <CommitmentsStepContentComponent selectedFund={selectedFund} setSelectedFund={setSelectedFund} disabled={disabled} setDisabled={setDisabled}/>\r\n                        : activeStep === 2\r\n                            ? <FundFinancialsStepContentComponent selectedFund={selectedFund} setSelectedFund={setSelectedFund} disabled={disabled} setDisabled={setDisabled}/>\r\n                            : <KPIAndIRRStepContentComponent selectedFund={selectedFund} setSelectedFund={setSelectedFund} disabled={disabled} setDisabled={setDisabled}/>}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default FundBasicEditContentComponent;\r\n","import { Autocomplete, AutocompleteRenderInputParams, Box, Divider, Fab, Grid, IconButton, InputAdornment, TextField, Typography } from '@mui/material';\r\nimport { useCallback, useState } from 'react';\r\nimport { Theme } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport { GridApi } from 'ag-grid-community';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { CountryList } from '../../../../../models/shared/sharedModels';\r\nimport { LP, NewLP } from '../../../../../models/lps/lpModels';\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { DatePicker } from '@mui/x-date-pickers';\r\nimport moment from 'moment';\r\nimport { FundSummary } from '../../../../../models/funds/fundModels';\r\nimport { PCOSummary } from '../../../../../models/pcos/pcoModels';\r\n\r\nconst autocompleteInputStyles = makeStyles((theme: Theme) => ({\r\n    autocomplete: {\r\n        'borderRadius': 5,\r\n        'backgroundColor': theme.palette.background.paper,\r\n        '& input::placeholder': {\r\n            color: theme.palette.text.primary\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: theme.palette.text.primary,\r\n            opacity: 0.8\r\n        }\r\n    },\r\n    textInput: {\r\n        'color': theme.palette.text.primary,\r\n        'fontWeight': 800,\r\n        'fontFamily': 'Raleway',\r\n        height: '2.2em',\r\n        /* 'height': '2.5em', */\r\n        'fontSize': 10,\r\n        '& .MuiIconButton-label': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chart: {\r\n            flex: 1,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n        },\r\n        fabIcon: {\r\n            marginLeft: 10,\r\n            alignSelf: 'center',\r\n        },\r\n        searchBox: {\r\n            width: '440px',\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        datePickers: {\r\n            width: '100%',\r\n            flex: 1,\r\n        },\r\n        textField: {\r\n            width: '440px',\r\n            backgroundColor: theme.palette.background.paper,\r\n            borderColor: theme.palette.text.primary,\r\n            color: theme.palette.text.primary,\r\n            borderRadius: 5,\r\n            '& .MuiSvgIcon-root':\r\n            {\r\n                color: theme.palette.text.primary\r\n            },\r\n\r\n            '& label': {\r\n                '&.Mui-focused': {\r\n                    color: theme.palette.text.primary\r\n                }\r\n            },\r\n        },\r\n        textFildsSmall: {\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        inputRoot: {\r\n            height: '1em',\r\n            'borderRadius': 5,\r\n            'backgroundColor': 'transparent',\r\n            /*         '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'black'\r\n                    },*/\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.primary.main\r\n            },\r\n            /*  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'black'\r\n              }, */\r\n            '& .MuiChip-root': {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: 'transparent',\r\n                borderRadius: 5\r\n            },\r\n            '& .MuiChip-deleteIconSmall': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        option: {\r\n            'background': theme.palette.background.paper,\r\n            '&:hover': {\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 400,\r\n                fontFamily: 'Raleway'\r\n            },\r\n            '&[aria-selected=\"true\"]': {\r\n                background: theme.palette.background.paper,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 700,\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        popupIndicator: {\r\n            '&.MuiIconButton-root': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        clearIndicator: {\r\n            color: theme.palette.text.primary\r\n        },\r\n    }),\r\n);\r\n\r\nconst PCOStatus = [\r\n    \"Unrealized\",\r\n    \"Realized\"\r\n];\r\n\r\ninterface GeneralInformationStepContentProps {\r\n    selectedPCO: PCOSummary | null,\r\n    setSelectedPCO: React.Dispatch<React.SetStateAction<PCOSummary | null>>,\r\n    disabled: boolean,\r\n    setDisabled: any\r\n}\r\n\r\nconst GeneralInformationStepContentComponent = ({ selectedPCO, setSelectedPCO, disabled, setDisabled }: GeneralInformationStepContentProps) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const autocompleteInputClasses = autocompleteInputStyles();\r\n    const [domicile, setDomicile] = useState<string | null>(selectedPCO?.country ?? '');\r\n    const [sector, setSector] = useState<string | null>(selectedPCO?.emeraldIndustry2 ?? '');\r\n    const [dateExit, setDateExit] = useState<string>(selectedPCO?.dateExit ?? '');\r\n    const [currentStage, setCurrentStage] = useState<string>(selectedPCO?.currentStage ?? '');\r\n    const [address, setAddress] = useState<string>(selectedPCO?.address ? selectedPCO.address?.split(',')[0] : '');\r\n    const [boardSeat, setBoardSeat] = useState<string | number>(selectedPCO?.boardSeat ?? '');\r\n    const [dateInvestment, setDateInvestment] = useState<string>(selectedPCO?.dateInitalInvestment ?? '');\r\n    const [currentDealTeam, setCurrentDealTeam] = useState<string>(selectedPCO?.currentDealteam ?? '');\r\n    const [status, setStatus] = useState<string | null>(selectedPCO?.status ?? '');\r\n    const [website, setWebsite] = useState<string | null>(selectedPCO?.website ?? '');\r\n\r\n    const onValueChange = (value: string, field: string) => {\r\n        if (selectedPCO) {\r\n            switch (field) {\r\n                case 'domicile':\r\n                    setDomicile(value);\r\n                    setSelectedPCO({\r\n                        ...selectedPCO,\r\n                        country: value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'address':\r\n                    setAddress(value);\r\n                    setSelectedPCO({\r\n                        ...selectedPCO,\r\n                        address: value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'sector':\r\n                    setSector(value);\r\n                    setSelectedPCO({\r\n                        ...selectedPCO,\r\n                        emeraldIndustry2: value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'currentStage':\r\n                    setCurrentStage(value);\r\n                    setSelectedPCO({\r\n                        ...selectedPCO,\r\n                        currentStage: value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'status':\r\n                    setStatus(value);\r\n                    setSelectedPCO({\r\n                        ...selectedPCO,\r\n                        status: value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'website':\r\n                    setWebsite(value);\r\n                    setSelectedPCO({\r\n                        ...selectedPCO,\r\n                        website: value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'boardSeat':\r\n                    setBoardSeat(value);\r\n                    setSelectedPCO({\r\n                        ...selectedPCO,\r\n                        boardSeat: value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'currentDealteam':\r\n                    setCurrentDealTeam(value);\r\n                    setSelectedPCO({\r\n                        ...selectedPCO,\r\n                        currentDealteam: value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    const onDateChange = (value: any, field: string) => {\r\n        if (field === 'dateInitalInvestment') {\r\n            setDateInvestment(value);\r\n            if (selectedPCO) {\r\n                setSelectedPCO({\r\n                    ...selectedPCO,\r\n                    dateInitalInvestment: value\r\n                });\r\n            }\r\n        } else {\r\n            setDateExit(value);\r\n            if (selectedPCO) {\r\n                setSelectedPCO({\r\n                    ...selectedPCO,\r\n                    dateExit: value\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{ flex: 1, width: '100%', marginTop: '0.2em' }}>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label='Domicile'\r\n                        aria-label=\"name\"\r\n                        value={domicile}\r\n                        onChange={(e) => onValueChange(e.target.value, 'domicile')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label='Address'\r\n                        aria-label=\"name\"\r\n                        value={address}\r\n                        onChange={(e) => onValueChange(e.target.value, 'address')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label='Website'\r\n                        aria-label=\"name\"\r\n                        value={website}\r\n                        onChange={(e) => onValueChange(e.target.value, 'website')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Divider sx={{ marginTop: '1.5em', marginBottom: '0.5em', marginLeft: '1em', minWidth: '440px' }} />\r\n            <Grid item >\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '440px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <DatePicker\r\n                        className={classes.datePickers}\r\n                        inputFormat={'dd/MM/yyyy'}\r\n                        disableFuture\r\n                        value={dateInvestment ? moment(new Date(dateInvestment)).format('DD MMM YYYY') : null}\r\n                        onChange={(e) => onDateChange(e ?? '', 'dateInitalInvestment')}\r\n                        disableHighlightToday\r\n                        renderInput={(props: any) =>\r\n                            <TextField {...props}\r\n                                label={'Date Invested'}\r\n                                variant={'outlined'}\r\n                                size={'small'}\r\n                                className={classes.textField}\r\n                                InputLabelProps={{\r\n                                    sx: {\r\n                                        fontSize: 'small'\r\n                                    }\r\n                                }}\r\n                            />}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"website\"\r\n                        label='Sector'\r\n                        value={sector}\r\n                        onChange={(e) => onValueChange(e.target.value, 'sector')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"baseCapital\"\r\n                        label='Current Stage'\r\n                        value={currentStage}\r\n                        onChange={(e) => onValueChange(e.target.value, 'currentStage')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Divider sx={{ marginTop: '1.5em', marginBottom: '0.5em', marginLeft: '1em', minWidth: '440px' }} />\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"baseCapital\"\r\n                        label='Board Seat'\r\n                        value={boardSeat}\r\n                        onChange={(e) => onValueChange(e.target.value, 'boardSeat')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"baseCapital\"\r\n                        label='Current Deal Team'\r\n                        value={currentDealTeam}\r\n                        onChange={(e) => onValueChange(e.target.value, 'currentDealTeam')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '440px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <Autocomplete\r\n                        id={'fundsAutocomplete'}\r\n                        popupIcon={<ExpandMoreIcon />}\r\n                        size={'small'}\r\n                        autoHighlight={true}\r\n                        autoSelect={true}\r\n                        autoComplete={false}\r\n                        classes={classes}\r\n                        sx={{ marginRight: '1em', width: '440px' }}\r\n                        isOptionEqualToValue={(option, value) => option === value}\r\n                        value={status ?? ''}\r\n                        options={PCOStatus.slice()}\r\n                        onChange={(e, value: any) => onValueChange(value, 'status')}\r\n                        renderInput={(params: AutocompleteRenderInputParams) => {\r\n                            params.InputProps.className = autocompleteInputClasses.textInput;\r\n                            return <TextField {...params}\r\n                                className={autocompleteInputClasses.autocomplete}\r\n                                variant=\"outlined\"\r\n                                autoComplete=\"off\"\r\n                                label='Status'\r\n                                type={'text'}\r\n                                InputLabelProps={{\r\n                                    sx: {\r\n                                        fontSize: 'small'\r\n                                    }\r\n                                }}\r\n                            />;\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            {status === 'Realized' && <Grid item >\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '440px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <DatePicker\r\n                        className={classes.datePickers}\r\n                        inputFormat={'dd/MM/yyyy'}\r\n                        disableFuture\r\n                        value={dateExit ? moment(new Date(dateExit)).format('DD MMM YYYY') : null}\r\n                        disableHighlightToday\r\n                        onChange={(e) => onDateChange(e ?? '', 'dateExit')}\r\n                        renderInput={(props: any) =>\r\n                            <TextField {...props}\r\n                                label={'Date of Exit'}\r\n                                variant={'outlined'}\r\n                                size={'small'}\r\n                                className={classes.textField}\r\n                                InputLabelProps={{\r\n                                    sx: {\r\n                                        fontSize: 'small'\r\n                                    }\r\n                                }}\r\n                            />}\r\n                    />\r\n                </Box>\r\n            </Grid>}\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default GeneralInformationStepContentComponent;","import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useTheme } from '@mui/material';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport { GridApi, GridOptions, GridReadyEvent } from 'ag-grid-community';\r\nimport createStyles from '@mui/styles/createStyles';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport clsx from 'clsx';\r\nimport { ColDef, ColGroupDef, ValueSetterParams } from 'ag-grid-community/dist/lib/entities/colDef';\r\nimport { RootState } from '../../../../../redux/slices/rootSlice';\r\nimport { dateValueFormatter, getGridTheme, DefaultColumnDef, DefaultStatusPanelDef, quantityValueFormatter } from '../../../../../helpers/agGrid';\r\nimport AGGridLoader from '../../../../shared/AGGridLoader';\r\nimport EditRoundedIcon from '@mui/icons-material/EditRounded';\r\nimport { fetchFunds } from '../../../../../redux/thunks/fundThunk';\r\nimport { useAppDispatch } from '../../../../../redux/store';\r\nimport { setEditChildDiaogOpen } from '../../../../../redux/slices/appSlice';\r\nimport { setSelectedInvestment } from '../../../../../redux/slices/pcos/pcosSlice';\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            flex: 1,\r\n            overflow: 'hidden',\r\n        },\r\n        fill: {\r\n            flex: 1,\r\n            width: '100%',\r\n            height: '100%',\r\n        }\r\n    })\r\n);\r\n\r\ninterface PCOInvestmentsStepContentTableComponentProps {\r\n    setEditPageName: any,\r\n}\r\n\r\nconst PCOInvestmentsStepContentTableComponent = ({ setEditPageName }: PCOInvestmentsStepContentTableComponentProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const { isDarkTheme, editChildDialogOpen } = useSelector((state: RootState) => state.app);\r\n    const { selectedPCO } = useSelector((state: RootState) => state.pcos);\r\n    const { funds } = useSelector((state: RootState) => state.funds);\r\n    const { transactions } = useSelector((state: RootState) => state.transactions);\r\n    const [, setGridApi] = useState<GridApi>();\r\n    const theme = useTheme();\r\n    const [rowData, setRowData] = useState<any[]>([]);\r\n    const [editialogOpen, setEditDialogOpen] = useState<boolean>(false);\r\n    const [selectedInvestmentLocal, setSelectedInvestmentLocal] = useState<any>(null);\r\n\r\n    const gridOptions: GridOptions = {\r\n        defaultColDef: DefaultColumnDef,\r\n        enableCellChangeFlash: true,\r\n        enableRangeSelection: true,\r\n        animateRows: true,\r\n        pagination: true,\r\n        paginationPageSize: 5,\r\n        enableCellTextSelection: true,\r\n        groupDisplayType: 'multipleColumns',\r\n        statusBar: DefaultStatusPanelDef,\r\n    };\r\n\r\n    const ButtonCellRenderer = (props: any) => {\r\n        const handleEditClick = () => {\r\n            if (props.data) {\r\n                setEditPageName('investments');\r\n                setEditDialogOpen(!editChildDialogOpen);\r\n                setSelectedInvestmentLocal(props.data);\r\n                //handleOpenEditChildDialog('investments');\r\n            }\r\n        };\r\n\r\n        return <span key={props.data.id} style={{ display: 'flex', width: '100%', justifyContent: 'center', alignItems: 'center', cursor: 'pointer' }}>\r\n            <EditRoundedIcon style={{ color: theme.palette.primary.main, width: '100%', alignSelf: 'center' }} onClick={() => handleEditClick()} />\r\n        </span>;\r\n    };\r\n\r\n    const getColumnDefs = useMemo((): (ColDef | ColGroupDef)[] => {\r\n        return [\r\n            {\r\n                headerName: 'Date',\r\n                field: 'date',\r\n                minWidth: 100,\r\n                maxWidth: 140,\r\n                enableRowGroup: true,\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n                valueFormatter: dateValueFormatter,\r\n            },\r\n            {\r\n                headerName: 'Short Name',\r\n                field: 'shortName',\r\n                tooltipField: 'shortName',\r\n                suppressFiltersToolPanel: true,\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n            },\r\n            {\r\n                headerName: 'Amount Invested',\r\n                field: 'amountLocalCurrency',\r\n                enableRowGroup: true,\r\n                type: 'numericColumn',\r\n                tooltipField: 'amountLocalCurrency',\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n                valueFormatter: quantityValueFormatter,\r\n            },\r\n            {\r\n                headerName: 'Local Currency',\r\n                field: 'localCcy',\r\n                minWidth: 90,\r\n                maxWidth: 120,\r\n                enableRowGroup: true,\r\n                valueGetter: (params) => {\r\n                    return params.data?.localCcy ? params.data?.localCcy.toUpperCase() : '';\r\n                },\r\n                valueSetter: (params) => valueSetter(params, 'localCcy'),\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n            },\r\n            {\r\n                headerName: '',\r\n                maxWidth: 60,\r\n                cellRenderer: 'buttonCellRenderer',\r\n                editable: false\r\n            },\r\n        ];\r\n    }, [theme]);\r\n\r\n    const onGridReady = (params: GridReadyEvent) => {\r\n        setGridApi(params?.api);\r\n    };\r\n\r\n    const valueSetter = (params: ValueSetterParams, field: string) => {\r\n        const value = params.newValue;\r\n        const data = params.data;\r\n        if (data[field] !== value) {\r\n            data[field] = value;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n\r\n    const loadingOverlayRendererParams = useMemo(() => {\r\n        return {\r\n            loadingMessage: 'Loading Funds Overview...',\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchFunds());\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (transactions && selectedPCO && funds) {\r\n            const data = transactions.filter(x => x.pcoId === selectedPCO.id)?.map(item => ({\r\n                ...item,\r\n                shortName: funds?.filter(x => x.id === item.fundId)[0]?.shortName ?? '',\r\n                fundCcy: funds?.filter(x => x.id === item.fundId)[0]?.currency ?? '',\r\n                localCcy: selectedPCO.localCurrency ?? ''\r\n            }))\r\n\r\n            setRowData(data)\r\n        }\r\n    }, [transactions, selectedPCO, funds]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (selectedInvestmentLocal && editialogOpen) {\r\n            dispatch(setSelectedInvestment(selectedInvestmentLocal));\r\n            dispatch(setEditChildDiaogOpen(!editChildDialogOpen));\r\n        }\r\n    }, [selectedInvestmentLocal, editialogOpen, dispatch])\r\n\r\n    return (\r\n        <div className={clsx(getGridTheme(isDarkTheme), classes.fill)} style={{ flex: 1 }}>\r\n            <AgGridReact gridOptions={gridOptions}\r\n                columnDefs={getColumnDefs}\r\n                rowData={rowData}\r\n                domLayout={'autoHeight'}\r\n                onGridReady={onGridReady}\r\n                loadingOverlayComponentParams={loadingOverlayRendererParams}\r\n                loadingOverlayComponent={AGGridLoader}\r\n                tooltipShowDelay={0}\r\n                tooltipHideDelay={10000}\r\n                components={{\r\n                    buttonCellRenderer: ButtonCellRenderer\r\n                }}\r\n            />\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default PCOInvestmentsStepContentTableComponent;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useTheme } from '@mui/material';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport { GridApi, GridOptions, GridReadyEvent } from 'ag-grid-community';\r\nimport createStyles from '@mui/styles/createStyles';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport clsx from 'clsx';\r\nimport { ColDef, ColGroupDef, ValueSetterParams } from 'ag-grid-community/dist/lib/entities/colDef';\r\nimport { RootState } from '../../../../../redux/slices/rootSlice';\r\nimport { LPFundsOverview } from '../../../../../models/lps/lpModels';\r\nimport { getGridTheme, DefaultColumnDef, DefaultStatusPanelDef, percentageyValueFormatter } from '../../../../../helpers/agGrid';\r\nimport AGGridLoader from '../../../../shared/AGGridLoader';\r\nimport EditRoundedIcon from '@mui/icons-material/EditRounded';\r\nimport { setEditChildDiaogOpen } from '../../../../../redux/slices/appSlice';\r\nimport { setSelectedInvestment } from '../../../../../redux/slices/pcos/pcosSlice';\r\nimport { useAppDispatch } from '../../../../../redux/store';\r\nimport { EditInvestment, NewInvestment } from '../../../../../models/pcos/pcoModels';\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            flex: 1,\r\n            overflow: 'hidden',\r\n        },\r\n        fill: {\r\n            flex: 1,\r\n            width: '100%',\r\n            height: '100%',\r\n        }\r\n    })\r\n);\r\n\r\ninterface PCOInvestmentsStepContentTableComponentProps {\r\n    setEditPageName: any,\r\n}\r\n\r\nconst PCOLPsStepContentTable = ({ setEditPageName }: PCOInvestmentsStepContentTableComponentProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const { isDarkTheme, editChildDialogOpen } = useSelector((state: RootState) => state.app);\r\n    const { selectedPCO } = useSelector((state: RootState) => state.pcos);\r\n    const [, setGridApi] = useState<GridApi>();\r\n    const theme = useTheme();\r\n    const [rowData, setRowData] = useState<LPFundsOverview[]>([]);\r\n    const [editCommitmentDialogOpen, setEditCommitmentDialogOpen] = useState<boolean>(false);\r\n    const [editialogOpen, setEditDialogOpen] = useState<boolean>(false);\r\n    const [selectedInvestmentLocal, setSelectedInvestmentLocal] = useState<any>(null);\r\n\r\n    const gridOptions: GridOptions = {\r\n        defaultColDef: DefaultColumnDef,\r\n        enableCellChangeFlash: true,\r\n        enableRangeSelection: true,\r\n        animateRows: true,\r\n        pagination: true,\r\n        paginationPageSize: 5,\r\n        enableCellTextSelection: true,\r\n        groupDisplayType: 'multipleColumns',\r\n        statusBar: DefaultStatusPanelDef,\r\n    };\r\n\r\n    const ButtonCellRenderer = (props: any) => {\r\n        const handleEditClick = () => {\r\n            if (props.data) {\r\n                setEditPageName('pcoLPs');\r\n                setEditDialogOpen(!editChildDialogOpen);\r\n                const investment: EditInvestment = {\r\n                    pcoId: selectedPCO?.id,\r\n                    lpId: props.data?.id,\r\n                    participationPercentage: props.data?.participationPercentage\r\n                }\r\n                setSelectedInvestmentLocal(investment);\r\n                //handleOpenEditChildDialog('investments');\r\n            }\r\n        };\r\n\r\n        return <span key={props.data.id} style={{ display: 'flex', width: '100%', justifyContent: 'center', alignItems: 'center', cursor: 'pointer' }}>\r\n            <EditRoundedIcon style={{ color: theme.palette.primary.main, width: '100%', alignSelf: 'center' }} onClick={() => handleEditClick()} />\r\n        </span>;\r\n    };\r\n\r\n    const getColumnDefs = useMemo((): (ColDef | ColGroupDef)[] => {\r\n        return [\r\n            {\r\n                headerName: 'Id',\r\n                field: 'id',\r\n                enableRowGroup: true,\r\n                valueGetter: (params) => {\r\n                    return params.data?.id;\r\n                },\r\n                tooltipField: 'id',\r\n                minWidth: 90,\r\n                maxWidth: 100,\r\n                valueSetter: (params) => valueSetter(params, 'id'),\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n            },\r\n            {\r\n                headerName: 'Short Name',\r\n                field: 'shortName',\r\n                tooltipField: 'shortName',\r\n                suppressFiltersToolPanel: true,\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n            },\r\n            {\r\n                headerName: 'Participation Percentage',\r\n                field: 'participationPercentage',\r\n                enableRowGroup: true,\r\n                type: 'numericColumn',\r\n                tooltipField: 'amountInvested',\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n                valueFormatter: percentageyValueFormatter,\r\n            },\r\n            {\r\n                headerName: '',\r\n                maxWidth: 60,\r\n                cellRenderer: 'buttonCellRenderer',\r\n                editable: false\r\n            },\r\n        ];\r\n    }, [theme]);\r\n\r\n    const onGridReady = (params: GridReadyEvent) => {\r\n        setGridApi(params?.api);\r\n    };\r\n\r\n    const valueSetter = (params: ValueSetterParams, field: string) => {\r\n        const value = params.newValue;\r\n        const data = params.data;\r\n        if (data[field] !== value) {\r\n            data[field] = value;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const loadingOverlayRendererParams = useMemo(() => {\r\n        return {\r\n            loadingMessage: 'Loading Funds Overview...',\r\n        };\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        setRowData(selectedPCO?.lps ?? []);\r\n    }, [selectedPCO])\r\n\r\n    useEffect(() => {\r\n        if (selectedInvestmentLocal && editialogOpen) {\r\n            dispatch(setSelectedInvestment(selectedInvestmentLocal));\r\n            dispatch(setEditChildDiaogOpen(!editChildDialogOpen));\r\n        }\r\n    }, [selectedInvestmentLocal, editialogOpen, dispatch])\r\n\r\n    return (\r\n        <div className={clsx(getGridTheme(isDarkTheme), classes.fill)} style={{ flex: 1 }}>\r\n            <AgGridReact gridOptions={gridOptions}\r\n                columnDefs={getColumnDefs}\r\n                rowData={rowData}\r\n                domLayout={'autoHeight'}\r\n                onGridReady={onGridReady}\r\n                loadingOverlayComponentParams={loadingOverlayRendererParams}\r\n                loadingOverlayComponent={AGGridLoader}\r\n                tooltipShowDelay={0}\r\n                tooltipHideDelay={10000}\r\n                components={{\r\n                    buttonCellRenderer: ButtonCellRenderer\r\n                }}\r\n            />\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default PCOLPsStepContentTable;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useTheme } from '@mui/material';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport { GridApi, GridOptions, GridReadyEvent } from 'ag-grid-community';\r\nimport createStyles from '@mui/styles/createStyles';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport clsx from 'clsx';\r\nimport { ColDef, ColGroupDef, ValueSetterParams } from 'ag-grid-community/dist/lib/entities/colDef';\r\nimport { RootState } from '../../../../../redux/slices/rootSlice';\r\nimport { getGridTheme, DefaultColumnDef, DefaultStatusPanelDef, quantityValueFormatter } from '../../../../../helpers/agGrid';\r\nimport AGGridLoader from '../../../../shared/AGGridLoader';\r\nimport EditRoundedIcon from '@mui/icons-material/EditRounded';\r\nimport { setSelectedInvestment } from '../../../../../redux/slices/pcos/pcosSlice';\r\nimport { useAppDispatch } from '../../../../../redux/store';\r\nimport { setEditChildDiaogOpen } from '../../../../../redux/slices/appSlice';\r\nimport { EditInvestment } from '../../../../../models/pcos/pcoModels';\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            flex: 1,\r\n            overflow: 'hidden',\r\n        },\r\n        fill: {\r\n            flex: 1,\r\n            width: '100%',\r\n            height: '100%',\r\n        }\r\n    })\r\n);\r\n\r\ninterface PCOInvestmentsStepContentTableComponentProps {\r\n    setEditPageName: any,\r\n}\r\n\r\nconst PCOFundsStepContentTable = ({ setEditPageName }: PCOInvestmentsStepContentTableComponentProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const { isDarkTheme, editChildDialogOpen } = useSelector((state: RootState) => state.app);\r\n    const { funds } = useSelector((state: RootState) => state.funds);\r\n    const { selectedPCO } = useSelector((state: RootState) => state.pcos);\r\n    const [, setGridApi] = useState<GridApi>();\r\n    const theme = useTheme();\r\n    const [rowData, setRowData] = useState<any[]>([]);\r\n    const [editCommitmentDialogOpen, setEditCommitmentDialogOpen] = useState<boolean>(false);\r\n    const [editialogOpen, setEditDialogOpen] = useState<boolean>(false);\r\n    const [selectedInvestmentLocal, setSelectedInvestmentLocal] = useState<any>(null);\r\n\r\n    const gridOptions: GridOptions = {\r\n        defaultColDef: DefaultColumnDef,\r\n        enableCellChangeFlash: true,\r\n        enableRangeSelection: true,\r\n        animateRows: true,\r\n        pagination: true,\r\n        paginationPageSize: 5,\r\n        enableCellTextSelection: true,\r\n        groupDisplayType: 'multipleColumns',\r\n        statusBar: DefaultStatusPanelDef,\r\n    };\r\n\r\n    const ButtonCellRenderer = (props: any) => {\r\n        const handleEditClick = () => {\r\n            if (props.data) {\r\n                setEditPageName('pcoFunds');\r\n                setEditDialogOpen(!editChildDialogOpen);\r\n                const investment: EditInvestment = {\r\n                    pcoId: selectedPCO?.id,\r\n                    fundId: props.data?.id,\r\n                    amountInvested: props.data?.amountInvested\r\n                }\r\n                setSelectedInvestmentLocal(investment);                //handleOpenEditChildDialog('investments');\r\n            }\r\n        };\r\n\r\n        return <span key={props.data.id} style={{ display: 'flex', width: '100%', justifyContent: 'center', alignItems: 'center', cursor: 'pointer' }}>\r\n            <EditRoundedIcon style={{ color: theme.palette.primary.main, width: '100%', alignSelf: 'center' }} onClick={() => handleEditClick()} />\r\n        </span>;\r\n    };\r\n\r\n    const getColumnDefs = useMemo((): (ColDef | ColGroupDef)[] => {\r\n        return [\r\n            {\r\n                headerName: 'Id',\r\n                field: 'id',\r\n                minWidth: 90,\r\n                maxWidth: 100,\r\n                enableRowGroup: true,\r\n                valueGetter: (params) => {\r\n                    return params.data?.id;\r\n                },\r\n                tooltipField: 'id',\r\n                valueSetter: (params) => valueSetter(params, 'id'),\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n            },\r\n            {\r\n                headerName: 'Name',\r\n                field: 'fundName',\r\n                tooltipField: 'fundName',\r\n                suppressFiltersToolPanel: true,\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n            },\r\n            {\r\n                headerName: 'Committed Amount',\r\n                field: 'amountInvested',\r\n                enableRowGroup: true,\r\n                type: 'numericColumn',\r\n                tooltipField: 'amountInvested',\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n                valueFormatter: quantityValueFormatter,\r\n            },\r\n            {\r\n                headerName: 'Currency',\r\n                field: 'fundCurrency',\r\n                minWidth: 90,\r\n                maxWidth: 120,\r\n                enableRowGroup: true,\r\n                valueGetter: (params) => {\r\n                    return params.data?.fundCurrency ? params.data?.fundCurrency.toUpperCase() : '';\r\n                },\r\n                valueSetter: (params) => valueSetter(params, 'fundCurrency'),\r\n                cellStyle: { fontFamily: 'Raleway', color: theme.palette.text.primary },\r\n            },\r\n            {\r\n                headerName: '',\r\n                maxWidth: 60,\r\n                cellRenderer: 'buttonCellRenderer',\r\n                editable: false\r\n            },\r\n        ];\r\n    }, [theme]);\r\n\r\n\r\n    const onGridReady = (params: GridReadyEvent) => {\r\n        setGridApi(params?.api);\r\n    };\r\n\r\n    const valueSetter = (params: ValueSetterParams, field: string) => {\r\n        const value = params.newValue;\r\n        const data = params.data;\r\n        if (data[field] !== value) {\r\n            data[field] = value;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const loadingOverlayRendererParams = useMemo(() => {\r\n        return {\r\n            loadingMessage: 'Loading Funds Overview...',\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedPCO && funds) {\r\n            const data = selectedPCO.funds?.map(fund => ({\r\n                ...fund,\r\n                fundCurrency: funds?.filter(x => x.id === fund.id)[0]?.currency\r\n            }));\r\n            setRowData(data ?? []);\r\n        }\r\n    }, [selectedPCO, funds])\r\n\r\n    useEffect(() => {\r\n        if (selectedInvestmentLocal && editialogOpen) {\r\n            dispatch(setSelectedInvestment(selectedInvestmentLocal));\r\n            dispatch(setEditChildDiaogOpen(!editChildDialogOpen));\r\n        }\r\n    }, [selectedInvestmentLocal, editialogOpen, dispatch])\r\n\r\n    return (\r\n        <div className={clsx(getGridTheme(isDarkTheme), classes.fill)} style={{ flex: 1 }}>\r\n            <AgGridReact gridOptions={gridOptions}\r\n                columnDefs={getColumnDefs}\r\n                rowData={rowData}\r\n                domLayout={'autoHeight'}\r\n                onGridReady={onGridReady}\r\n                loadingOverlayComponentParams={loadingOverlayRendererParams}\r\n                loadingOverlayComponent={AGGridLoader}\r\n                tooltipShowDelay={0}\r\n                tooltipHideDelay={10000}\r\n                components={{\r\n                    buttonCellRenderer: ButtonCellRenderer\r\n                }}\r\n            />\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default PCOFundsStepContentTable;\r\n","import { Accordion, AccordionDetails, AccordionSummary, Autocomplete, AutocompleteRenderInputParams, Box, Divider, Fab, Grid, IconButton, InputAdornment, TextField, Tooltip, Typography } from '@mui/material';\r\nimport { useCallback, useState } from 'react';\r\nimport { Theme } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport { GridApi } from 'ag-grid-community';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { CountryList } from '../../../../../models/shared/sharedModels';\r\nimport { LP, NewLP } from '../../../../../models/lps/lpModels';\r\nimport { darken, useTheme } from \"@mui/material/styles\";\r\nimport { DatePicker } from '@mui/x-date-pickers';\r\nimport { minHeight } from '@mui/system';\r\nimport AddRoundedIcon from '@mui/icons-material/AddRounded';\r\nimport { PCOSummary } from '../../../../../models/pcos/pcoModels';\r\nimport PCOInvestmentsStepContentTableComponent from './PCOInvestmentsStepContentTable';\r\nimport PCOLPsStepContentTable from './PCOLPSStepContentTaple';\r\nimport PCOFundsStepContentTable from './PCOFundsStepContentTable';\r\nimport { AddChildDialogComponent } from '../../../addPopup/AddChildDialog';\r\nimport { EditChildDialogComponent } from '../../EditChildDialog';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../../redux/slices/rootSlice';\r\n\r\nconst autocompleteInputStyles = makeStyles((theme: Theme) => ({\r\n    autocomplete: {\r\n        'borderRadius': 5,\r\n        'backgroundColor': theme.palette.background.paper,\r\n        '& input::placeholder': {\r\n            color: theme.palette.text.primary\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: theme.palette.text.primary,\r\n            opacity: 0.8\r\n        }\r\n    },\r\n    textInput: {\r\n        'color': theme.palette.text.primary,\r\n        'fontWeight': 800,\r\n        'fontFamily': 'Raleway',\r\n        height: '2.2em',\r\n        /* 'height': '2.5em', */\r\n        'fontSize': 10,\r\n        '& .MuiIconButton-label': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chart: {\r\n            flex: 1,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n        },\r\n        fabIcon: {\r\n            marginLeft: 10,\r\n            alignSelf: 'center',\r\n        },\r\n        searchBox: {\r\n            width: '435px',\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        datePickers: {\r\n            width: '100%',\r\n            flex: 1,\r\n        },\r\n        textField: {\r\n            width: '435px',\r\n            backgroundColor: theme.palette.background.paper,\r\n            borderColor: theme.palette.text.primary,\r\n            color: theme.palette.text.primary,\r\n            borderRadius: 5,\r\n            '& .MuiSvgIcon-root':\r\n            {\r\n                color: theme.palette.text.primary\r\n            },\r\n\r\n            '& label': {\r\n                '&.Mui-focused': {\r\n                    color: theme.palette.text.primary\r\n                }\r\n            },\r\n        },\r\n        textFildsSmall: {\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        inputRoot: {\r\n            height: '1em',\r\n            'borderRadius': 5,\r\n            'backgroundColor': 'transparent',\r\n            /*         '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'black'\r\n                    },*/\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.primary.main\r\n            },\r\n            /*  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'black'\r\n              }, */\r\n            '& .MuiChip-root': {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: 'transparent',\r\n                borderRadius: 5\r\n            },\r\n            '& .MuiChip-deleteIconSmall': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        option: {\r\n            'background': theme.palette.background.paper,\r\n            '&:hover': {\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 400,\r\n                fontFamily: 'Raleway'\r\n            },\r\n            '&[aria-selected=\"true\"]': {\r\n                background: theme.palette.background.paper,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 700,\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        popupIndicator: {\r\n            '&.MuiIconButton-root': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        clearIndicator: {\r\n            color: theme.palette.text.primary\r\n        },\r\n    }),\r\n);\r\nconst LPTypes = [\r\n    \"Corporate\",\r\n    \"General Partner\",\r\n    \"Individual\",\r\n    \"Institutional\",\r\n];\r\n\r\ninterface InvestmentsStepContentProps {\r\n    selectedPCO: PCOSummary | null,\r\n    setSelectedPCO: React.Dispatch<React.SetStateAction<PCOSummary | null>>,\r\n    disabled: boolean,\r\n    setDisabled: any\r\n}\r\n\r\nconst InvestmentsStepContentComponent = ({ selectedPCO, setSelectedPCO, disabled, setDisabled }: InvestmentsStepContentProps) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const { editChildDialogOpen } = useSelector((state: RootState) => state.app);\r\n    const [investmentsExpanded, setInvestmentsExpanded] = useState<boolean>(false);\r\n    const [fundsExpanded, setFundsExpanded] = useState<boolean>(false);\r\n    const [lpsExpanded, setLPsExpanded] = useState<boolean>(false);\r\n    const [addChildDialogOpen, setAddChildDialogOpen] = useState<boolean>(false);\r\n    const [pageName, setPageName] = useState<string>('');\r\n    const [editPageName, setEditPageName] = useState<string>('');\r\n    const [selectedInvetsment, setSelectedInvestment] = useState<any>(null);\r\n    const [selectedPCOLP, setSelectedPCOLP] = useState<any>(null);\r\n    const [selectedPCOFund, setSelectedPCOFund] = useState<any>(null);\r\n\r\n    const handleAccordionExp = (expanded: boolean, cardName: string) => {\r\n        if (cardName === 'investments') {\r\n            setInvestmentsExpanded(!investmentsExpanded);\r\n        } else if (cardName === 'funds') {\r\n            setFundsExpanded(!fundsExpanded);\r\n        } else {\r\n            setLPsExpanded(!lpsExpanded);\r\n        }\r\n    };\r\n\r\n    const handleOpenChildDialog = (accordion: string) => {\r\n        setPageName(accordion);\r\n        setAddChildDialogOpen(!addChildDialogOpen);\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{ flex: 1, width: '100%', display: 'flex', justifyContent: 'start', marginTop: '0.2em' }}>\r\n            <Grid item xs={12} md={12} sx={{ display: 'flex', justifyContent: 'space-between', flex: 1, width: '100%', flexDirection: 'row', minWidth: '400px' }}>\r\n                <Grid item xs={10}>\r\n                    <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '390px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                        <Accordion\r\n                            key={`card-investments`}\r\n                            expanded={investmentsExpanded}\r\n                            onChange={(event, expanded: boolean) => handleAccordionExp(expanded, 'investments')}\r\n                            sx={{ marginBottom: '0.5em', backgroundColor: theme.palette.background.paper, width: '390px', borderLeft: `1px solid rgba(133, 133, 133,0.5)`, borderRight: `1px solid rgba(133, 133, 133,0.5)`, borderTop: `1px solid rgba(133, 133, 133,0.5)`, borderBottom: 'none' }}\r\n                        >\r\n                            <AccordionSummary\r\n                                sx={{ height: '40px' }}\r\n                                /* sx={{\r\n                                    'cursor': 'pointer',\r\n                                    'width': '100%',\r\n                                    'minHeight': '68px !important',\r\n                                    'paddingTop': 0,\r\n                                    'backgroundColor': theme.palette.background.paper,\r\n                                   \r\n                                }} */\r\n                                expandIcon={\r\n                                    <IconButton>\r\n                                        <ExpandMoreIcon\r\n                                            sx={{ pointerEvents: 'auto', cursor: 'pointer' }} />\r\n                                    </IconButton>\r\n                                }\r\n                            >\r\n                                <Grid container\r\n                                    sx={{ display: 'flex', flex: 1, height: '100%', width: '100%', alignItems: 'center' }}>\r\n                                    <Grid container>\r\n                                        <Typography variant='body1' sx={{ color: theme.palette.text.primary, fontWeight: 600 }}>Investments</Typography>\r\n                                    </Grid>\r\n                                    <Grid container>\r\n                                        <Typography variant='body2' sx={{ color: theme.palette.mode === 'light' ? 'rgba(69, 69, 69, 0.7)' : darken(theme.palette.text.primary, 0.4), fontWeight: 400, fontSize: '14px' }}>{`${selectedPCO?.numOfLPS} Investments`}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails\r\n                                sx={{\r\n                                    backgroundColor: theme.palette.background.paper,\r\n                                    width: '100%', padding: '0.1em', display: 'flex', height: '100%', pointerEvents: 'auto'\r\n                                }}>\r\n                                {investmentsExpanded && <PCOInvestmentsStepContentTableComponent setEditPageName={setEditPageName} />}\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={2} sx={{ display: 'flex', justifyContent: 'end', flex: 1, marginLeft: '2em', alignItems: 'start', marginTop: '0.6em' }}>\r\n                    <Tooltip title={\"Add a new investment\"}>\r\n                        <Box\r\n                            sx={{\r\n                                width: '30px',\r\n                                height: '30px',\r\n                                bgcolor: theme.palette.primary.main,\r\n                                color: 'white',\r\n                                borderRadius: '50%',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.4)',\r\n                                transition: 'box-shadow 0.2s ease-in-out',\r\n                                '&:hover': {\r\n                                    cursor: 'pointer',\r\n                                    boxShadow: '0px 6px 12px rgba(0, 0, 0, 0.6)',\r\n                                    backgroundColor: darken(theme.palette.primary.main, 0.2)\r\n                                }\r\n                            }}\r\n                            onClick={() => { handleOpenChildDialog('investments') }}\r\n                        >\r\n                            <AddRoundedIcon fontSize='small' sx={{ height: 20, width: 20 }} />\r\n                        </Box>\r\n                        {/* <span>\r\n                        <Fab\r\n                            color={'primary'}\r\n                            size=\"small\"\r\n                            sx={{ boxShadow: 'none', height:10,width:30 }}\r\n                            aria-label=\"AddBtn\"\r\n                            onFocus={(e: any) => (e.target.blur())}\r\n                            className={classes.fabIcon}>\r\n                            <AddRoundedIcon  fontSize='small' sx={{height:10,width:10}}/>\r\n                        </Fab>\r\n                    </span> */}\r\n                    </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} md={12} sx={{ display: 'flex', justifyContent: 'space-between', flex: 1, width: '100%', flexDirection: 'row', minWidth: '400px' }}>\r\n                <Grid item xs={10}>\r\n                    <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '390px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                        <Accordion\r\n                            key={`card-lps`}\r\n                            expanded={lpsExpanded}\r\n                            onChange={(event, expanded: boolean) => handleAccordionExp(expanded, 'lps')}\r\n                            sx={{ marginBottom: '0.5em', backgroundColor: theme.palette.background.paper, width: '390px', borderLeft: `1px solid rgba(133, 133, 133,0.5)`, borderRight: `1px solid rgba(133, 133, 133,0.5)`, borderTop: `1px solid rgba(133, 133, 133,0.5)`, borderBottom: 'none' }}\r\n                        >\r\n                            <AccordionSummary\r\n                                sx={{ height: '40px' }}\r\n                                /* sx={{\r\n                                    'cursor': 'pointer',\r\n                                    'width': '100%',\r\n                                    'minHeight': '68px !important',\r\n                                    'paddingTop': 0,\r\n                                    'backgroundColor': theme.palette.background.paper,\r\n                                   \r\n                                }} */\r\n                                expandIcon={\r\n                                    <IconButton>\r\n                                        <ExpandMoreIcon\r\n                                            sx={{ pointerEvents: 'auto', cursor: 'pointer' }} />\r\n                                    </IconButton>\r\n                                }\r\n                            >\r\n                                <Grid container\r\n                                    sx={{ display: 'flex', flex: 1, height: '100%', width: '100%', alignItems: 'center' }}>\r\n                                    <Grid container>\r\n                                        <Typography variant='body1' sx={{ color: theme.palette.text.primary, fontWeight: 600 }}>LPs</Typography>\r\n                                    </Grid>\r\n                                    <Grid container>\r\n                                        <Typography variant='body2' sx={{ color: theme.palette.mode === 'light' ? 'rgba(69, 69, 69, 0.7)' : darken(theme.palette.text.primary, 0.4), fontWeight: 400, fontSize: '14px' }}>{`${selectedPCO?.numOfLPS} LPs`}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails\r\n                                sx={{\r\n                                    backgroundColor: theme.palette.background.paper,\r\n                                    width: '100%', padding: '0.1em', display: 'flex', height: '100%', pointerEvents: 'auto'\r\n                                }}>\r\n                                {lpsExpanded && <PCOLPsStepContentTable setEditPageName={setEditPageName}/>}\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={2} sx={{ display: 'flex', justifyContent: 'end', flex: 1, marginLeft: '2em', alignItems: 'start', marginTop: '0.6em' }}>\r\n                    <Tooltip title={\"Add a new investment from LP\"}>\r\n                        <Box\r\n                            sx={{\r\n                                width: '30px',\r\n                                height: '30px',\r\n                                bgcolor: theme.palette.primary.main,\r\n                                color: 'white',\r\n                                borderRadius: '50%',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.4)',\r\n                                transition: 'box-shadow 0.2s ease-in-out',\r\n                                '&:hover': {\r\n                                    cursor: 'pointer',\r\n                                    boxShadow: '0px 6px 12px rgba(0, 0, 0, 0.6)',\r\n                                    backgroundColor: darken(theme.palette.primary.main, 0.2)\r\n                                }\r\n                            }}\r\n                            onClick={() => { handleOpenChildDialog('pcoLPs') }}\r\n                        >\r\n                            <AddRoundedIcon fontSize='small' sx={{ height: 20, width: 20 }} />\r\n                        </Box>\r\n                    </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} md={12} sx={{ display: 'flex', justifyContent: 'space-between', flex: 1, width: '100%', flexDirection: 'row', minWidth: '400px' }}>\r\n                <Grid item xs={10}>\r\n                    <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '390px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                        <Accordion\r\n                            key={`card-funds`}\r\n                            expanded={fundsExpanded}\r\n                            onChange={(event, expanded: boolean) => handleAccordionExp(expanded, 'funds')}\r\n                            sx={{ marginBottom: '0.5em', backgroundColor: theme.palette.background.paper, width: '390px', borderLeft: `1px solid rgba(133, 133, 133,0.5)`, borderRight: `1px solid rgba(133, 133, 133,0.5)`, borderTop: `1px solid rgba(133, 133, 133,0.5)`, borderBottom: 'none' }}\r\n                        >\r\n                            <AccordionSummary\r\n                                sx={{ height: '40px' }}\r\n                                /* sx={{\r\n                                    'cursor': 'pointer',\r\n                                    'width': '100%',\r\n                                    'minHeight': '68px !important',\r\n                                    'paddingTop': 0,\r\n                                    'backgroundColor': theme.palette.background.paper,\r\n                                   \r\n                                }} */\r\n                                expandIcon={\r\n                                    <IconButton>\r\n                                        <ExpandMoreIcon\r\n                                            sx={{ pointerEvents: 'auto', cursor: 'pointer' }} />\r\n                                    </IconButton>\r\n                                }\r\n                            >\r\n                                <Grid container\r\n                                    sx={{ display: 'flex', flex: 1, height: '100%', width: '100%', alignItems: 'center' }}>\r\n                                    <Grid container>\r\n                                        <Typography variant='body1' sx={{ color: theme.palette.text.primary, fontWeight: 600 }}>Funds</Typography>\r\n                                    </Grid>\r\n                                    <Grid container>\r\n                                        <Typography variant='body2' sx={{ color: theme.palette.mode === 'light' ? 'rgba(69, 69, 69, 0.7)' : darken(theme.palette.text.primary, 0.4), fontWeight: 400, fontSize: '14px' }}>{`${selectedPCO?.numOfFunds} Funds`}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails\r\n                                sx={{\r\n                                    backgroundColor: theme.palette.background.paper,\r\n                                    width: '100%', padding: '0.1em', display: 'flex', height: '100%', pointerEvents: 'auto'\r\n                                }}>\r\n                                {fundsExpanded && <PCOFundsStepContentTable setEditPageName={setEditPageName} />}\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={2} sx={{ display: 'flex', justifyContent: 'end', flex: 1, marginLeft: '2em', alignItems: 'start', marginTop: '0.6em' }}>\r\n                    <Tooltip title={\"Add a new investment from Fund\"}>\r\n                        <Box\r\n                            sx={{\r\n                                width: '30px',\r\n                                height: '30px',\r\n                                bgcolor: theme.palette.primary.main,\r\n                                color: 'white',\r\n                                borderRadius: '50%',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.4)',\r\n                                transition: 'box-shadow 0.2s ease-in-out',\r\n                                '&:hover': {\r\n                                    cursor: 'pointer',\r\n                                    boxShadow: '0px 6px 12px rgba(0, 0, 0, 0.6)',\r\n                                    backgroundColor: darken(theme.palette.primary.main, 0.2)\r\n                                }\r\n                            }}\r\n                            onClick={() => { handleOpenChildDialog('pcoFunds') }}\r\n                        >\r\n                            <AddRoundedIcon fontSize='small' sx={{ height: 20, width: 20 }} />\r\n                        </Box>\r\n                    </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n            {addChildDialogOpen && <AddChildDialogComponent open={addChildDialogOpen} pageName={pageName} pageTitle={pageName === 'investments' ? 'Add New Investment' : pageName === 'pcoLPs' ? 'Add New Investment From LP' : 'Add New Investment From Fund'} setDialogOpen={setAddChildDialogOpen} />}\r\n            {editChildDialogOpen && <EditChildDialogComponent open={editChildDialogOpen} pageName={editPageName} pageTitle={editPageName === 'investments' ? 'Edit Investment' : editPageName === 'pcoLPs' ? 'Edit Investment From LP' : editPageName === 'pcoFunds' ? 'Edit Investment From Fund' : ''}  />}\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default InvestmentsStepContentComponent;","import { Autocomplete, AutocompleteRenderInputParams, Box, Divider, Fab, Grid, IconButton, InputAdornment, TextField, Typography } from '@mui/material';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Theme } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport { GridApi } from 'ag-grid-community';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { CountryList } from '../../../../../models/shared/sharedModels';\r\nimport { LP, NewLP } from '../../../../../models/lps/lpModels';\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { DatePicker } from '@mui/x-date-pickers';\r\nimport { amountValueFormatter } from '../../../../../helpers/app';\r\nimport { PCOSummary } from '../../../../../models/pcos/pcoModels';\r\nimport moment from 'moment';\r\n\r\nconst autocompleteInputStyles = makeStyles((theme: Theme) => ({\r\n    autocomplete: {\r\n        'borderRadius': 5,\r\n        'backgroundColor': theme.palette.background.paper,\r\n        '& input::placeholder': {\r\n            color: theme.palette.text.primary\r\n        },\r\n        '& .Mui-disabled': {\r\n            color: theme.palette.text.primary,\r\n            opacity: 0.8\r\n        }\r\n    },\r\n    textInput: {\r\n        'color': theme.palette.text.primary,\r\n        'fontWeight': 800,\r\n        'fontFamily': 'Raleway',\r\n        height: '2.2em',\r\n        /* 'height': '2.5em', */\r\n        'fontSize': 10,\r\n        '& .MuiIconButton-label': {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chart: {\r\n            flex: 1,\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n        },\r\n        fabIcon: {\r\n            marginLeft: 10,\r\n            alignSelf: 'center',\r\n        },\r\n        searchBox: {\r\n            width: '440px',\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        datePickers: {\r\n            width: '100%',\r\n            flex: 1,\r\n        },\r\n        textField: {\r\n            width: '440px',\r\n            backgroundColor: theme.palette.background.paper,\r\n            borderColor: theme.palette.text.primary,\r\n            color: theme.palette.text.primary,\r\n            borderRadius: 5,\r\n            '& .MuiSvgIcon-root':\r\n            {\r\n                color: theme.palette.text.primary\r\n            },\r\n\r\n            '& label': {\r\n                '&.Mui-focused': {\r\n                    color: theme.palette.text.primary\r\n                }\r\n            },\r\n        },\r\n        textFildsSmall: {\r\n            marginRight: '1em',\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.primary,\r\n            fontFamily: 'Raleway',\r\n            borderRadius: 5,\r\n        },\r\n        inputRoot: {\r\n            height: '1em',\r\n            'borderRadius': 5,\r\n            'backgroundColor': 'transparent',\r\n            /*         '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'black'\r\n                    },*/\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.primary.main\r\n            },\r\n            /*  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'black'\r\n              }, */\r\n            '& .MuiChip-root': {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: 'transparent',\r\n                borderRadius: 5\r\n            },\r\n            '& .MuiChip-deleteIconSmall': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        option: {\r\n            'background': theme.palette.background.paper,\r\n            '&:hover': {\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 400,\r\n                fontFamily: 'Raleway'\r\n            },\r\n            '&[aria-selected=\"true\"]': {\r\n                background: theme.palette.background.paper,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 700,\r\n                fontFamily: 'Raleway'\r\n            }\r\n        },\r\n        popupIndicator: {\r\n            '&.MuiIconButton-root': {\r\n                color: theme.palette.text.primary\r\n            }\r\n        },\r\n        clearIndicator: {\r\n            color: theme.palette.text.primary\r\n        },\r\n    }),\r\n);\r\nconst LPTypes = [\r\n    \"Corporate\",\r\n    \"General Partner\",\r\n    \"Individual\",\r\n    \"Institutional\",\r\n];\r\n\r\ninterface PCOFinancialsStepContentProps {\r\n    selectedPCO: PCOSummary | null,\r\n    setSelectedPCO: React.Dispatch<React.SetStateAction<PCOSummary | null>>,\r\n    disabled: boolean,\r\n    setDisabled: any\r\n}\r\n\r\nconst PCOFinancialsStepContentComponent = ({ selectedPCO, setSelectedPCO, disabled, setDisabled }: PCOFinancialsStepContentProps) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const autocompleteInputClasses = autocompleteInputStyles();\r\n    const [amountInvestedEUR, setAmountInvestedEUR] = useState<number | null>(selectedPCO?.amountInvestedFundCcy ?? null);\r\n    const [amountInvestedLocalCcy, setAmountInvestedLocalCCy] = useState<number | null>(selectedPCO?.amountInvestedLocalCcy ?? null);\r\n    const [grossIRR, setGrossIRR] = useState<number | null>(selectedPCO?.grossIRR ?? null);\r\n    const [currentValuationOfCompany, setCurrentValuationOfCompany] = useState<number | null>(selectedPCO?.currentValuationPCO ?? null);\r\n    const [valuationEmerald, setValuationEmerald] = useState<number | null>(selectedPCO?.currentValuationEmerald ?? null);\r\n    const [realised, setRealised] = useState<number | null>(selectedPCO?.realised ?? null);\r\n    const [currentRound, setCurrentRound] = useState<string>(selectedPCO?.currentRound ?? '');\r\n    const [dateLastRound, setdateLastRound] = useState<string>(selectedPCO?.lastRound ?? '');\r\n\r\n    const dateDifference = (date1: string, date2: string) => {\r\n        const date1Date = new Date(date1);\r\n        const date2Date = new Date(date2);\r\n        const diffInMs = Math.abs(date2Date.getTime() - date1Date.getTime());\r\n        const diffInMonths = Math.floor(diffInMs / (1000 * 60 * 60 * 24 * 30));\r\n        const years = Math.floor(diffInMonths / 12);\r\n        const months = diffInMonths % 12;\r\n        const returnString = years && months ? `${years} years and ${months} months` : years && !months ? `${years} years` : !years && months ? `${months} months` : '';\r\n\r\n        return returnString;\r\n    }\r\n\r\n    const onValueChange = (value: string, field: string) => {\r\n        if (selectedPCO) {\r\n            switch (field) {\r\n                case 'amountInvestedFundCcy':\r\n                    setAmountInvestedEUR(+value);\r\n                    setSelectedPCO({\r\n                        ...selectedPCO,\r\n                        amountInvestedFundCcy: +value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'amountInvestedLocalCcy':\r\n                    setAmountInvestedLocalCCy(+value);\r\n                    setSelectedPCO({\r\n                        ...selectedPCO,\r\n                        amountInvestedLocalCcy: +value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'grossIRR':\r\n                    setGrossIRR(+value);\r\n                    setSelectedPCO({\r\n                        ...selectedPCO,\r\n                        grossIRR: +value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'currentValuationPCO':\r\n                    setCurrentValuationOfCompany(+value);\r\n                    setSelectedPCO({\r\n                        ...selectedPCO,\r\n                        currentValuationPCO: +value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'currentValuationEmerald':\r\n                    setValuationEmerald(+value);\r\n                    setSelectedPCO({\r\n                        ...selectedPCO,\r\n                        currentValuationEmerald: +value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'realised':\r\n                    setRealised(+value);\r\n                    setSelectedPCO({\r\n                        ...selectedPCO,\r\n                        realised: +value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                case 'currentRound':\r\n                    setCurrentRound(value);\r\n                    setSelectedPCO({\r\n                        ...selectedPCO,\r\n                        currentRound: value\r\n                    });\r\n                    setDisabled(value === '');\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    const onDateChange = (value: any, field: string) => {\r\n        setdateLastRound(value);\r\n        if (selectedPCO) {\r\n            setSelectedPCO({\r\n                ...selectedPCO,\r\n                lastRound: value\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{ flex: 1, width: '100%', marginTop: '0.2em' }}>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label='Amount Invested (EUR)'\r\n                        aria-label=\"name\"\r\n                        value={amountInvestedEUR ? amountValueFormatter(amountInvestedEUR, '') : null}\r\n                        onChange={(e) => onValueChange(e.target.value, 'amountInvestedFundCcy')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label={`Amount Original Ccy (${selectedPCO?.localCurrency})`}\r\n                        aria-label=\"name\"\r\n                        value={amountInvestedLocalCcy ? amountValueFormatter(amountInvestedLocalCcy, '') : null}\r\n                        onChange={(e) => onValueChange(e.target.value, 'amountInvestedLocalCcy')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"website\"\r\n                        label='Gross IRR'\r\n                        value={grossIRR ? (grossIRR * 100).toFixed(2) : null}\r\n                        onChange={(e) => onValueChange(e.target.value, 'grossIRR')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Divider sx={{ marginTop: '0.8em', marginBottom: 0, marginLeft: '1em', minWidth: '440px' }} />\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        label='Current Round'\r\n                        aria-label=\"name\"\r\n                        value={currentRound}\r\n                        onChange={(e) => onValueChange(e.target.value, 'currentRound')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item >\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, width: '440px', borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <DatePicker\r\n                        className={classes.datePickers}\r\n                        inputFormat={'dd/MM/yyyy'}\r\n                        disableFuture\r\n                        value={dateLastRound ? moment(new Date(dateLastRound)).format('DD MMM YYYY') : null}\r\n                        disableHighlightToday\r\n                        onChange={(e) => onDateChange(e ?? '', 'dateLastRound')}\r\n                        renderInput={(props: any) =>\r\n                            <TextField {...props}\r\n                                label={'Date of Last Round'}\r\n                                variant={'outlined'}\r\n                                size={'small'}\r\n                                className={classes.textField}\r\n                                InputLabelProps={{\r\n                                    sx: {\r\n                                        fontSize: 'small'\r\n                                    }\r\n                                }}\r\n                            />}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Divider sx={{ marginTop: '0.8em', marginBottom: 0, marginLeft: '1em', minWidth: '440px' }} />\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"website\"\r\n                        label='Current Valuation of Company'\r\n                        value={currentValuationOfCompany ? amountValueFormatter(currentValuationOfCompany, '') : null}\r\n                        onChange={(e) => onValueChange(e.target.value, 'currentValuationPCO')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"website\"\r\n                        label='Valuation of Emerald Holding'\r\n                        value={valuationEmerald ? amountValueFormatter(valuationEmerald, '') : null}\r\n                        onChange={(e) => onValueChange(e.target.value, 'currentValuationEmerald')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box sx={{ boxShadow: `0px 4px 4px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.25)'}`, borderTopLeftRadius: 5, borderTopRightRadius: 5, borderBottomLeftRadius: 5, borderBottomRightRadius: 5 }}>\r\n                    <TextField\r\n                        className={classes.searchBox}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        aria-label=\"baseCapital\"\r\n                        label='Realised'\r\n                        value={realised ? amountValueFormatter(realised, '') : null}\r\n                        onChange={(e) => onValueChange(e.target.value, 'realised')}\r\n                        inputProps={{\r\n                            style: { height: '1em' },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            sx: {\r\n                                fontSize: 'small'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default PCOFinancialsStepContentComponent;","import { Grid, Step, StepConnector, StepContent, StepLabel, Stepper, Typography } from '@mui/material';\r\nimport { useState } from 'react';\r\nimport { withStyles } from '@mui/styles';\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Check } from '@mui/icons-material';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../../redux/slices/rootSlice';\r\nimport GeneralInformationStepContentComponent from './GeneralInformationStepContent';\r\nimport InvestmentsStepContentComponent from './InvestmentsStepContent';\r\nimport PCOFinancialsStepContentComponent from './PCOFinancialsStepContent';\r\nimport { PCOSummary } from '../../../../../models/pcos/pcoModels';\r\n\r\nconst CustomStepConnector = withStyles({\r\n    alternativeLabel: {\r\n        top: 50,\r\n        left: 'calc(-50% + 16px)',\r\n        right: 'calc(50% + 16px)',\r\n    },\r\n    active: {\r\n        '& $line': {\r\n            borderColor: '#004A00',\r\n        },\r\n    },\r\n    completed: {\r\n        '& $line': {\r\n            borderColor: '#008000',\r\n        },\r\n    },\r\n    line: {\r\n        borderColor: '#ccc',\r\n        borderTopWidth: 3, // adjust this to make the line thicker\r\n        borderRadius: 1,\r\n        height: '50px',\r\n        marginLeft: '3px'\r\n    },\r\n})(StepConnector);\r\n\r\nconst CustomStepIcon = (props: any) => {\r\n    const { active, completed, icon, onClick } = props;\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <div >\r\n            {icon && <div style={{ width: '2em', height: '2em', borderRadius: '50%', backgroundColor: active ? '#454545' : completed ? theme.palette.success.main : '#ccc', cursor: 'pointer', display: 'flex', alignItems: 'center', justifyContent: 'center', }} onClick={onClick} >\r\n                {completed && <Check sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', color: 'white' }} />}\r\n            </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface EditFundBasicContentProps {\r\n    steps: string[],\r\n    activeStep: number,\r\n    setActiveStep: React.Dispatch<React.SetStateAction<number>>,\r\n    selectedPCO: PCOSummary | null,\r\n    setSelectedPCO: React.Dispatch<React.SetStateAction<PCOSummary | null>>,\r\n    disabled: boolean,\r\n    setDisabled: any\r\n}\r\n\r\nconst PCOBasicEditContentComponent = ({ steps, activeStep, setActiveStep, selectedPCO, setSelectedPCO, disabled, setDisabled }: EditFundBasicContentProps) => {\r\n    const theme = useTheme();\r\n    const [activeLabel, setActiveLabel] = useState<string>(steps[0]);\r\n\r\n    /**\r\n     * Changes the current active step\r\n     * @param label\r\n     */\r\n    const handleSetActiveStep = (label: string) => {\r\n        if (label) {\r\n            setActiveLabel(label);\r\n            const index = steps?.indexOf(label);\r\n            setActiveStep(index);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid container sx={{ display: 'flex', justifyContent: 'flex-start', alignItems: 'start', flexDirection: 'column' }}>\r\n            <Grid item xs={3} sx={{ marginLeft: '1em' }}>\r\n                <Stepper orientation=\"vertical\" activeStep={activeStep} connector={<CustomStepConnector />}>\r\n                    {steps.map((label, index) => (\r\n                        <Step key={label}>\r\n                            <StepLabel StepIconComponent={CustomStepIcon} onClick={() => handleSetActiveStep(label)} >\r\n                            </StepLabel>\r\n                            <Typography sx={{ fontSize: '14px', textAlign: 'center', width: '80px', marginLeft: '-1.5em', fontWeight: activeLabel === label ? 600 : 400, color: activeStep > index ? theme.palette.success.main : '#454545' }}>{label}</Typography>\r\n                            <StepContent sx={{ mt: 2, ml: 2 }}>\r\n                            </StepContent>\r\n\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n            </Grid>\r\n            <Grid item xs={9} sx={{ minWidth: '450px', marginLeft: '2.3em' }}>\r\n                {activeStep === 0 ? <GeneralInformationStepContentComponent selectedPCO={selectedPCO} setSelectedPCO={setSelectedPCO} disabled={disabled} setDisabled={setDisabled} />\r\n                    : activeStep === 1\r\n                        ? <InvestmentsStepContentComponent selectedPCO={selectedPCO} setSelectedPCO={setSelectedPCO} disabled={disabled} setDisabled={setDisabled} />\r\n                        : <PCOFinancialsStepContentComponent selectedPCO={selectedPCO} setSelectedPCO={setSelectedPCO} disabled={disabled} setDisabled={setDisabled} />}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default PCOBasicEditContentComponent;\r\n","import React, { ReactElement, Ref, useState } from 'react';\r\nimport { TransitionProps } from \"@mui/material/transitions\";\r\nimport { Button, darken, Dialog, DialogActions, DialogContent, DialogTitle, Divider, Grid, IconButton, Slide, Theme, Typography, useTheme } from \"@mui/material\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useAppDispatch } from '../../../redux/store';\r\nimport { RootState } from '../../../redux/slices/rootSlice';\r\nimport { setEditDiaogOpen } from '../../../redux/slices/appSlice';\r\nimport EditRoundedIcon from '@mui/icons-material/EditRounded';\r\nimport { FundSummary, NewFund } from '../../../models/funds/fundModels';\r\nimport { NewPCO, PCOSummary } from '../../../models/pcos/pcoModels';\r\nimport { LP, NewLP } from '../../../models/lps/lpModels';\r\nimport { NewCommitment } from '../../../models/shared/sharedModels';\r\nimport { NewTransaction } from '../../../models/transactions/transactionsModels';\r\nimport { NewCashCall } from '../../../models/cashCalls/cashCallsModels';\r\nimport { NewDistribution } from '../../../models/distributions/distributionsModels';\r\nimport LPBasicEditContentComponent from './lpsEditDialogContents/basic/LPBasicEditContent';\r\nimport { makeStyles } from '@mui/styles';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\r\nimport FundBasicEditContentComponent from './fundsEditDialogContents/basic/FundBasicEditContent';\r\nimport PCOBasicEditContentComponent from './pcosEditDialogContents/basic/PCOBasicEditContent';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.default\r\n    },\r\n    nextBtn: {\r\n        'marginRight': theme.spacing(1),\r\n        'backgroundColor': '#7F201C',\r\n        'color': 'white',\r\n        'borderRadius': 0,\r\n        'borderColor': '#7F201C',\r\n        'fontSize': 13,\r\n        'textTransform': 'none',\r\n        'fontFamily': 'IBM Plex Sans',\r\n        '&:hover': {\r\n            backgroundColor: '#FF563F',\r\n            borderColor: '#FF563F',\r\n            color: 'white'\r\n        }\r\n\r\n    },\r\n    backBtn: {\r\n        'fontFamily': 'IBM Plex Sans',\r\n        'textTransform': 'none',\r\n        'fontSize': 13,\r\n        'height': '2em',\r\n        'marginRight': '3.5em',\r\n        'color': darken(theme.palette.text.primary, .2),\r\n        '&:hover': {\r\n            color: theme.palette.text.primary,\r\n            backgroundColor: theme.palette.background.default,\r\n            textDecorationLine: 'underline'\r\n\r\n        }\r\n    },\r\n    actions: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginBottom: 20,\r\n        marginTop: '2em'\r\n    },\r\n    stepper: {\r\n        backgroundColor: theme.palette.background.default,\r\n        cursor: 'pointer'\r\n    }\r\n}));\r\n\r\nconst transitionMethod = (props: TransitionProps & { children: ReactElement<any, any> }, ref: Ref<unknown>) => {\r\n    // eslint-disable-next-line react/jsx-props-no-spreading\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n};\r\n\r\nconst Transition = React.forwardRef(transitionMethod);\r\n\r\nconst getLPSteps = () => {\r\n    return ['General Information', 'Commitments', 'LP Financials', 'KPIs & IRR'];\r\n};\r\n\r\nconst getFundSteps = () => {\r\n    return ['General Information', 'Commitments', 'Fund Financials', 'KPIs & IRR'];\r\n};\r\n\r\nconst getStepsPCO = () => {\r\n    return ['General Information', 'Investments', 'PCO Financials'];\r\n};\r\n\r\ninterface AddDialogComponentProps {\r\n    pageName: string,\r\n    pageTitle: string\r\n}\r\n\r\nexport const EditDialogComponent = ({ pageName, pageTitle }: AddDialogComponentProps) => {\r\n    const classes = useStyles();\r\n    const dispatch = useAppDispatch();\r\n    const { editDialogOpen } = useSelector((state: RootState) => state.app);\r\n    const [disabled, setDisabled] = useState<boolean>(false);\r\n    const theme = useTheme()\r\n    const [newFund, setNewFund] = useState<NewFund | null>(null);\r\n    const [newLP, setNewLP] = useState<NewLP | null>(null);\r\n    const [newPCO, setNewPCO] = useState<NewPCO | null>(null);\r\n    const [newCommitment, setNewCommitment] = useState<NewCommitment | null>(null);\r\n    const [newTransaction, setNewTransaction] = useState<NewTransaction | null>(null);\r\n    const [newCashCall, setNewCashCall] = useState<NewCashCall | null>(null);\r\n    const [newDistribution, setNewDistribution] = useState<NewDistribution | null>(null);\r\n    const stepsLP: string[] = getLPSteps();\r\n    const stepsFund: string[] = getFundSteps();\r\n    const stepsPCO: string[] = getStepsPCO();\r\n    const [activeStepLP, setActiveStepLP] = useState<number>(0);\r\n    const [activeStepFund, setActiveStepFund] = useState<number>(0);\r\n    const [activeStepPCO, setActiveStepPCO] = useState<number>(0);\r\n    const { selectedFund } = useSelector((state: RootState) => state.funds);\r\n    const [selectedFundLocal, setSelectedFundLocal] = useState<FundSummary | null>(selectedFund ?? null)\r\n    const { selectedLP } = useSelector((state: RootState) => state.lps);\r\n    const [selectedLPLocal, setSelectedLPLocal] = useState<LP | null>(selectedLP ?? null);\r\n    const { selectedPCO } = useSelector((state: RootState) => state.pcos);\r\n    const [selectedPCOLocal, setSelectedPCOLocal] = useState<PCOSummary | null>(selectedPCO ?? null);\r\n    /**\r\n     * Handles the closing of the dialog\r\n     */\r\n    const handleClose = () => {\r\n        setSelectedFundLocal(selectedFund);\r\n        setSelectedLPLocal(selectedLP);\r\n        setSelectedPCOLocal(selectedPCO);\r\n        setActiveStepLP(0);\r\n        setActiveStepFund(0);\r\n        setActiveStepPCO(0);\r\n        dispatch(setEditDiaogOpen(false));\r\n    };\r\n\r\n    const handleEditBtnClick = () => {\r\n        let valid = false;\r\n        if (pageName === 'fundsOverview') {\r\n            valid = newFund !== null && newFund.fundName !== '' && newFund.shortName !== '' && newFund.country !== '' && newFund.type !== '' && newFund.currency !== '';\r\n        } else if (pageName === 'lpsOverview') {\r\n            valid = newLP !== null && newLP.name !== '' && newLP.shortName !== '' && newLP.city !== '' && newLP.country !== '' && newLP.type !== '';\r\n        } else if (pageName === 'pcosOverview') {\r\n            valid = newPCO !== null && newPCO.pcoName !== '' && newPCO.shortName !== '' && newPCO.country !== '' && newPCO.sector !== '' && newPCO.currency !== '';\r\n        } else if (pageName === 'commitments') {\r\n            valid = newCommitment !== null && newCommitment.lpId !== '' && newCommitment.fundId !== '' && newCommitment.fundCurrency !== '' && newCommitment.committedAmount !== 0\r\n        } else if (pageName === 'transactions') {\r\n            valid = newTransaction !== null && newTransaction.pcoId !== '' && newTransaction.fundId !== '' && newTransaction.transType !== '' && newTransaction.securityType !== '' && newTransaction.amountFundCurrency !== 0 && (newTransaction.transType === 'Investment' && newTransaction.investmentType !== '')\r\n        }\r\n    }\r\n\r\n    /**\r\n* Event triggered when click on next arrow\r\n*/\r\n    const handleNext = (pageName: string) => {\r\n        if (pageName === 'lpBasic') {\r\n            setActiveStepLP((prevActiveStep) => prevActiveStep + 1);\r\n        } else if (pageName === 'fundBasic') {\r\n            setActiveStepFund((prevActiveStep) => prevActiveStep + 1);\r\n        } else if (pageName === 'pcoBasic') {\r\n            setActiveStepPCO((prevActiveStep) => prevActiveStep + 1);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event triggered when click on back arrow\r\n     */\r\n    const handleBack = (pageName: string) => {\r\n        if (pageName === 'lpBasic') {\r\n            setActiveStepLP((prevActiveStep) => prevActiveStep - 1);\r\n        } else if (pageName === 'fundBasic') {\r\n            setActiveStepFund((prevActiveStep) => prevActiveStep - 1);\r\n        } else if (pageName === 'pcoBasic') {\r\n            setActiveStepPCO((prevActiveStep) => prevActiveStep - 1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog open={editDialogOpen} TransitionComponent={Transition}\r\n            maxWidth={'sm'}\r\n            fullWidth\r\n            aria-label={'dialog extra data client'}>\r\n            <DialogTitle sx={{\r\n                cursor: 'move',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n                backgroundColor: theme.palette.mode === 'light' ? '#F5F5F5' : '#06050A'\r\n            }} id=\"form-dialog-client-data\">\r\n                <Grid container sx={{ display: 'flex', flex: 1, justifyContent: 'flex-start', height: '100%', flexDirection: 'column' }}>\r\n                    <Grid item xs={12} sx={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        alignItems: 'center'\r\n                    }}>\r\n                        <Typography style={{\r\n                            fontSize: 18,\r\n                            fontWeight: 600\r\n                        }}>{pageTitle}</Typography>\r\n                        <IconButton onClick={handleClose}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Divider sx={{ width: '100%' }} />\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </DialogTitle>\r\n            <DialogContent sx={{ display: 'flex', flex: 1, justifyContent: 'flex-start', height: '100%', backgroundColor: theme.palette.mode === 'light' ? '#F5F5F5' : '#06050A' }}>\r\n                {pageName === 'lpBasic' ? <LPBasicEditContentComponent steps={stepsLP} activeStep={activeStepLP} setActiveStep={setActiveStepLP} selectedLP={selectedLPLocal} setSelectedLP={setSelectedLPLocal} disabled={disabled} setDisabled={setDisabled} />\r\n                    : pageName === 'fundBasic'\r\n                        ? <FundBasicEditContentComponent steps={stepsFund} activeStep={activeStepFund} setActiveStep={setActiveStepFund} selectedFund={selectedFundLocal} setSelectedFund={setSelectedFundLocal} disabled={disabled} setDisabled={setDisabled} />\r\n                        : <PCOBasicEditContentComponent steps={stepsPCO} activeStep={activeStepPCO} setActiveStep={setActiveStepPCO} selectedPCO={selectedPCOLocal} setSelectedPCO={setSelectedPCOLocal} disabled={disabled} setDisabled={setDisabled} />}\r\n            </DialogContent>\r\n            <DialogActions sx={{ backgroundColor: theme.palette.mode === 'light' ? '#F5F5F5' : '#06050A' }}>\r\n                {pageName === 'lpBasic' ?\r\n                    activeStepLP !== stepsLP.length && (\r\n                        <div style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }}>\r\n                            <Button disabled={activeStepLP === 0} onClick={() => handleBack(pageName)}\r\n                                startIcon={<ArrowBackIosNewIcon fontSize='small' sx={{ width: 16, height: 16 }} />}\r\n                                sx={{ display: activeStepLP === 0 ? 'none' : 'flex', marginRight: '1em', textTransform: 'none', height: 36 }} variant=\"outlined\">\r\n                                {`Back`}\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                endIcon={<ArrowBackIosNewIcon fontSize='small' sx={{ transform: 'rotate(180deg)', width: 16, height: 16 }} />}\r\n                                onClick={() => handleNext(pageName)}\r\n                                sx={{ display: activeStepLP === stepsLP.length - 1 ? 'none' : 'flex', marginRight: '1em', textTransform: 'none', height: 36 }}\r\n                            >\r\n                                Next\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                sx={{ textTransform: 'none', height: 36 }}\r\n                                startIcon={<EditRoundedIcon />}\r\n                                disabled={disabled}\r\n                                onClick={handleEditBtnClick}\r\n                            >Edit</Button>\r\n                        </div>\r\n                    )\r\n                    : pageName === 'fundBasic' ?\r\n                        activeStepFund !== stepsFund.length && (\r\n                            <div style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }}>\r\n                                <Button disabled={activeStepFund === 0} onClick={() => handleBack(pageName)}\r\n                                    startIcon={<ArrowBackIosNewIcon fontSize='small' sx={{ width: 16, height: 16 }} />}\r\n                                    sx={{ display: activeStepFund === 0 ? 'none' : 'flex', marginRight: '1em', textTransform: 'none', height: 36 }} variant=\"outlined\">\r\n                                    {`Back`}\r\n                                </Button>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    endIcon={<ArrowBackIosNewIcon fontSize='small' sx={{ transform: 'rotate(180deg)', width: 16, height: 16 }} />}\r\n                                    onClick={() => handleNext(pageName)}\r\n                                    sx={{ display: activeStepFund === stepsFund.length - 1 ? 'none' : 'flex', marginRight: '1em', textTransform: 'none', height: 36 }}\r\n                                >\r\n                                    Next\r\n                                </Button>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    sx={{ textTransform: 'none', height: 36 }}\r\n                                    startIcon={<EditRoundedIcon />}\r\n                                    disabled={disabled}\r\n                                    onClick={handleEditBtnClick}\r\n                                >Edit</Button>\r\n                            </div>\r\n                        ) : pageName === 'pcoBasic' ?\r\n                            activeStepPCO !== stepsPCO.length && (\r\n                                <div style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }}>\r\n                                    <Button disabled={activeStepPCO === 0} onClick={() => handleBack(pageName)}\r\n                                        startIcon={<ArrowBackIosNewIcon fontSize='small' sx={{ width: 16, height: 16 }} />}\r\n                                        sx={{ display: activeStepPCO === 0 ? 'none' : 'flex', marginRight: '1em', textTransform: 'none', height: 36 }} variant=\"outlined\">\r\n                                        {`Back`}\r\n                                    </Button>\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        endIcon={<ArrowBackIosNewIcon fontSize='small' sx={{ transform: 'rotate(180deg)', width: 16, height: 16 }} />}\r\n                                        onClick={() => handleNext(pageName)}\r\n                                        sx={{ display: activeStepPCO === stepsPCO.length - 1 ? 'none' : 'flex', marginRight: '1em', textTransform: 'none', height: 36 }}\r\n                                    >\r\n                                        Next\r\n                                    </Button>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        sx={{ textTransform: 'none', height: 36 }}\r\n                                        startIcon={<EditRoundedIcon />}\r\n                                        disabled={disabled}\r\n                                        onClick={handleEditBtnClick}\r\n                                    >Edit</Button>\r\n                                </div>\r\n                            ) : <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                sx={{ textTransform: 'none' }}\r\n                                startIcon={<EditRoundedIcon />}\r\n                                disabled={disabled}\r\n                                onClick={handleEditBtnClick}\r\n                            >\r\n                                Edit\r\n                            </Button>\r\n                }\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n","import { CashCall } from '../../models/cashCalls/cashCallsModels';\r\nimport { RestService } from '../RestService';\r\n\r\nexport class CashCallDataService extends RestService {\r\n    private _baseUrl = './cashCallsData.json';\r\n\r\n    /**\r\n     * Gets the lp data that is in a json file in the public folder for now later will be a service\r\n     * @return LP[]\r\n     */\r\n    public async getAllCashCalls(): Promise<CashCall[]> {\r\n        return this.fetchData(this._baseUrl).then((res: any) => {\r\n            return res.data;\r\n        }).catch((err: any) => {\r\n            console.log(err);\r\n            return err;\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { CashCallDataService } from \"../../services/cashCalls/CashCallService\";\r\nimport { setErrorMessage } from \"../slices/appSlice\";\r\nimport { setCashCalls } from \"../slices/cashCalls/cashCallsSlice\";\r\n\r\n/**\r\n * Fetch all cash calls\r\n */\r\nexport const fetchCashCalls: any = () => async (dispatch: any) => {\r\n    try {\r\n        const cashCallService = new CashCallDataService();\r\n        const data = await cashCallService.getAllCashCalls();\r\n        dispatch(setCashCalls(data));\r\n    } catch (error: any) {\r\n        dispatch(setErrorMessage(error));\r\n    }\r\n};","import { DistributionBasic } from '../../models/distributions/distributionsModels';\r\nimport { RestService } from '../RestService';\r\n\r\nexport class DistributionsDataService extends RestService {\r\n    private _baseUrl = './distributions.json';\r\n\r\n    /**\r\n     * Gets the lp data that is in a json file in the public folder for now later will be a service\r\n     * @return LP[]\r\n     */\r\n    public async getAllDistributions(): Promise<DistributionBasic[]> {\r\n        return this.fetchData(this._baseUrl).then((res: any) => {\r\n            return res.data;\r\n        }).catch((err: any) => {\r\n            console.log(err);\r\n            return err;\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { DistributionsDataService } from \"../../services/distributions/DistributionsService\";\r\nimport { setErrorMessage } from \"../slices/appSlice\";\r\nimport { setDistributions } from \"../slices/distributions/distributionsSlice\";\r\n\r\n/**\r\n * Fetch all distributions\r\n */\r\nexport const fetchAllDistributions: any = () => async (dispatch: any) => {\r\n    try {\r\n        const distributionsService = new DistributionsDataService();\r\n        const data = await distributionsService.getAllDistributions();\r\n        dispatch(setDistributions(data));\r\n    } catch (error: any) {\r\n        dispatch(setErrorMessage(error));\r\n    }\r\n};","import { Transaction } from '../../models/transactions/transactionsModels';\r\nimport { RestService } from '../RestService';\r\n\r\nexport class TransactionDataService extends RestService {\r\n    private _baseUrl = './lpsTransactionsHistory.json';\r\n\r\n    /**\r\n     * Gets the lp data that is in a json file in the public folder for now later will be a service\r\n     * @return Transaction[]\r\n     */\r\n    public async getAllTransactions(): Promise<Transaction[]> {\r\n        return this.fetchData(this._baseUrl).then((res: any) => {\r\n            return res.data;\r\n        }).catch((err: any) => {\r\n            console.log(err);\r\n            return err;\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { TransactionDataService } from \"../../services/transactions/TransactionService\";\r\nimport { setErrorMessage } from \"../slices/appSlice\";\r\nimport { setTransactions } from \"../slices/transactions/transactionsSlice\";\r\n\r\n/**\r\n * Fetch all transactions\r\n */\r\nexport const fetchTransactions: any = () => async (dispatch: any) => {\r\n    try {\r\n        const transactionService = new TransactionDataService();\r\n        const data = await transactionService.getAllTransactions();\r\n        dispatch(setTransactions(data));\r\n    } catch (error: any) {\r\n        dispatch(setErrorMessage(error));\r\n    }\r\n};"],"names":["dispatch","useAppDispatch","selectedLP","useSelector","state","lps","theme","useTheme","_useState","useState","_useState2","_slicedToArray","rowData","setRowData","useEffect","fetchCashCalls","_jsx","Paper","sx","flex","display","height","children","TableContainer","component","minWidth","minHeight","_jsxs","Table","stickyHeader","TableHead","TableRow","TableCell","backgroundColor","palette","mode","grey","fontFamily","color","text","primary","width","align","TableBody","map","row","shortDocumentName","documentName","date","concat","useStyles","makeStyles","createStyles","datePickers","textField","background","paper","borderColor","borderRadius","_ref","label","error","helperText","mask","disabled","minDate","maxDate","isStartDate","onChange","defaultValue","classes","value","setValue","DatePicker","className","inputFormat","disableFuture","disableHighlightToday","renderInput","props","TextField","_objectSpread","variant","size","fabIcon","marginLeft","alignSelf","pageName","openEditDialog","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","setEditDiaogOpen","stop","apply","arguments","Tooltip","title","Fab","boxShadow","onFocus","e","target","blur","onClick","EditRoundedIcon","autocompleteInputStyles","autocomplete","opacity","textInput","clearIndicator","chart","textAlign","alignContent","searchBox","marginRight","textFildsSmall","inputRoot","main","option","fontWeight","popupIndicator","LPTypes","_selectedLP$country","_selectedLP$mainConta","_selectedLP$relations","_selectedLP$relations2","_selectedLP$address","_selectedLP$address2","_selectedLP$address3","_selectedLP$firstInve","_selectedLP$website","_selectedLP$type","setSelectedLP","setDisabled","autocompleteInputClasses","country","domicile","setDomicile","_useState3","mainContact","_useState4","setmainContact","_useState5","relationshipPartner","_useState6","setRelationshipPartner","_useState7","relationshipSS","_useState8","setRelationshipSS","_useState9","address","split","_useState10","setAddress","_useState11","city","_useState12","setCity","_useState13","postalCode","_useState14","setPostalCode","_useState15","firstInvestment","_useState16","setFirstInvestment","_useState17","website","_useState18","setWebsite","_useState19","type","_useState20","setType","onValueChange","field","Grid","container","spacing","marginTop","item","Box","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","inputProps","style","InputLabelProps","fontSize","justifyContent","xs","Divider","marginBottom","moment","Date","format","Autocomplete","id","popupIcon","ExpandMoreIcon","autoHighlight","autoSelect","autoComplete","isOptionEqualToValue","options","slice","params","InputProps","_selectedLP$fees","_selectedLP$fees2","_selectedLP$capPaidIn","_selectedLP$totalDist","_selectedLP$totalInve","_selectedLP$fees3","_selectedLP$fees4","_selectedLP$capAvaila","_selectedLP$reserved","_selectedLP$dryPowder","_selectedLP$avgDealsA","_selectedLP$tappedOot","_selectedLP$dateTappe","fees","filter","x","feeType","amount","managementFee","setManagementFee","capPaidIn","capitalPaidIn","setCapitalPaidIn","totalDistributions","capitalDistributed","setCapitalDistributed","totalInvestments","capitalInvested","setCapitalinvested","recyclingReserves","setRecyclingReserves","capAvailable","availablecapital","setAvailableCapital","reserved","setReserved","dryPowder","setDryPowder","avgDealsAvailable","numAvgDeals","setNumAvgDeals","tappedOot","tappedOut","setTappedOut","_useState21","dateTappedOut","_useState22","estimatedUntilTappedOut","setEstimatedUntilTapedOut","toLowerCase","amountValueFormatter","_selectedLP$kpis","_selectedLP$kpis2","_selectedLP$kpis3","_selectedLP$kpis4","_selectedLP$kpis5","_selectedLP$kpis6","_selectedLP$kpis7","_selectedLP$kpis8","_selectedLP$kpis9","_selectedLP$kpis10","_selectedLP$kpis11","_selectedLP$kpis12","kpis","netDPI","setNetDPI","grossDPI","setGrossDPI","netTVPI","setNetTVPI","grossTVPI","setGrossTVPI","netIRR","setNetIRR","grossIRR","setGrossIRR","paddingTop","paddingBottom","toFixed","root","overflow","fill","setEditPageName","_useSelector","app","isDarkTheme","editChildDialogOpen","setGridApi","editialogOpen","setEditDialogOpen","selectedCommitmentLocal","setSelectedCommitmentLocal","gridOptions","defaultColDef","DefaultColumnDef","enableCellChangeFlash","enableRangeSelection","animateRows","pagination","enableCellTextSelection","groupDisplayType","statusBar","DefaultStatusPanelDef","getColumnDefs","useMemo","headerName","maxWidth","enableRowGroup","cellStyle","valueFormatter","dateValueFormatter","tooltipField","suppressFiltersToolPanel","quantityValueFormatter","valueGetter","_params$data","_params$data2","data","fundCurrency","toUpperCase","valueSetter","cellRenderer","editable","newValue","loadingOverlayRendererParams","loadingMessage","_selectedLP$commitmen","commitments","setSelectedCommitment","setEditChildDiaogOpen","clsx","getGridTheme","overflowX","AgGridReact","columnDefs","domLayout","onGridReady","api","loadingOverlayComponentParams","loadingOverlayComponent","AGGridLoader","tooltipShowDelay","tooltipHideDelay","components","buttonCellRenderer","alignItems","cursor","_params$data3","_selectedLP$funds","funds","_props$data","_props$data2","commitment","lpId","lpName","name","fundId","committedAmount","handleEditClick","selectedInvetsmentLocal","setSelectedInvetsmentLocal","paginationPageSize","percentageyValueFormatter","_selectedLP$pcos","pcos","setSelectedInvestment","investment","pcoId","participationPercentage","selectedExitLocal","setSelectedExitLocal","_selectedLP$exits","exits","setSelectedExit","switchField","_selectedPCO$id","_selectedPCO$shortNam","newInvestment","setNewInvestment","amountFundCurrency","setAmountFundCurrency","selectedPCO","pcoName","shortName","setFundId","_useSelector2","selectedFund","_useSelector3","investmentType","setInvestmentType","fetchFunds","undefined","length","sort","a","b","getOptionLabel","fundName","optionLabelFund","toString","readOnly","disableClearable","InvestmentType","setLPId","fetchLPs","optionLabelLP","_selectedLP$id","_selectedLP$shortName","_CurrencyList$map","newCommitment","setNewCommitment","setCommittedAmount","currency","setCurrency","transfered","setTransfered","CurrencyList","code","Typography","FormControlLabel","control","Switch","checked","event","labelPlacement","setAmount","setPcoId","fetchPCOs","optionLabel","newDistribution","setNewDistribution","setPCOId","transType","setTransType","_pcos$filter$","setSelectedPCO","LPDistributionTypes","_selectedFund$id","_selectedFund$shortNa","transitionMethod","ref","Slide","direction","Transition","React","AddChildDialogComponent","open","pageTitle","setDialogOpen","newFund","newLP","newPCO","newTransaction","Dialog","TransitionComponent","fullWidth","DialogTitle","flexDirection","IconButton","CloseIcon","DialogContent","AddNewLPCommitmentComponent","AddNewLPToPCOinvestmentComponent","AddNewLPExitComponent","AddNewFundCommitmentComponent","AddNewFundToPCOinvestmentComponent","AddNewFundExitComponent","AddNewPCOInvestmentFromLPComponent","AddNewPCOInvestmentComponent","DialogActions","Button","textTransform","startIcon","AddIcon","sector","securityType","_newInvestment$amount","_newInvestment$fundId","_newInvestment$date","_funds$filter$","amountLocalCurrency","setAmountLocalCurrency","setDateInvestment","selectedFundLocal","setSelectedFundLocal","isFirstOpen","setIsFirstOpen","_funds$filter$2","_newInvestment$amount2","_newInvestment$date2","_funds$filter$3","_InvestmentType$filte","setSelectedFund","invetsmentType","_lps$filter$","setParticipationPercentage","selectedLPLocal","setSelectedLPLocal","_lps$filter$2","_lps$filter$3","amountInvested","setAmountInvested","_newCommitment$date","_newCommitment$commit","_newCommitment$date2","_newCommitment$transf","selectedPCOLocal","setSelectedPCOLocal","_pcos$filter$2","_pcos$filter$3","_newDistribution$date","amountGained","setAmountGained","setDateExit","_newDistribution$amou","_newDistribution$date2","default","nextBtn","backBtn","darken","textDecorationLine","actions","stepper","EditChildDialogComponent","setActiveStepLP","setActiveStepFund","setActiveStepPCO","_useState23","_useState24","selectedCommitment","selectedExit","_useState25","_useState26","_useSelector4","selectedInvestment","_useState27","_useState28","_useState29","_useState30","setSelecetdInvestmentLocal","_useState31","_useState32","_useState33","_useState34","PCOInvestmentEditContentComponent","PCOFundInvestmentEditComponent","PCOLPEditComponent","LPCommitmentEditContentComponent","LPFundsEditContentComponent","LPPCOsEditContentComponent","LPExitsEditContentCmponent","FundCommitmentEditContentComponent","FundLPsEditContentComponent","FundPCOsEditContentComponent","FundsExitEditContentComponent","commitmentsExpanded","setCommitmentsExpanded","fundsExpanded","setFundsExpanded","pcosExpanded","setPCOsExpanded","exitsExpanded","setExitsExpanded","addChildDialogOpen","setAddChildDialogOpen","setPageName","editPageName","handleAccordionExp","expanded","cardName","handleOpenChildDialog","accordion","md","Accordion","borderLeft","borderRight","borderTop","borderBottom","AccordionSummary","expandIcon","pointerEvents","AccordionDetails","padding","LPCommitmentsStepContentTable","bgcolor","transition","AddRoundedIcon","LPFundsStepContentTable","LPPCOsStepContentTable","LPExitsStepContentTable","CustomStepConnector","withStyles","alternativeLabel","top","left","right","active","completed","line","borderTopWidth","StepConnector","CustomStepIcon","icon","success","Check","steps","activeStep","setActiveStep","activeLabel","setActiveLabel","Stepper","orientation","connector","index","Step","StepLabel","StepIconComponent","indexOf","handleSetActiveStep","StepContent","mt","ml","GeneralInformationStepContentComponent","CommitmentsStepContentComponent","LPFinancialsStepContentComponent","KPIAndIRRStepContentComponent","FundTypes","_selectedFund$country","_selectedFund$investm","_selectedFund$finalCl","_selectedFund$currenc","_selectedFund$address","_selectedFund$aifm","_selectedFund$vintage","_selectedFund$aifmCon","_selectedFund$type","investmentComitee","setInvestmentComitee","finalClosingDate","setFinalClosingDate","aifm","setAIFM","vintage","firstClosingDate","setFirstClosingDate","aifmContact","setAIFMContact","onDateChange","_defineProperty","filteredCommitments","flatMap","lp","_lp$commitments","lpShortName","_selectedFund$lps","_selectedFund$pcos","distributions","fetchAllDistributions","filteredData","_selectedFund$pcos$fi","_selectedFund$pcos$fi2","_pcos$filter$0$pcoNam","pcoShortName","exit","distDate","lpsExpanded","setLpsExpanded","numOfCommitments","setNuberOfCommitments","numExit","setNumExit","_distributions$filter","_distributions$filter2","FundCommitmentsStepContentTable","FundLPsStepContentTable","FundPCOsStepContentTable","FundExitsStepContentTable","_selectedFund$sumComm","_selectedFund$sumBase","_selectedFund$termina","_selectedFund$termina2","sumCommittedAmountFundCcy","commitedCapital","setCommittesCapital","sumBaseAmountFundCccy","baseCapital","setBaseCapital","terminatedCommitedCapital","terminatedCommited","setTerminatedCommited","terminatedBaseCapital","terminatedBase","setTerminatedBase","_selectedFund$kpis","_selectedFund$kpis2","_selectedFund$kpis3","_selectedFund$kpis4","_selectedFund$kpis5","_selectedFund$kpis6","_selectedFund$kpis7","_selectedFund$kpis8","_selectedFund$kpis9","_selectedFund$kpis10","_selectedFund$kpis11","_selectedFund$kpis12","FundFinancialsStepContentComponent","PCOStatus","_selectedPCO$country","_selectedPCO$emeraldI","_selectedPCO$dateExit","_selectedPCO$currentS","_selectedPCO$address","_selectedPCO$boardSea","_selectedPCO$dateInit","_selectedPCO$currentD","_selectedPCO$status","_selectedPCO$website","emeraldIndustry2","setSector","dateExit","currentStage","setCurrentStage","boardSeat","setBoardSeat","dateInitalInvestment","dateInvestment","currentDealteam","currentDealTeam","setCurrentDealTeam","status","setStatus","transactions","selectedInvestmentLocal","setSelectedInvestmentLocal","localCcy","_transactions$filter","_funds$filter$0$short","_funds$filter$0$curre","_selectedPCO$localCur","fundCcy","localCurrency","_selectedPCO$lps","_selectedPCO$funds","fund","investmentsExpanded","setInvestmentsExpanded","setLPsExpanded","numOfLPS","PCOInvestmentsStepContentTableComponent","PCOLPsStepContentTable","numOfFunds","PCOFundsStepContentTable","_selectedPCO$amountIn","_selectedPCO$amountIn2","_selectedPCO$grossIRR","_selectedPCO$currentV","_selectedPCO$currentV2","_selectedPCO$realised","_selectedPCO$currentR","_selectedPCO$lastRoun","amountInvestedFundCcy","amountInvestedEUR","setAmountInvestedEUR","amountInvestedLocalCcy","setAmountInvestedLocalCCy","currentValuationPCO","currentValuationOfCompany","setCurrentValuationOfCompany","currentValuationEmerald","valuationEmerald","setValuationEmerald","realised","setRealised","currentRound","setCurrentRound","lastRound","dateLastRound","setdateLastRound","InvestmentsStepContentComponent","PCOFinancialsStepContentComponent","EditDialogComponent","editDialogOpen","stepsLP","stepsFund","stepsPCO","activeStepLP","activeStepFund","activeStepPCO","handleEditBtnClick","handleNext","prevActiveStep","handleBack","LPBasicEditContentComponent","FundBasicEditContentComponent","PCOBasicEditContentComponent","ArrowBackIosNewIcon","endIcon","transform","CashCallDataService","_RestService","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","_baseUrl","_createClass","key","_getAllCashCalls","abrupt","this","fetchData","then","res","catch","err","console","log","RestService","cashCallService","getAllCashCalls","sent","setCashCalls","t0","setErrorMessage","_x","DistributionsDataService","_getAllDistributions","distributionsService","getAllDistributions","setDistributions","TransactionDataService","_getAllTransactions","fetchTransactions","transactionService","getAllTransactions","setTransactions"],"sourceRoot":""}